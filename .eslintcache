[{"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\index.js":"1","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\App.jsx":"2","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\contexts\\Provider.jsx":"3","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Usuario\\Login.jsx":"4","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\components\\Routes\\Private\\Private.jsx":"5","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Aluno\\CadastroAluno.jsx":"6","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\components\\content\\Content.jsx":"7","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\components\\menu\\Menu.jsx":"8","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\components\\menu\\MenuItem.jsx":"9","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\contexts\\StoreContext.js":"10","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\utils\\useStorage.js":"11","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\variaveis.js":"12","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\hooks\\useFetch.js":"13","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Styles\\useStyles.js":"14","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\utils\\mask.jsx":"15","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\components\\content\\Header.jsx":"16","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\utils\\loader.jsx":"17","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Aluno\\Alunos.jsx":"18","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Usuario\\Usuarios.jsx":"19","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Usuario\\CadastroUsuario.jsx":"20","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Servico\\CadastroServico.jsx":"21","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Servico\\Servicos.jsx":"22","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Materia\\CadastroMateria.jsx":"23","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Materia\\Materias.jsx":"24","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Aula\\Aulas.jsx":"25","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Aula\\CadastroAula.jsx":"26","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Empresa\\Empresa.jsx":"27","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Financeiro\\Financeiros.jsx":"28","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Empresa\\CadastroEmpresa.jsx":"29","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Financeiro\\CadastroFinanceiro.jsx":"30","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Home\\Home.jsx":"31","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Contratos\\Contratos.jsx":"32","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Contratos\\CadastroContrato.jsx":"33","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\utils\\storage.js":"34"},{"size":422,"mtime":1652141421412,"results":"35","hashOfConfig":"36"},{"size":851,"mtime":1651896113615,"results":"37","hashOfConfig":"36"},{"size":507,"mtime":1651896113612,"results":"38","hashOfConfig":"36"},{"size":3266,"mtime":1662222785678,"results":"39","hashOfConfig":"36"},{"size":1020,"mtime":1652141534249,"results":"40","hashOfConfig":"36"},{"size":23128,"mtime":1664102199436,"results":"41","hashOfConfig":"36"},{"size":2652,"mtime":1660611962900,"results":"42","hashOfConfig":"36"},{"size":1717,"mtime":1652141421411,"results":"43","hashOfConfig":"36"},{"size":2404,"mtime":1660611965891,"results":"44","hashOfConfig":"36"},{"size":154,"mtime":1651896113612,"results":"45","hashOfConfig":"36"},{"size":446,"mtime":1651896113614,"results":"46","hashOfConfig":"36"},{"size":118,"mtime":1662654610124,"results":"47","hashOfConfig":"36"},{"size":931,"mtime":1651896113612,"results":"48","hashOfConfig":"36"},{"size":1163,"mtime":1651896113620,"results":"49","hashOfConfig":"36"},{"size":3740,"mtime":1664101305851,"results":"50","hashOfConfig":"36"},{"size":2036,"mtime":1664027448719,"results":"51","hashOfConfig":"36"},{"size":271,"mtime":1652141421413,"results":"52","hashOfConfig":"36"},{"size":2353,"mtime":1652141421413,"results":"53","hashOfConfig":"36"},{"size":2539,"mtime":1652141421422,"results":"54","hashOfConfig":"36"},{"size":11541,"mtime":1664101775299,"results":"55","hashOfConfig":"36"},{"size":13572,"mtime":1655255482490,"results":"56","hashOfConfig":"36"},{"size":2114,"mtime":1655255360642,"results":"57","hashOfConfig":"36"},{"size":5303,"mtime":1652141421419,"results":"58","hashOfConfig":"36"},{"size":1895,"mtime":1652141421419,"results":"59","hashOfConfig":"36"},{"size":1809,"mtime":1652141421414,"results":"60","hashOfConfig":"36"},{"size":7554,"mtime":1652141421415,"results":"61","hashOfConfig":"36"},{"size":1861,"mtime":1652141421416,"results":"62","hashOfConfig":"36"},{"size":11520,"mtime":1661125444428,"results":"63","hashOfConfig":"36"},{"size":23123,"mtime":1664027210201,"results":"64","hashOfConfig":"36"},{"size":15548,"mtime":1661124436399,"results":"65","hashOfConfig":"36"},{"size":2860,"mtime":1664028213960,"results":"66","hashOfConfig":"36"},{"size":1030,"mtime":1652141421416,"results":"67","hashOfConfig":"36"},{"size":8773,"mtime":1654825044042,"results":"68","hashOfConfig":"36"},{"size":740,"mtime":1651896113613,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"xkggjn",{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"72"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"72"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"72"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"72"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\index.js",[],["158","159"],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\App.jsx",["160","161","162","163"],"import React from 'react'\r\nimport Menu from '../components/menu/Menu'\r\nimport Content from '../components/content/Content'\r\nimport './App.css'\r\nimport MenuItem from '../components/menu/MenuItem'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport Login from '../views/Usuario/Login'\r\nimport Aluno from './Aluno/CadastroAluno'\r\nimport RoutesPrivate from '../components/Routes/Private/Private'\r\nimport StoreProvider from '../contexts/Provider'\r\n\r\nconst App = props => (   \r\n    <div>\r\n      <StoreProvider>\r\n     <Router>\r\n       <Switch>\r\n       <Route path=\"/login\" component={Login}/>          \r\n       <RoutesPrivate path=\"/\" component={Content}/>             \r\n       </Switch>  \r\n     </Router>       \r\n     </StoreProvider>       \r\n    </div>  \r\n\r\n    \r\n    \r\n)\r\n\r\nexport default App\r\n","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\contexts\\Provider.jsx",[],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Usuario\\Login.jsx",["164"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport { url } from \"../../../src/variaveis\";\r\nimport Loader from \"../../utils/loader\";\r\n\r\nimport \"./Login.css\";\r\n\r\nfunction initialState() {\r\n  return { Login: \"\", Senha: \"\" };\r\n}\r\n\r\nconst UserLogin = () => {\r\n  const [values, setValues] = useState(initialState);\r\n  const [loading,setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const { setToken } = useContext(StoreContext);\r\n  const { setUserLogged} = useContext(StoreContext);\r\n  const history = useHistory();\r\n  const {token} = '';\r\n\r\n  function onChange(event) {\r\n    const { value, name } = event.target;\r\n\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  function onSubmit(event) {\r\n    event.preventDefault();  \r\n    setLoading(true); \r\n    const response = fetch(`${ url }/api/usuario/login`, {\r\n      //const response = fetch(\"https://localhost:44389/api/usuario/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(values),\r\n    }).then((response) => response.json())\r\n      .then((response) => {\r\n        if (response.jwt != null && response.dadosUsuario.login != null) {          \r\n         setToken(response.jwt);\r\n         setUserLogged(response.dadosUsuario);         \r\n         return history.push(\"/\");                        \r\n        } else {\r\n          console.log(\"Deu ruim\");\r\n          console.log(response.jwt);\r\n          console.log(response.dadosUsuario);\r\n          //setToken(response.jwt);\r\n          setError(response);\r\n        }\r\n    //   }).catch(function(error) {\r\n    //     console.log(error);\r\n    //     setError(\"Não foi possível realizar login.\");\r\n    //     setLoading(false);\r\n    // }); \r\n      }).then( () => {\r\n        setLoading(false);\r\n      });        \r\n    console.log(response);\r\n    setValues(initialState);\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n    <div className=\"user-login\">      \r\n      <h1 className=\"user-login__title\">Acessar o Sistema</h1>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"user-login__form-control\">\r\n          <label htmlFor=\"user\">Usuário</label>\r\n          <input\r\n            id=\"user\"\r\n            type=\"text\"\r\n            name=\"Login\"\r\n            onChange={onChange}\r\n            value={values.Login}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"user-login__form-control\">\r\n          <label htmlFor=\"password\">Senha</label>\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            name=\"Senha\"\r\n            onChange={onChange}\r\n            value={values.Senha}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"user-login__error\">{error}</div>\r\n        <button type=\"submit\" className=\"user-login__submit-button\" disabled={loading ? \"disabled\" : ''}>\r\n          Entrar\r\n        </button>\r\n      </form>      \r\n    </div>\r\n    {loading ? \r\n    (\r\n    <div id=\"loader\">\r\n      <Loader/>\r\n    </div>\r\n    ) \r\n    : false}\r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserLogin;\r\n","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\components\\Routes\\Private\\Private.jsx",[],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Aluno\\CadastroAluno.jsx",["165","166","167","168","169","170","171","172","173"],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\components\\content\\Content.jsx",["174"],"import React from \"react\";\r\nimport \"./Content.css\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport CadastroAluno from \"../../views/Aluno/CadastroAluno\";\r\nimport Alunos from \"../../views/Aluno/Alunos\";\r\nimport Menu from \"../menu/Menu\";\r\nimport Header from \"./Header\";\r\nimport CadastroServico from \"../../views/Servico/CadastroServico\";\r\nimport Servicos from \"../../views/Servico/Servicos\";\r\nimport CadastroMateria from \"../../views/Materia/CadastroMateria\";\r\nimport Materias from \"../../views/Materia/Materias\";\r\nimport Aulas from \"../../views/Aula/Aulas\";\r\nimport CadastroAula from \"../../views/Aula/CadastroAula\";\r\nimport Empresas from \"../../views/Empresa/Empresa\";\r\nimport CadastroEmpresa from \"../../views/Empresa/CadastroEmpresa\";\r\nimport Financeiros from \"../../views/Financeiro/Financeiros\";\r\nimport CadastroFinanceiro from \"../../views/Financeiro/CadastroFinanceiro\";\r\nimport CadastroUsuario from \"../../views/Usuario/CadastroUsuario\";\r\nimport Usuarios from \"../../views/Usuario/Usuarios\";\r\nimport Home from \"../../views/Home/Home\";\r\nimport CadastroContrato from \"../../views/Contratos/CadastroContrato\";\r\nimport Contratos from \"../../views/Contratos/Contratos\";\r\nimport Loader from \"../../utils/loader\";\r\n\r\n\r\nconst Content = (props) => (  \r\n  <div className=\"Geral\">    \r\n  <div className=\"Header\"><Header/></div>   \r\n  <div className=\"Menu\"><Menu/></div>   \r\n  <div className=\"PaginaAtual\">      \r\n  <Switch>\r\n          <Route path=\"/cadastroAluno\" component={CadastroAluno} />\r\n          <Route path=\"/alunos\" component={Alunos} />\r\n          <Route path=\"/cadastroServico\" component={CadastroServico}/>\r\n          <Route path=\"/servicos\" component={Servicos}/>\r\n          <Route path=\"/cadastroMateria\" component={CadastroMateria}/>\r\n          <Route path=\"/materias\" component={Materias}/>\r\n          <Route path=\"/aulas\" component={Aulas}/>\r\n          <Route path=\"/cadastroAula\" component={CadastroAula}/>\r\n          <Route path=\"/empresas\" component={Empresas}/>\r\n          <Route path=\"/cadastroEmpresa\" component={CadastroEmpresa}/>\r\n          <Route path=\"/financeiros\" component={Financeiros}/>\r\n          <Route path=\"/cadastroFinanceiro\" component={CadastroFinanceiro}/>\r\n          <Route path=\"/usuarios\" component={Usuarios}/>\r\n          <Route path=\"/cadastroUsuario\" component={CadastroUsuario}/>\r\n          <Route path=\"/cadastroContrato\" component={CadastroContrato}/>\r\n          <Route path=\"/contratos\" component={Contratos}/>\r\n          <Route path=\"/\" component={Home}/>\r\n  </Switch>\r\n  </div>   \r\n  <div className=\"Footer\">Todos direitos reservados @ 2021</div>   \r\n  </div>\r\n);\r\n\r\nexport default Content;\r\n","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\components\\menu\\Menu.jsx",["175","176","177"],"import React ,{useState, useContext} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MenuItemAdmin, MenuItemCliente } from './MenuItem';\r\nimport StoreContext from '../../contexts/StoreContext';\r\n\r\n\r\nconst Menu = (props) => {\r\nconst [sidebar,setSidebar] = useState(false);\r\nconst showSidebar = () => setSidebar(!sidebar);\r\nconst { token, userLogged } = useContext(StoreContext);\r\nconsole.log(userLogged);\r\n if(userLogged.tipoUsuario == 1){\r\n    return (   \r\n        <>    \r\n       \r\n        <nav className=\"nav-menu\">\r\n            <ul className=\"nav-menu-items\">\r\n                {MenuItemAdmin.map((item,index) => {\r\n                    return (\r\n                        <li key={index} className={item.cName}>\r\n                            <Link to={item.path}>\r\n                                {item.icon}\r\n                                <span>{item.title}</span>\r\n                            </Link>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </nav>    \r\n        </>   \r\n        ) \r\n }else {\r\n    return (   \r\n        <>    \r\n       \r\n        <nav className=\"nav-menu\">\r\n            <ul className=\"nav-menu-items\">\r\n                {MenuItemCliente.map((item,index) => {\r\n                    return (\r\n                        <li key={index} className={item.cName}>\r\n                            <Link to={item.path}>\r\n                                {item.icon}\r\n                                <span>{item.title}</span>\r\n                            </Link>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </nav>    \r\n        </>   \r\n        ) \r\n }\r\n\r\n\r\n}\r\n\r\nexport default Menu;\r\n","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\components\\menu\\MenuItem.jsx",["178","179"],"import React from 'react'\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as IoIcons from 'react-icons/io';\r\n\r\nexport const MenuItemAdmin = [\r\n    {\r\n        title: 'Home',\r\n        path: '/',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Empresas',\r\n        path: '/empresas',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Aulas',\r\n        path: '/aulas',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Serviços',\r\n        path: '/servicos',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Matérias',\r\n        path: '/materias',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Alunos',\r\n        path: '/alunos',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Financeiro',\r\n        path: '/financeiros',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Usuários',\r\n        path: '/usuarios',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Contratos',\r\n        path: '/contratos',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    }  \r\n]\r\n\r\nexport const MenuItemCliente = [\r\n    {\r\n        title: 'Home',\r\n        path: '/',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },  \r\n    {\r\n        title: 'Matérias',\r\n        path: '/materias',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },  \r\n    {\r\n        title: 'Aulas',\r\n        path: '/aulas',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Serviços',\r\n        path: '/servicos',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },    \r\n    {\r\n        title: 'Alunos',\r\n        path: '/alunos',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Financeiro',\r\n        path: '/financeiros',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },    \r\n    {\r\n        title: 'Contratos',\r\n        path: '/contratos',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    }        \r\n]","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\contexts\\StoreContext.js",[],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\utils\\useStorage.js",[],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\variaveis.js",[],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\hooks\\useFetch.js",["180","181","182","183","184"],"import { useEffect, useState, useContext } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nexport const useFetch = (url,method, token, body) => {\r\n    const [response,setResponse] = useState({\r\n        data: null,\r\n        loading: true\r\n    })\r\n\r\n    const history = useHistory();\r\n\r\n    function handleErrors(response) {\r\n        if (!response.ok) {\r\n            throw Error(response.statusText);\r\n        }\r\n        return response;\r\n    }\r\n\r\n    useEffect(async function(){\r\n        await fetch(url, { \r\n            method: method, \r\n            headers: new Headers\r\n            ({\r\n                'Authorization': 'Bearer ' + token            \r\n            }),\r\n            body: body       \r\n    })\r\n        \r\n        .then(resp => resp.json())\r\n        .then(json => setResponse({\r\n                data: json,\r\n                loading: false\r\n            }));\r\n    },[url,method])\r\n    return response\r\n}","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Styles\\useStyles.js",[],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\utils\\mask.jsx",["185"],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\components\\content\\Header.jsx",["186","187","188","189","190","191","192","193","194","195","196"],"import {\r\n  MenuItem,\r\n  Paper,\r\n  TextField,\r\n  AppBar,\r\n  Box,\r\n  Toolbar,\r\n  Typography,\r\n  Select,\r\n  FormControl,\r\n  InputLabel\r\n} from \"@material-ui/core\";\r\nimport React, { useContext } from \"react\";\r\nimport StoreContext from '../../contexts/StoreContext';\r\nimport useStyles from \"../../views/Styles/useStyles\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Header = () => {\r\n  const { token, setToken } = useContext(StoreContext);\r\n  const { userLogged, setUserLogged } = useContext(StoreContext);\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  // useEffect(() => {\r\n  // },[userLogged])\r\n\r\n  if (token != null) {\r\n\r\n    const showEmpresas = () => {\r\n      return userLogged.empresa.map((emp) => (\r\n        <MenuItem value={emp.id}>{emp.razaoSocial}</MenuItem>\r\n      ));\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n      const { name, value } = e.target;\r\n      var newEmpresa = userLogged.empresa.filter((emp) => (\r\n        emp.id == value\r\n      ))     \r\n      setUserLogged({ ...userLogged, empresaId: newEmpresa[0].id, empresaNome: newEmpresa[0].razaoSocial })\r\n      history.push('/');      \r\n    }\r\n\r\n    return (\r\n      <div className=\"Header\" >\r\n\r\n        <label>Empresa</label>\r\n        <FormControl sx={{ m: 1, minWidth: 120 }} variant=\"standard\">\r\n          <Select\r\n            className=\"header-select\"\r\n            labelId=\"empresaNome\"\r\n            id=\"empresaNome\"\r\n            name=\"empresaNome\"\r\n            onChange={handleChange}\r\n            label=\"Empresa\"\r\n            value={userLogged.empresaId}            \r\n          >\r\n            {userLogged.empresa.length > 0\r\n              ? showEmpresas()\r\n              : false}\r\n          </Select>\r\n        </FormControl>\r\n\r\n\r\n        <label>Olá </label>\r\n        <strong>{userLogged.pessoaNome}</strong>\r\n\r\n        <button type=\"button\" onClick={() => setToken(null)}>Sair</button>\r\n      </div>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <></>\r\n    )\r\n  }\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\utils\\loader.jsx",[],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Aluno\\Alunos.jsx",[],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Usuario\\Usuarios.jsx",["197","198","199","200","201","202","203","204","205"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Button, Grid, MenuItem, Paper, TextField } from \"@material-ui/core\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\nimport \"./Usuarios.css\";\r\nimport { url } from \"../../../src/variaveis\";\r\n\r\n\r\nconst Usuarios = () => {\r\n  const { token, userLogged } = useContext(StoreContext);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\nconsole.log(token);\r\nconsole.log(userLogged);\r\n\r\n  const response = useFetch(`${ url }/api/usuariosPorEmpresa/${userLogged.empresaId}`,\"get\",token);\r\n  \r\n  const initialValues = {\r\n    TipoUsuario: \"\",\r\n    EmpresaId: \"\",\r\n    PessoaId: \"\",\r\n    Login: \"\",\r\n    Senha: \"\",\r\n    showPassword: false,\r\n  };\r\n\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  function editarUsuario(id) {\r\n    history.push(`/cadastroUsuario/${id}`)\r\n  }\r\n\r\n  function novoUsuario() {\r\n    history.push(\"/cadastroUsuario\")\r\n  }\r\n\r\n  function showUsuarios(usuarios) {\r\n    console.log(usuarios);\r\n    return (\r\n      usuarios.map((usuario) => (\r\n        <tr onClick={() => editarUsuario(usuario.id)}>\r\n          <td key={usuario.id}>{usuario.id}</td>\r\n          <td key={usuario.empresaNome}>{usuario.empresaNome}</td>\r\n          <td key={usuario.pessoaNome}>{usuario.pessoaNome}</td>\r\n          <td key={usuario.login}>{usuario.login}</td>\r\n          <td key={usuario.tipoUsuario}>{usuario.tipoUsuario === 1 ? \"Administrador\" : \"Cliente\"}</td>\r\n          <td key={usuario.ativo}>{usuario.ativo === true ? \"Ativo\" : \"Inativo\"}</td>\r\n        </tr>\r\n      ))\r\n    )\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"lista-usuarios\">\r\n      <h1>Usuários</h1>\r\n\r\n      <div className=\"btn-novo\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={novoUsuario}\r\n          className=\"btn-novo\"\r\n        >\r\n          Novo\r\n        </Button>\r\n      </div>\r\n\r\n\r\n      <table id=\"financeiros\">\r\n        <tbody>\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>Empresa</th>\r\n            <th>Pessoa</th>\r\n            <th>Login</th>\r\n            <th>Tipo</th>\r\n            <th>Status</th>\r\n          </tr>\r\n          {response.data ?\r\n            showUsuarios(response.data)\r\n            : false}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Usuarios;\r\n","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Usuario\\CadastroUsuario.jsx",["206","207","208","209","210","211","212","213"],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Servico\\CadastroServico.jsx",["214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254"],"import React, { useContext, useState, useEffect, Component } from \"react\";\r\nimport { Formik, Field, Form, useFormik, FieldArray } from \"formik\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useHistory } from \"react-router\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport ScopedCssBaseline from \"@material-ui/core/ScopedCssBaseline\";\r\nimport lifecycle, { componentDidMount, componentDidUpdate } from 'react-pure-lifecycle';\r\n\r\nimport {\r\n  Button,\r\n  Divider,\r\n  FormControl,\r\n  FormLabel,\r\n  Grid,\r\n  InputLabel,\r\n  ListItemText,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n  withStyles,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Dialog,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport { purple } from \"@material-ui/core/colors\";\r\nimport { currencyMask, onlyLetters, currencyMaskList } from \"../../utils/mask\";\r\nimport { url } from \"../../../src/variaveis\";\r\n\r\nfunction CadastroServico() {\r\n  const { token, userLogged } = useContext(StoreContext);\r\n  const aulasResponse = useFetch(`${ url }/api/aulaPorEmpresa/${userLogged.empresaId}`,\"get\",token);\r\n  const history = useHistory();\r\n  const editarServicoId = window.location.pathname.split(\"/\");\r\n  var editarServicoUrl = \"\";\r\n\r\n  if (editarServicoId[2] != null) {\r\n    editarServicoUrl = `${ url }/api/servico/${editarServicoId[2]}`;\r\n  }\r\n\r\n  const servicoResponse = useFetch(editarServicoUrl,\"get\",token);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const initialValues = {\r\n    Id: 0,\r\n    Descricao: \"\",\r\n    Valor: \"\",\r\n    Fidelidade: false,\r\n    TipoMulta: 0,\r\n    ValorMulta: \"\",\r\n    EmpresaId: userLogged.empresaId,\r\n    QtdAulas: \"\",\r\n    ServicosAulas: [],\r\n  };\r\n\r\n  const [values, setValues] = useState(initialValues);\r\n  const alertas = {\r\n    text: \"\",\r\n    title: \"\"\r\n  }\r\n  const [mensagem, setMensagem] = useState(alertas);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const validadorServicosAulas = () => {\r\n    var validador = false;    \r\n    for (var i = 0; i < values.QtdAulas; i++) {      \r\n      if (values.ServicosAulas[i] != null && values.ServicosAulas[i].AulaId == \"\") {\r\n        validador = false;\r\n      }\r\n      else {\r\n        validador = true;\r\n      }\r\n    }\r\n    console.log(validador);\r\n    return validador;\r\n  }\r\n\r\n  const validadorForm = () => {\r\n    console.log(\"validadorForm()\")\r\n    if (values.Descricao == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário selecionar uma descrição\" });\r\n      setOpen(true);\r\n    } else if (values.Valor == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar valor\" });\r\n      setOpen(true);\r\n    } else if (values.QtdAulas == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar quantidade de aulas\" });\r\n      setOpen(true);\r\n    } else if (values.ServicosAulas[0].AulaId == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário selecionar pelo menos uma aula\" });\r\n      setOpen(true);\r\n    } else if (values.QtdAulas > 0 && !validadorServicosAulas()) {\r\n      console.log(\"values.QtdAulas > 0 && !validadorServicosAulas()\")\r\n      for (var i = 0; i <= values.QtdAulas; i++) {\r\n        if (values.ServicosAulas[i] != null && values.ServicosAulas[i].AulaId == \"\") {\r\n          setMensagem({ ...values, title: \"Alerta!\", text: \"Falta selecionar aula do serviço\" });\r\n          setOpen(true);\r\n        }\r\n      }  \r\n    } else if (values.Fidelidade == true && (values.TipoMulta == \"\" || values.ValorMulta == \"\")){\r\n        if(values.TipoMulta == \"\"){\r\n          setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar tipo de multa quando tem fidelidade\" });\r\n          setOpen(true);\r\n        }\r\n        if(values.ValorMulta == \"\"){\r\n          setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar valor de multa quando tem fidelidade\" });\r\n          setOpen(true);\r\n        } \r\n    }  else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  const handleClickOpen = () => {\r\n    console.log(\"handleClickOpen()\");  \r\n    if (validadorForm())  {\r\n        \r\n        handleSubmit();\r\n      }\r\n      else {\r\n        console.log(\"form invalido\");\r\n      }      \r\n    }     \r\n       \r\n  \r\n  const methods = {\r\n    componentDidUpdate(isFormValid) {\r\n      return true;\r\n    }\r\n  };\r\n\r\nconst handleClose = () => {\r\n  setOpen(false);\r\n};\r\n\r\nuseEffect(\r\n  function () {\r\n    if (servicoResponse.data != null) {\r\n      var servicos = [];\r\n      servicoResponse.data.servicosAulas.map((servico) =>\r\n        servicos.push({ AulaId: servico.aulaId })\r\n      );\r\n\r\n      setValues((prevState) => ({\r\n        Id: servicoResponse.data.id,\r\n        Descricao: servicoResponse.data.descricao,\r\n        Valor: currencyMaskList(parseFloat(servicoResponse.data.valor).toFixed(2)),\r\n        TipoMulta: servicoResponse.data.tipoMulta,\r\n        Fidelidade: servicoResponse.data.fidelidade,\r\n        EmpresaId: servicoResponse.data.empresaId,\r\n        ValorMulta: servicoResponse.data.valorMulta,\r\n        ServicosAulas: servicos,\r\n        QtdAulas: servicoResponse.data.qtdAulas,\r\n      }));\r\n    }\r\n  },\r\n  [servicoResponse]\r\n);\r\n\r\nuseEffect(\r\n  function () {\r\n    if (values.QtdAulas > 0) {\r\n      const ServicosAulas = [...values.ServicosAulas];\r\n      const QtdAulas = values.QtdAulas || 0;\r\n      const previousNumber = ServicosAulas.length || 0;\r\n      if (previousNumber < QtdAulas) {\r\n        for (let i = previousNumber; i < QtdAulas; i++) {\r\n          ServicosAulas.push({ AulaId: \"\" });\r\n        }\r\n      } else {\r\n        for (let i = previousNumber; i >= QtdAulas; i--) {\r\n          ServicosAulas.splice(i, 1);\r\n        }\r\n      }\r\n      setValues({ ...values, ServicosAulas });\r\n    }\r\n  },\r\n  [values.QtdAulas]\r\n);\r\n\r\nconst handleChange = (e) => {  \r\n  var { name, value } = e.target;  \r\n  setValues({ ...values, [name]: value });\r\n};\r\n\r\nconst handleCheckChange = (e) => {\r\n  const { name, checked } = e.target;\r\n  setValues({ ...values, [name]: e.target.checked });\r\n};\r\n\r\nconst handleChangeAula = (e) => {\r\n  const { name, value, index, select } = e.target;\r\n  const AulaIdIndex = name.substring(13, 14);\r\n  console.log(AulaIdIndex);\r\n  console.log(value);\r\n\r\n  var ServicosAulas = [...values.ServicosAulas]; //servicos que tem atualmente\r\n  ServicosAulas.splice(AulaIdIndex, 1, { AulaId: value }); //preencher item selecionado\r\n  setValues({ ...values, ServicosAulas });\r\n};\r\n\r\n\r\nconst tratarDecimal = (e) => {\r\n  if(e == 0)\r\n  return 0\r\n  else\r\n  return e.replace(\".\",\"\").replace(\",\",\".\");\r\n}\r\n\r\nfunction handleSubmit(e) {\r\n  debugger;\r\n  setLoading(true);\r\n  console.log(\"enviando...\",values);\r\n  var dados = values;\r\n  dados.Valor = tratarDecimal(values.Valor);\r\n  dados.ValorMulta = tratarDecimal(values.ValorMulta);\r\n\r\n  const response = fetch(`${ url }/api/servico`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: 'Bearer  '+token,\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(dados),\r\n  })\r\n    .then((response) => response.json())\r\n    .then((response) => {\r\n      if (response != null) {\r\n        setMensagem({ ...values, title: \"Sucesso!\", text: response })\r\n        setOpen(true);\r\n      } else {\r\n        setMensagem({ ...values, title: \"Erro!\", text: \"Erro ao cadastrar serviço\" })\r\n        setOpen(true);\r\n      }\r\n    })\r\n    .then(() => {\r\n      setLoading(false);\r\n    })\r\n}\r\n\r\nconst classes = useStyles();\r\n\r\nreturn (\r\n  <React.Fragment>\r\n    <main className={classes.layout}>\r\n      <Paper className={classes.paper}>\r\n        <form>\r\n          <div className={classes.titulo}>\r\n            <h1>Cadastro de Serviço</h1>\r\n          </div>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <div className={classes.subtitulo}>\r\n                <h4>Dados do Serviço</h4>\r\n                <Divider />\r\n              </div>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={10}>\r\n              <TextField\r\n                id=\"Descricao\"\r\n                name=\"Descricao\"\r\n                label=\"Descrição\"\r\n                value={values.Descricao}\r\n                onChange={handleChange}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={2}>\r\n              <TextField              \r\n                id=\"Valor\"\r\n                name=\"Valor\"\r\n                label=\"Valor\"                \r\n                fullWidth\r\n                value={values.Valor}\r\n                onChange={(e) => handleChange(currencyMask(e))}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={2}>\r\n              <FormLabel>Fidelidade</FormLabel>\r\n\r\n              <Switch\r\n                color=\"primary\"\r\n                name=\"Fidelidade\"\r\n                value={values.Fidelidade}\r\n                checked={values.Fidelidade}\r\n                onChange={handleCheckChange}\r\n                inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n              { values.Fidelidade ? \r\n              (\r\n                <> \r\n                <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"TipoMulta\"\r\n                  name=\"TipoMulta\"\r\n                  label=\"Tipo de Multa\"\r\n                  fullWidth\r\n                  value={values.TipoMulta}\r\n                  onChange={handleChange}\r\n                  select\r\n                >\r\n                  <MenuItem value=\"1\">Percentual</MenuItem>\r\n                  <MenuItem value=\"2\">Fixo</MenuItem>\r\n                </TextField>\r\n              </Grid>\r\n               <Grid item xs={12} sm={2}>\r\n               <TextField\r\n                 id=\"ValorMulta\"\r\n                 name=\"ValorMulta\"\r\n                 label=\"Valor Multa\"\r\n                 value={values.ValorMulta}\r\n                 onChange={(e) => handleChange(currencyMask(e))}\r\n                 fullWidth\r\n               />\r\n             </Grid> \r\n             </>             \r\n              )\r\n            : false }\r\n          \r\n\r\n           \r\n\r\n            <Grid item xs={12} sm={2}>\r\n              <TextField\r\n                id=\"QtdAulas\"\r\n                name=\"QtdAulas\"\r\n                label=\"Qtd. Aulas\"\r\n                fullWidth\r\n                select\r\n                value={values.QtdAulas}\r\n                onChange={handleChange}\r\n              >\r\n                {[1, 2, 3, 4, 5, 6, 7].map((i) => (\r\n                  <MenuItem value={i}>{i}</MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <div className={classes.subtitulo}>\r\n                <h4>Aulas do Serviço</h4>\r\n                <Divider />\r\n              </div>\r\n            </Grid>\r\n\r\n            {values.ServicosAulas.map((ServicosAula, j) => (\r\n              <Grid item xs={12} sm={3}>\r\n                <FormControl className={classes.formControl}>\r\n                  <div>\r\n                    <h5 className=\"card-title\">Aula {j + 1}</h5>\r\n                    <Select\r\n                      onChange={handleChangeAula}\r\n                      name={`ServicosAulas${[j]}.AulaId`}\r\n                      value={values.ServicosAulas[j].AulaId}\r\n                    >\r\n                      {aulasResponse.data.map((aula, i) => (\r\n                        <MenuItem\r\n                          key={i}\r\n                          value={aula.id}\r\n                        >\r\n                          {aula.dia +\r\n                            \" (\" +\r\n                            aula.horaInicio +\r\n                            \"-\" +\r\n                            aula.horaFim +\r\n                            \")\"}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </div>\r\n                </FormControl>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n\r\n          <div className={classes.buttons}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"inherit\"\r\n              className={classes.button}\r\n            >\r\n              Limpar\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n              className={classes.button}\r\n              disabled={loading}\r\n            >\r\n              Cadastrar\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Paper>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{mensagem.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {mensagem.text}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        {(mensagem.text == \"Serviço cadastrado\" || mensagem.text == \"Serviço atualizado\") ?\r\n          <Button onClick={() => { handleClose(); history.push(\"/servicos\"); }}>Ok</Button>\r\n          : <Button onClick={handleClose}>Ok</Button>}\r\n\r\n      </Dialog>\r\n    </main>\r\n  </React.Fragment>\r\n);\r\n                          }\r\nexport default CadastroServico;\r\n","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Servico\\Servicos.jsx",["255","256"],"import React , { useContext } from \"react\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Servicos.css\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { url } from \"../../../src/variaveis\";\r\nimport { onlyLetters, currencyMask, currencyMaskList } from \"../../utils/mask\";\r\n\r\nconst Servicos = () => {\r\n  const history = useHistory();\r\n  const { token, userLogged } = useContext(StoreContext); \r\n  const response = useFetch(`${ url }/api/servicoPorEmpresa/${userLogged.empresaId}`,\"get\",token); \r\n  \r\n  function novoServico() {\r\n    history.push(\"/cadastroServico\");\r\n  }\r\n\r\n  function editarServico(id) {\r\n    history.push(`/cadastroServico/${id}`);\r\n  }\r\n\r\n  console.log(response);\r\n  function showServicos(servicos) {\r\n    return servicos.map((servico) => (      \r\n      <tr onClick={() => editarServico(servico.id)}>\r\n        <td key={servico.id}>{servico.id}</td>\r\n        <td key={servico.descricao}>{servico.descricao}</td>\r\n        <td key={servico.valor}>{currencyMaskList(parseFloat(servico.valor).toFixed(2))}</td>\r\n        <td key={servico.qtdAulas}>{servico.qtdAulas}</td>\r\n        <td key={servico.fidelidade}>{servico.fidelidade ? \"SIM\" : \"NÃO\"}</td>\r\n      </tr>\r\n    ));\r\n  }\r\n  return (\r\n    <div className=\"lista-servicos\">\r\n      <h1>Serviços</h1>\r\n      <div className=\"btn-novo\">\r\n          <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                onClick={novoServico}\r\n                className=\"btn-novo\"                \r\n              >\r\n                Novo Serviço\r\n              </Button>\r\n          </div>\r\n      <table id=\"servicos\">\r\n        <tbody>\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>Descrição</th>\r\n            <th>Valor</th>\r\n            <th>Qtd. Aulas</th>\r\n            <th>Fidelidade</th>\r\n          </tr>\r\n          {response.data ? showServicos(response.data) : false}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Servicos;\r\n","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Materia\\CadastroMateria.jsx",["257","258","259","260","261","262","263"],"import { Button, Grid, Paper, TextField,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,  \r\n  Dialog,\r\n  } from \"@material-ui/core\";\r\nimport { url } from \"../../../src/variaveis\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction CadastroMateria() {\r\n  const { token, userLogged } = useContext(StoreContext);  \r\n  const [open, setOpen] = useState(false);\r\n  const history = useHistory();\r\n      //montar URL para editar matéria\r\n      var editando = false;\r\n      var editarMateriaUrl = \"\";    \r\n      const editarMateriaId = window.location.pathname.split(\"/\");\r\n      if (editarMateriaId[2] != null){\r\n        editarMateriaUrl =  `${url}/api/materia/${editarMateriaId[2]}`;  \r\n        editando = true;    \r\n      }\r\n  \r\n      const materiaResponse = useFetch(editarMateriaUrl,\"get\",token);\r\n      const [loading, setLoading] = useState(true);  \r\n\r\n  const initialValues = {\r\n    Id: 0,\r\n    Nome: \"\",\r\n    EmpresaId: userLogged.empresaId,\r\n  };\r\n\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  const alertas = {\r\n    text: \"\",\r\n    title: \"\"\r\n  }\r\n\r\n  const [mensagem, setMensagem] = useState(alertas);\r\n\r\n  const handleClickOpen = () => {      \r\n    if (validadorForm()) {\r\n      handleSubmit();      \r\n    } else {\r\n      console.log(\"form inválido\");\r\n    }\r\n  };\r\n\r\n  const validadorForm = () => {\r\n    if(values.Nome == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar nome da matéria\" });\r\n      setOpen(true);      \r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(\r\n    function(){\r\n      if (materiaResponse.data != null){\r\n        setValues((prevState) => ({\r\n          Id:  materiaResponse.data.id,\r\n          Nome: materiaResponse.data.nome,\r\n          EmpresaId: materiaResponse.data.empresaId,\r\n        }));\r\n      };\r\n    },\r\n    [materiaResponse]\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: e.target.value });\r\n  };\r\n\r\n  function handleSubmit(e) {\r\n    alert(\"Sucess: \\n\\n\" + JSON.stringify(values, null, 4));\r\n    console.log(values);    \r\n\r\n    const response = fetch(`${url}/api/materia/`, {          \r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: 'Bearer '+token,\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(values),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (response === \"Matéria cadastrada\" || response === \"Matéria atualizada\") {\r\n          setMensagem({ ...values, title: \"Sucesso!\", text: response })\r\n          setOpen(true);\r\n         } \r\n        else {\r\n          setMensagem({ ...values, title: \"Erro!\", text: \"Erro ao cadastrar matéria\" })\r\n          setOpen(true);\r\n        }\r\n      });\r\n  }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <div className={classes.titulo}>\r\n            <h1>Cadastro de Matéria</h1>\r\n          </div>\r\n          <form >\r\n              <Grid container spacing={3}>\r\n                  <Grid item xs={12}>\r\n                      <TextField \r\n                         id=\"Nome\"\r\n                         name=\"Nome\"\r\n                         label=\"Nome\"\r\n                         fullWidth\r\n                         onChange={handleChange}\r\n                         value={values.Nome}\r\n                      />\r\n                  </Grid>\r\n              </Grid>\r\n              <div className={classes.buttons}>\r\n              {editando\r\n              ? false\r\n              : <Button\r\n              variant=\"contained\"\r\n              color=\"inherit\"\r\n              className={classes.button}\r\n            >\r\n              Limpar\r\n            </Button>}\r\n             \r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n                className={classes.button}\r\n              >\r\n                {editando ? \"Atualizar\" : \"Cadastrar\"}\r\n              </Button>\r\n            </div>\r\n          </form>        \r\n        </Paper>\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{mensagem.title}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {mensagem.text}\r\n            </DialogContentText>\r\n          </DialogContent>          \r\n\r\n          {(mensagem.text == \"Matéria cadastrada\" || mensagem.text == \"Matéria atualizada\") ?     \r\n            <Button onClick={() => { handleClose(); history.push(\"/materias\"); }}>Ok</Button>\r\n             : <Button onClick={handleClose}>Ok</Button>} \r\n          \r\n        </Dialog>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CadastroMateria;\r\n","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Materia\\Materias.jsx",["264"],"import React, { useContext } from \"react\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport \"./Materias.css\"\r\nimport { Button } from \"@material-ui/core\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport { url } from \"../../../src/variaveis\";\r\n\r\nfunction Materias() {\r\n  const { token, userLogged } = useContext(StoreContext);\r\n\r\n  const response = useFetch(`${ url }/api/materiaPorEmpresa/${userLogged.empresaId}`,\"get\",token);\r\n\r\n  const history = useHistory();\r\n\r\n  const classes = useStyles();\r\n\r\n  function novaMateria(){\r\n    history.push(\"/cadastroMateria\")\r\n  }\r\n\r\n  function editarMateria(id){\r\n    history.push(`/cadastroMateria/${id}`)\r\n  }\r\n\r\n  function showMaterias(materias){\r\n    return (\r\n      materias.map((materia) => (\r\n        <tr onClick={() => editarMateria(materia.id)}>\r\n          <td key={materia.id}>{materia.id}</td>      \r\n          <td key={materia.nome}>{materia.nome}</td>          \r\n        </tr>\r\n      ))   \r\n    )\r\n  }\r\n  return (         \r\n        <div className=\"lista-materias\">\r\n          <h1>Matérias</h1>\r\n          <div className=\"btn-novo\">\r\n          <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                onClick={novaMateria}\r\n                className=\"btn-novo\"                \r\n              >\r\n                Nova Matéria\r\n              </Button>\r\n          </div>\r\n         \r\n          <table id=\"materias\">\r\n            <tbody>\r\n              <tr>\r\n                <th>Id</th>                              \r\n                <th>Nome</th>   \r\n              </tr>\r\n              {response.data ? showMaterias(response.data) : false}             \r\n            </tbody>\r\n          </table>\r\n        </div>     \r\n    \r\n  );\r\n}\r\n\r\nexport default Materias;\r\n","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Aula\\Aulas.jsx",["265"],"import { Button } from \"@material-ui/core\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport \"./Aulas.css\"\r\nimport { url } from \"../../../src/variaveis\";\r\n\r\n\r\nfunction Aulas() {\r\n  const { token, userLogged } = useContext(StoreContext); \r\n  const response = useFetch(`${ url }/api/aulaPorEmpresa/${userLogged.empresaId}`, \"get\",token);\r\n\r\n  const history = useHistory();\r\n\r\n  function novaAula() {\r\n    history.push(\"/cadastroaula\");\r\n  }\r\n\r\n  function editarAula(id) {\r\n    history.push(`/cadastroAula/${id}`);\r\n  }\r\n\r\n  \r\n  function showAulas(aulas) {\r\n    return aulas.map((aula) => (\r\n      <tr onClick={() => editarAula(aula.id)}>\r\n        <td>{aula.id}</td>  \r\n        <td>{aula.dia}</td>\r\n        <td>{aula.horaInicio}</td>\r\n        <td>{aula.horaFim}</td>\r\n        <td>{aula.vagas}</td>       \r\n      </tr>\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <div className=\"lista-aulas\">\r\n      <h1>Aulas</h1>\r\n      <div className=\"btn-novo\">\r\n          <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                onClick={novaAula}\r\n                className=\"btn-novo\"                \r\n              >\r\n                Nova Aula\r\n              </Button>\r\n          </div>\r\n      <table id=\"aulas\">\r\n        <tbody>\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>Dia</th>\r\n            <th>Hora Inicio</th>\r\n            <th>Hora Fim</th>\r\n            <th>Vagas</th>           \r\n          </tr>\r\n          {response.data ? showAulas(response.data) : false}\r\n          {console.log(response.data)}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Aulas;\r\n","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Aula\\CadastroAula.jsx",["266","267","268","269","270","271","272","273","274","275","276","277"],"import React, { useContext, useState, useEffect } from 'react'\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport { Button, \r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Dialog,\r\n  Tooltip, } from \"@material-ui/core\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport { useFetch } from '../../hooks/useFetch';\r\nimport { useHistory } from \"react-router\";\r\nimport { horarioMask, onlyNumbersMax5 } from '../../utils/mask';\r\nimport { url } from \"../../../src/variaveis\";\r\n\r\nfunction CadastroAula(){\r\n    const { token, userLogged } = useContext(StoreContext);      \r\n    const history = useHistory();\r\n    const [open, setOpen] = useState(false);\r\n    //montar URL para editar aula\r\n    var editando = false;\r\n    var editarAulaUrl = \"\";    \r\n    const editarAulaId = window.location.pathname.split(\"/\");\r\n    if (editarAulaId[2] != null){\r\n      editarAulaUrl =  `${ url }/api/aula/${editarAulaId[2]}`;\r\n      editando = true;      \r\n    }\r\n\r\n    const aulaResponse = useFetch(editarAulaUrl,\"get\",token);\r\n    const [loading, setLoading] = useState(true);  \r\n\r\n    const initialValues = {\r\n      Id: 0,\r\n      Dia: \"\",\r\n      HoraInicio: \"\",\r\n      HoraFim: \"\",\r\n      Vagas: \"\",\r\n      EmpresaId: userLogged.empresaId,\r\n  }\r\n\r\n  const alertas = {\r\n    text: \"\",\r\n    title: \"\"\r\n  }\r\n\r\n  const [mensagem, setMensagem] = useState(alertas);\r\n\r\n  const handleClickOpen = () => {      \r\n    if (validadorForm()) {\r\n      handleSubmit();      \r\n    } else {\r\n      console.log(\"form inválido\");\r\n    }\r\n  };\r\n\r\n  const validadorForm = () => {\r\n    if(values.Dia == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar dia da aula\" });\r\n      setOpen(true);      \r\n    } else if(values.HoraInicio == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar horário de inicio\" });\r\n      setOpen(true);      \r\n    } else if(values.HoraFim == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar horário de fim\" });\r\n      setOpen(true);      \r\n    } else if(values.Vagas == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar quantidade de vagas\" });\r\n      setOpen(true);      \r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n    useEffect(\r\n      function(){\r\n        if (aulaResponse.data != null){\r\n          setValues((prevState) => ({\r\n            Id:  aulaResponse.data.id,\r\n            Dia: aulaResponse.data.dia,\r\n            HoraInicio:  aulaResponse.data.horaInicio,\r\n            HoraFim:  aulaResponse.data.horaFim,\r\n            Vagas:  aulaResponse.data.vagas,\r\n            EmpresaId: aulaResponse.data.empresaId,\r\n          }));\r\n        };\r\n      },\r\n      [aulaResponse]\r\n    );\r\n\r\n    const [values,setValues] = useState(initialValues);\r\n    \r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setValues({...values, [name]: e.target.value});\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        alert(\"Sucess: \\n\\n\" + JSON.stringify(values, null, 4));\r\n        console.log(values);\r\n\r\n        const response = fetch(`${ url }/api/aula`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: 'Bearer '+token,\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(values),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((response) => {\r\n          if (response === \"Aula cadastrada\" || response === \"Aula atualizada\") {\r\n            setMensagem({ ...values, title: \"Sucesso!\", text: response })\r\n            setOpen(true);\r\n           } \r\n          else {\r\n            setMensagem({ ...values, title: \"Erro!\", text: \"Erro ao cadastrar aula\" })\r\n            setOpen(true);\r\n          }\r\n        });\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n          <main className={classes.layout}>\r\n            <Paper className={classes.paper}>\r\n              <div className={classes.titulo}>\r\n                <h1>Cadastro de Aula</h1>\r\n              </div>\r\n              <form onSubmit={handleSubmit}>\r\n                  <Grid container spacing={3}>\r\n                      <Grid item xs={12} sm={3}>\r\n                          <TextField \r\n                             id=\"Dia\"\r\n                             name=\"Dia\"\r\n                             label=\"Dia da Semana\"                             \r\n                             onChange={handleChange}\r\n                             value={values.Dia}\r\n                          />\r\n                      </Grid>\r\n                      <Grid item xs={3}>\r\n                          <TextField \r\n                             id=\"HoraInicio\"\r\n                             name=\"HoraInicio\"\r\n                             label=\"Hora Inicio\"                             \r\n                             onChange={(e) => {handleChange(horarioMask(e))}}\r\n                             value={values.HoraInicio}\r\n                          />\r\n                      </Grid>\r\n                      <Grid item xs={3}>\r\n                          <TextField \r\n                             id=\"HoraFim\"\r\n                             name=\"HoraFim\"\r\n                             label=\"Hora Fim\"                             \r\n                             onChange={(e) => {handleChange(horarioMask(e))}}\r\n                             value={values.HoraFim}\r\n                          />\r\n                      </Grid>\r\n                      <Grid item xs={3}>\r\n                          <TextField \r\n                             id=\"Vagas\"\r\n                             name=\"Vagas\"\r\n                             label=\"Qtd. Vagas\"                             \r\n                             onChange={(e) => {handleChange(onlyNumbersMax5(e))}}\r\n                             value={values.Vagas}\r\n                          />\r\n                      </Grid>\r\n                  </Grid>\r\n                  <div className={classes.buttons}>\r\n              {editando\r\n              ? false\r\n              : <Button\r\n              variant=\"contained\"\r\n              color=\"inherit\"\r\n              className={classes.button}\r\n            >\r\n              Limpar\r\n            </Button>}\r\n             \r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n                className={classes.button}\r\n              >\r\n                {editando ? \"Atualizar\" : \"Cadastrar\"}\r\n              </Button>\r\n            </div>\r\n              </form>\r\n            </Paper>\r\n            <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{mensagem.title}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {mensagem.text}\r\n            </DialogContentText>\r\n          </DialogContent>          \r\n\r\n          {(mensagem.text == \"Aula cadastrada\" || mensagem.text == \"Aula atualizada\") ?     \r\n            <Button onClick={() => { handleClose(); history.push(\"/aulas\"); }}>Ok</Button>\r\n             : <Button onClick={handleClose}>Ok</Button>} \r\n          \r\n        </Dialog>\r\n          </main>\r\n        </React.Fragment>\r\n      );\r\n\r\n}\r\n\r\nexport default CadastroAula;","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Empresa\\Empresa.jsx",[],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Financeiro\\Financeiros.jsx",["278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Button, Checkbox, Dialog, DialogContent, DialogContentText, DialogTitle, Grid, MenuItem, TextField, TablePagination, Table } from \"@material-ui/core\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\nimport \"./Financeiros.css\";\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { onlyLetters, currencyMask, currencyMaskList } from \"../../utils/mask\";\r\nimport { url } from \"../../../src/variaveis\";\r\n\r\nconst Financeiros = () => {\r\n  const { token, userLogged } = useContext(StoreContext);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const response = useFetch(`${ url }/api/financeiroPorEmpresa/${userLogged.empresaId}`,\"get\",token);\r\n  const [listaFinanceiros, setListaFinanceiros] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setListaFinanceiros(response.data);    \r\n  }, [response])\r\n\r\n  var CurrencyFormat = require('react-currency-format');\r\n\r\n  const initialValues = {\r\n    Id: 0,\r\n    AlunoId: 0,\r\n    NomeAluno: \"\",\r\n    DataVencimento: \"\",\r\n    Valor: 0,\r\n    FormaPagamento: \"\",\r\n    Situacao: 0,\r\n    EmpresaId: 0,\r\n  }\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  const filtros = {\r\n    VencimentoInicio: \"\",\r\n    VencimentoFim: \"\",\r\n    Pessoa: \"\",\r\n    Tipo: \"\",\r\n    Situacao: \"\",\r\n    EmpresaId: userLogged.empresaId\r\n  }\r\n\r\n  const alertas = {\r\n    text: \"\",\r\n    title: \"\"\r\n  }\r\n\r\n  const [mensagem, setMensagem] = useState(alertas);\r\n\r\n  const handleClickOpen = () => {\r\n    if (validadorForm()) {\r\n      handlePesquisar();\r\n    }\r\n  };\r\n\r\n  const validadorForm = () => {\r\n    if (filtroValues.VencimentoInicio == \"\" && filtroValues.VencimentoFim == \"\" && filtroValues.Pessoa == \"\"\r\n      && filtroValues.Tipo == \"\" && filtroValues.Situacao == \"\") {\r\n      setMensagem({ ...values, title: \"Erro!\", text: \"Informe algum filtro para pesquisar\" })\r\n      setOpen(true);\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [filtroValues, setFiltroValues] = useState(filtros);\r\n  const [itemSelecionado, setItemSelecionado] = useState([]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFiltroValues({ ...filtroValues, [name]: value });\r\n  }\r\n\r\n  const handleCheckChange = (e) => {    \r\n    const { name, checked } = e.target;\r\n\r\n    var itens = [...itemSelecionado]; \r\n    if(checked){\r\n      itens.push(name);      \r\n    }\r\n    else{      \r\n      itens = itens.filter((n) => n != name);\r\n    }\r\n    setItemSelecionado(itens);\r\n  };\r\n  \r\n  function liquidar() {    \r\n    const response = fetch(`${ url }/api/financeiro/liquidar`, {  \r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: 'Bearer  '+token,  \r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(itemSelecionado),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (response != null) {\r\n          setMensagem({ ...values, title: \"Sucesso!\", text: \"Documentos liquidados.\" });\r\n          setOpen(true);\r\n        } else {\r\n          setMensagem({ ...values, title: \"Erro!\", text: \"Não foi possível liquidar os documentos selecionados.\" });\r\n          setOpen(true);\r\n        }\r\n      });\r\n  }\r\n\r\n  async function excluir() {    \r\n    \r\n    await Promise.all(itemSelecionado.map(async (item) => {\r\n      const response = await fetch(`${ url }/api/financeiro/${item}`, {  \r\n        method: \"DELETE\",\r\n        headers: {\r\n          Authorization: 'Bearer  '+token,  \r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        }       \r\n      })\r\n        .then((response) => response.json())\r\n        .then((response) => {\r\n          if (response != null) {\r\n            setMensagem({ ...values, title: \"Sucesso!\", text: \"Documentos excluídos.\" });\r\n            setOpen(true);\r\n          } else {\r\n            setMensagem({ ...values, title: \"Erro!\", text: \"Não foi possível excluir os documentos selecionados.\" });\r\n            setOpen(true);\r\n          }\r\n        });\r\n    }));    \r\n  }\r\n\r\n  const show = () => {\r\n    console.log(listaFinanceiros);\r\n  }\r\n\r\n  function handlePesquisar(e) {\r\n    const response = fetch(`${ url }/api/financeiro/buscar`, {  \r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: 'Bearer  '+token,  \r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(filtroValues),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (response != null) {\r\n          setListaFinanceiros(response);\r\n        } else {\r\n          setMensagem({ ...values, title: \"Erro!\", text: \"Nenhum documento encontrado com o filtro utilizado\" });\r\n          setOpen(true);\r\n        }\r\n      });\r\n  }\r\n\r\n  function editarFinanceiro(e,id) {    \r\n    if(e.target.checked == undefined)    \r\n    history.push(`/cadastroFinanceiro/${id}`)\r\n  }\r\n\r\n  function novoFinanceiro() {\r\n    history.push(\"/cadastroFinanceiro\")\r\n  }\r\n\r\n  function showFinanceiros(financeiros) {\r\n    if (financeiros != null) {\r\n      return (\r\n        console.log(financeiros),\r\n        financeiros.map((financeiro) => (\r\n           <tr onClick={(e) => editarFinanceiro(e,financeiro.id)}>\r\n          \r\n            {financeiro.situacao == 1 ? \r\n            (\r\n              <td class=\"checkbox\" id=\"checkbox\">\r\n            \r\n              <Checkbox\r\n              name={financeiro.id}\r\n              onClick={handleCheckChange}\r\n              size=\"small\"\r\n              />\r\n              </td> \r\n            ) : <td></td>}             \r\n            \r\n            <td key={financeiro.id}>{financeiro.id}</td>\r\n            <td key=\"tipo\">{financeiro.tipo === 1 ? \"Receber\" : \"Pagar\"}</td>\r\n            <td key=\"pessoaNome\">{financeiro.pessoaNome}</td>\r\n            <td key=\"formaPagamento\">{financeiro.formaPagamento}</td>\r\n            <td key=\"dataVencimento\">{format(new Date(financeiro.dataVencimento), 'dd/MM/yyy')}</td>\r\n            <td key=\"valor\">{currencyMaskList(parseFloat(financeiro.valor).toFixed(2))}</td>\r\n            <td key=\"situacao\">{financeiro.situacao == 1 ? \"Em aberto\" : \"Liquidado\"}</td>\r\n          </tr>\r\n        ))\r\n      )\r\n    }\r\n    return false\r\n  }\r\n\r\n  return (    \r\n    <div className=\"lista-financeiros\">\r\n      <h1>Financeiro</h1>\r\n\r\n      <div className=\"btn-novo\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={novoFinanceiro}\r\n          className=\"btn-novo\"\r\n        >\r\n          Novo\r\n        </Button>\r\n      </div>\r\n      <div className=\"filtro-financeiros\">\r\n        <Grid container>\r\n          <Grid item xs={12} sm={2}>\r\n            <TextField\r\n              id=\"VencimentoInicio\"\r\n              name=\"VencimentoInicio\"\r\n              type=\"date\"\r\n              label=\"Vencimento Inicio\"\r\n              value={filtroValues.VencimentoInicio}\r\n              onChange={handleChange}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <TextField\r\n              id=\"VencimentoFim\"\r\n              name=\"VencimentoFim\"\r\n              type=\"date\"\r\n              label=\"Vencimento Fim\"\r\n              value={filtroValues.VencimentoFim}\r\n              onChange={handleChange}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <TextField\r\n              id=\"Pessoa\"\r\n              name=\"Pessoa\"\r\n              label=\"Pessoa\"\r\n              value={filtroValues.Pessoa}\r\n              onChange={(e) => (handleChange(onlyLetters(e)))}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            >\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <TextField\r\n              id=\"Tipo\"\r\n              name=\"Tipo\"\r\n              label=\"Tipo\"\r\n              select\r\n              value={filtroValues.Tipo}\r\n              onChange={handleChange}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            >\r\n              <MenuItem value=\"1\">CRE</MenuItem>\r\n              <MenuItem value=\"2\">CPA</MenuItem>\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <TextField\r\n              id=\"Situacao\"\r\n              name=\"Situacao\"\r\n              label=\"Situação\"\r\n              select\r\n              fullWidth\r\n              value={filtroValues.Situacao}\r\n              onChange={handleChange}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            >\r\n              <MenuItem value=\"0\">Todos</MenuItem>\r\n              <MenuItem value=\"1\">Abertos</MenuItem>\r\n              <MenuItem value=\"2\">Liquidados</MenuItem>\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className=\"btn-pesquisar\"\r\n              disableElevation={true}\r\n              size=\"small\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Pesquisar\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n\r\n      <table id=\"financeiros\">\r\n        <tbody>\r\n          <tr>\r\n            <th></th>\r\n            <th>Id</th>\r\n            <th>Tipo</th>\r\n            <th>Pessoa</th>\r\n            <th>FOP</th>\r\n            <th>Vencimento</th>\r\n            <th>Valor</th>\r\n            <th>Situação</th>\r\n          </tr>\r\n          {listaFinanceiros ?\r\n            showFinanceiros(listaFinanceiros)\r\n            : false}\r\n            \r\n        </tbody>  \r\n              \r\n      </table>\r\n      \r\n      <div className={`botoes ${classes.button}`} style={{display: 'flex'}}>   \r\n\r\n      \r\n      <div className={`btn-excluir ${classes.button}`}>              \r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"error\"\r\n                onClick={excluir}\r\n                className={classes.button}                \r\n              >\r\n                Excluir\r\n              </Button>\r\n      </div>\r\n      <div className={`btn-liquidar ${classes.button}`}>              \r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={liquidar}\r\n                className={classes.button}                \r\n              >\r\n                Liquidar\r\n              </Button>\r\n      </div>  \r\n      </div>   \r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{mensagem.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {mensagem.text}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <Button onClick={() => { handleClose(); window.location.reload(); }}>Ok</Button>\r\n      </Dialog>\r\n    </div>   \r\n    \r\n  );\r\n}\r\n\r\nexport default Financeiros;\r\n","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Empresa\\CadastroEmpresa.jsx",["297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { url } from \"../../../src/variaveis\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Select,\r\n  Divider,\r\n  Switch,\r\n  FormLabel,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Dialog,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { MenuItem } from \"@material-ui/core\";\r\nimport { format } from \"date-fns\";\r\nimport { useHistory } from \"react-router\";\r\nimport { cepMask, cpfMask, currencyMask, onlyLetters, onlyNumbersMax5, phoneMask, onlyNumbers, cnpjMask } from \"../../utils/mask\";\r\n\r\n\r\n\r\nfunction CadastroEmpresa() {\r\n  const { token } = useContext(StoreContext);\r\n  const { userLogged, setUserLogged } = useContext(StoreContext);\r\n  var editando = false;\r\n  var editarEmpresaUrl = \"\";\r\n  const editarEmpresaId = window.location.pathname.split(\"/\");\r\n  if (editarEmpresaId[2] != null) {\r\n    editarEmpresaUrl = `${ url }/api/empresa/${editarEmpresaId[2]}`;\r\n    editando = true;\r\n  }\r\n\r\n  const empresaResponse = useFetch(editarEmpresaUrl,\"get\",token);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const history = useHistory();\r\n\r\n  const person = { Nome: \"\", Telefone: \"\" };\r\n  const [disableFields, setDisable] = useState(false);\r\n\r\n  const initialValues = {\r\n    Id: 0,\r\n    TipoEmpresa: \"\",\r\n    UsarDados: false,\r\n    CNPJ_CPF: \"\",\r\n    RazaoSocial: \"\",\r\n    Telefone: \"\",\r\n    Ativo: true,\r\n    Endereco: {\r\n      Logradouro: \"\",\r\n      Numero: \"\",\r\n      Complemento: \"\",\r\n      Bairro: \"\",\r\n      Cidade: \"\",\r\n      Estado: \"\",\r\n      CEP: \"\",\r\n    },\r\n    Pessoa: {\r\n        Nome: \"\",\r\n        CPF: \"\",\r\n        DataNascimento: \"\",\r\n        Email: \"\",\r\n        Telefone: \"\",        \r\n    },\r\n  };\r\n\r\n  const [values, setValues] = useState(initialValues);\r\n  const alertas = {\r\n    text: \"\",\r\n    title: \"\"\r\n  }\r\n\r\n  const [mensagem, setMensagem] = useState(alertas);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {      \r\n    if (validadorForm()) {\r\n      handleSubmit();      \r\n    } else {\r\n      console.log(\"form inválido\");\r\n    }\r\n  };\r\n\r\n  const validadorForm = () => {\r\n    console.log(values);\r\n    if(values.TipoEmpresa == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o tipo da empresa\" });\r\n      setOpen(true);      \r\n    } else if(values.RazaoSocial == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar nome da empresa\" });\r\n      setOpen(true);  \r\n    } else if(values.CNPJ_CPF == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar CNPJ ou CPF da empresa\" });\r\n      setOpen(true);  \r\n    } else if(values.Telefone == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o nº de telefone da empresa\" });\r\n      setOpen(true); \r\n    } else if(values.Endereco.Logradouro == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o logradouro do endereço\" });\r\n      setOpen(true); \r\n    } else if(values.Endereco.Numero == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o número do endereço\" });\r\n      setOpen(true); \r\n    } else if(values.Endereco.Cidade == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar a cidade do endereço\" });\r\n      setOpen(true); \r\n    } else if(values.Endereco.Bairro == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o bairro do endereço\" });\r\n      setOpen(true); \r\n    } else if(values.Endereco.Estado == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o estado do endereço\" });\r\n      setOpen(true); \r\n    } else if(values.Endereco.CEP == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o CEP do endereço\" });\r\n      setOpen(true); \r\n    } else if(values.Pessoa.Nome == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o nome da pessoa\" });\r\n      setOpen(true); \r\n    } else if(values.Pessoa.CPF == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o CPF da pessoa\" });\r\n      setOpen(true); \r\n    } else if(values.Pessoa.DataNascimento == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar a data de nascimento da pessoa\" });\r\n      setOpen(true); \r\n    } else if(values.Pessoa.Email == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o e-mail da pessoa\" });\r\n      setOpen(true); \r\n    } else if(values.Pessoa.Telefone == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o telefone da pessoa\" });\r\n      setOpen(true); \r\n    }\r\n    else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  //atualizar campos do form quando é para editar empresa  \r\n  useEffect(\r\n    function () {\r\n      console.log(empresaResponse.data);\r\n      if (empresaResponse.data != null) {\r\n        setValues((prevState) => ({\r\n          Id: empresaResponse.data.id,\r\n          TipoEmpresa: empresaResponse.data.cnpJ_CPF.length < 12 ? \"1\" : \"2\",\r\n          CNPJ_CPF: empresaResponse.data.cnpJ_CPF,\r\n          RazaoSocial: empresaResponse.data.razaoSocial,\r\n          Telefone: empresaResponse.data.telefone,\r\n          Ativo: empresaResponse.data.ativo,\r\n          Endereco: {\r\n            Id: empresaResponse.data.endereco.id,\r\n            Logradouro: empresaResponse.data.endereco.logradouro,\r\n            Numero: empresaResponse.data.endereco.numero,\r\n            Complemento: empresaResponse.data.endereco.complemento,\r\n            Bairro: empresaResponse.data.endereco.bairro,\r\n            Cidade: empresaResponse.data.endereco.cidade,\r\n            Estado: empresaResponse.data.endereco.estado,\r\n            CEP: empresaResponse.data.endereco.cep,\r\n          },\r\n          Pessoa: {\r\n            Nome: empresaResponse.data.pessoas[0].nome,\r\n            CPF: empresaResponse.data.pessoas[0].cpf,\r\n            Email: empresaResponse.data.pessoas[0].email,\r\n            DataNascimento: format(\r\n              new Date(empresaResponse.data.pessoas[0].dataNascimento),\r\n              \"yyyy-MM-dd\"\r\n            ),\r\n            Telefone: empresaResponse.data.pessoas[0].telefone,\r\n          },\r\n        }));\r\n        setDisable(true);\r\n      }\r\n    },\r\n    [empresaResponse]\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: e.target.value });\r\n    console.log({ name, value });\r\n  };\r\n\r\n  const handlePessoa = (e) => {\r\n    debugger;\r\n    const { name, value } = e.target;\r\n    const Endereco = { ...values.Endereco };\r\n    const Pessoa = { ...values.Pessoa };\r\n    console.log(Pessoa);\r\n\r\n    if (name == \"Logradouro\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Logradouro\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"Numero\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Numero\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"Complemento\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Complemento\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"Bairro\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Bairro\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"Cidade\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Cidade\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"Estado\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Estado\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"CEP\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"CEP\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"CPF\") {\r\n      Object.keys(Pessoa).forEach((key) => {\r\n        if (key === \"CPF\") Pessoa[key] = value;\r\n      }); \r\n    } else if (name == \"Nome\") {\r\n      Object.keys(Pessoa).forEach((key) => {\r\n        if (key === \"Nome\") Pessoa[key] = value;\r\n      }); \r\n    } else if (name == \"Email\") {\r\n      Object.keys(Pessoa).forEach((key) => {\r\n        if (key === \"Email\") Pessoa[key] = value;\r\n      }); \r\n    } else if (name == \"Telefone\") {\r\n      Object.keys(Pessoa).forEach((key) => {\r\n        if (key === \"Telefone\") Pessoa[key] = value;\r\n      }); \r\n    } else if (name == \"DataNascimento\") {\r\n      Object.keys(Pessoa).forEach((key) => {\r\n        if (key === \"DataNascimento\") Pessoa[key] = value;\r\n      }); \r\n    }    \r\n    setValues({ ...values, Endereco, Pessoa});\r\n  };\r\n\r\n  const funcUsarDadosEmpresa = (e) => {\r\n    const { name, checked } = e.target;\r\n    const newPessoa = values;\r\n    \r\n    newPessoa.Pessoa = {\r\n      Nome: values.RazaoSocial,\r\n      CPF: values.CNPJ_CPF,\r\n      Telefone: values.Telefone,\r\n      DataNascimento: \"\",\r\n      Email: \"\",    \r\n    };\r\n    setValues({...values, Pessoa: newPessoa});\r\n\r\n    setValues({ ...values, [name]: e.target.checked });\r\n    console.log(\r\n      \"handleCheckChange \" +\r\n        \">>name: \" +\r\n        e.target.name +\r\n        \" >>value: \" +\r\n        e.target.value +\r\n        \" >>checked: \" +\r\n        e.target.checked\r\n    );\r\n    console.log(values);\r\n  };\r\n\r\n  const handleCheckChange = (e) => {\r\n    debugger;\r\n    const { name, checked } = e.target;\r\n    setValues({ ...values, [name]: e.target.checked });\r\n  };\r\n\r\n  function handleSubmit(e) {\r\n    console.log(editarEmpresaUrl);\r\n    //limpar pessoa/usuario da empresa\r\n    if (values.Id != 0) {\r\n      const valuesToSubmit = values;\r\n      //valuesToSubmit.Pessoa = [];\r\n      setValues({ ...values, valuesToSubmit });\r\n    }\r\n    debugger;\r\n    var dados = values;\r\n    dados.CNPJ_CPF = dados.CNPJ_CPF.replace(/\\D/g, \"\");\r\n    if(dados.Pessoa.CPF != null)\r\n    dados.Pessoa.CPF = dados.Pessoa.CPF.replace(/\\D/g, \"\");\r\n\r\n    dados = JSON.stringify(dados);\r\n    console.log(dados);\r\n    debugger;\r\n\r\n    const response = fetch(`${ url }/api/empresa/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: 'Bearer '+token,\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(values),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if ( response != null && response.status != 200) {          \r\n          setUserLogged({ ...userLogged, empresa: response })\r\n          setMensagem({ ...values, title: \"Sucesso!\", text: editando ? \"Empresa atualizada\" : \"Empresa cadastrada\" })\r\n          setOpen(true);\r\n         } \r\n        else {\r\n          setMensagem({ ...values, title: \"Erro!\", text: \"Erro ao cadastrar empresa\" })\r\n          setOpen(true);\r\n        }\r\n      });\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <div className={classes.titulo}>\r\n            <h1>Cadastro de Empresa</h1>\r\n          </div>\r\n          <form>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"TipoEmpresa\"\r\n                  name=\"TipoEmpresa\"\r\n                  label=\"Tipo\"\r\n                  select\r\n                  fullWidth\r\n                  value={values.TipoEmpresa}\r\n                  onChange={handleChange}\r\n                >\r\n                  <MenuItem value=\"1\">Física</MenuItem>\r\n                  <MenuItem value=\"2\">Jurídica</MenuItem>\r\n                </TextField>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={2}>\r\n                  <FormLabel>Ativa?</FormLabel>\r\n\r\n                  <Switch\r\n                    color=\"primary\"\r\n                    name=\"Ativo\"\r\n                    value={values.Ativo}\r\n                    checked={values.Ativo}\r\n                    onChange={handleCheckChange}\r\n                    inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n\r\n\r\n            </Grid>\r\n\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"RazaoSocial\"\r\n                  name=\"RazaoSocial\"\r\n                  label=\"Nome\"\r\n                  fullWidth\r\n                  onChange={handleChange}\r\n                  value={values.RazaoSocial}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"CNPJ_CPF\"\r\n                  name=\"CNPJ_CPF\"\r\n                  label={\r\n                    values.TipoEmpresa == \"1\"\r\n                      ? \"CPF\"\r\n                      : values.TipoEmpresa == \"2\"\r\n                      ? \"CNPJ\"\r\n                      : \"CNPJ OU CPF\"\r\n                  }\r\n                  fullWidth\r\n                  \r\n                  onChange={(e) => { values.TipoEmpresa == \"1\" ? handleChange(cpfMask(e)) : handleChange(cnpjMask(e)) } }\r\n                  value={values.CNPJ_CPF}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"Telefone\"\r\n                  name=\"Telefone\"\r\n                  label=\"Telefone\"\r\n                  fullWidth\r\n                  onChange={(e) => { handleChange(phoneMask(e)) }}\r\n                  value={values.Telefone}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"Endereco.Logradouro\"\r\n                  name=\"Logradouro\"\r\n                  onChange={handlePessoa}\r\n                  value={values.Endereco.Logradouro}\r\n                  label=\"Logradouro\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={1}>\r\n                <TextField\r\n                  id=\"Endereco.Numero\"\r\n                  name=\"Numero\"\r\n                  label=\"Nº\"\r\n                  onChange={(e) => { handlePessoa(onlyNumbersMax5(e)) }}\r\n                  value={values.Endereco.Numero}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={3}>\r\n                <TextField\r\n                  id=\"Endereco.Complemento\"\r\n                  name=\"Complemento\"\r\n                  label=\"Complemento\"\r\n                  onChange={handlePessoa}\r\n                  value={values.Endereco.Complemento}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Endereco.Cidade\"\r\n                  name=\"Cidade\"\r\n                  label=\"Cidade\"\r\n                  onChange={handlePessoa}\r\n                  value={values.Endereco.Cidade}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Endereco.Bairro\"\r\n                  name=\"Bairro\"\r\n                  onChange={handlePessoa}\r\n                  value={values.Endereco.Bairro}\r\n                  label=\"Bairro\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Endereco.Estado\"\r\n                  name=\"Estado\"\r\n                  label=\"Estado\"\r\n                  onChange={handlePessoa}\r\n                  value={values.Endereco.Estado}\r\n                  fullWidth\r\n                  select\r\n                >\r\n                  <MenuItem value=\"AC\">Acre</MenuItem>\r\n                  <MenuItem value=\"AL\">Alagoas</MenuItem>\r\n                  <MenuItem value=\"AP\">Amapá</MenuItem>\r\n                  <MenuItem value=\"AM\">Amazonas</MenuItem>\r\n                  <MenuItem value=\"BA\">Bahia</MenuItem>\r\n                  <MenuItem value=\"CE\">Ceará</MenuItem>\r\n                  <MenuItem value=\"DF\">Distrito Federal</MenuItem>\r\n                  <MenuItem value=\"ES\">Espírito Santo</MenuItem>\r\n                  <MenuItem value=\"GO\">Goiás</MenuItem>\r\n                  <MenuItem value=\"MA\">Maranhão</MenuItem>\r\n                  <MenuItem value=\"MT\">Mato Grosso</MenuItem>\r\n                  <MenuItem value=\"MS\">Mato Grosso do Sul</MenuItem>\r\n                  <MenuItem value=\"MG\">Minas Gerais</MenuItem>\r\n                  <MenuItem value=\"PA\">Pará</MenuItem>\r\n                  <MenuItem value=\"PB\">Paraíba</MenuItem>\r\n                  <MenuItem value=\"PR\">Paraná</MenuItem>\r\n                  <MenuItem value=\"PE\">Pernambuco</MenuItem>\r\n                  <MenuItem value=\"PI\">Piauí</MenuItem>\r\n                  <MenuItem value=\"RJ\">Rio de Janeiro</MenuItem>\r\n                  <MenuItem value=\"RN\">Rio Grande do Norte</MenuItem>\r\n                  <MenuItem value=\"RS\">Rio Grande do Sul</MenuItem>\r\n                  <MenuItem value=\"RO\">Rondônia</MenuItem>\r\n                  <MenuItem value=\"RR\">Roraima</MenuItem>\r\n                  <MenuItem value=\"SC\">Santa Catarina</MenuItem>\r\n                  <MenuItem value=\"SP\">São Paulo</MenuItem>\r\n                  <MenuItem value=\"SE\">Sergipe</MenuItem>\r\n                  <MenuItem value=\"TO\">Tocantins</MenuItem>\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Endereco.CEP\"\r\n                  name=\"CEP\"\r\n                  label=\"CEP\"\r\n                  onChange={(e) => { handlePessoa(cepMask(e)) }}\r\n                  value={values.Endereco.CEP}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <br></br>\r\n                <div className={classes.subtitulo}>\r\n                  <h4>Dados Usuário</h4>\r\n                  <Divider />\r\n                </div>\r\n                <Grid item xs={12} sm={4}>\r\n                  <FormLabel>Usar dados da empresa?</FormLabel>\r\n\r\n                  <Switch\r\n                    color=\"primary\"\r\n                    name=\"UsarDados\"\r\n                    value={values.UsarDados}\r\n                    checked={values.UsarDados}\r\n                    disabled={disableFields}\r\n                    onChange={funcUsarDadosEmpresa}\r\n                    inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"Pessoa.Nome\"\r\n                  name=\"Nome\"\r\n                  label=\"Nome\"\r\n                  fullWidth\r\n                  disabled={disableFields}\r\n                  onChange={(e) => { handlePessoa(onlyLetters(e)) }}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={\r\n                    values.UsarDados ? values.RazaoSocial : values.Pessoa.Nome\r\n                  }\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"Pessoa.CPF\"\r\n                  name=\"CPF\"\r\n                  label=\"CPF\"\r\n                  fullWidth\r\n                  disabled={disableFields}\r\n                  onChange={(e) => { handlePessoa(cpfMask(e)) }}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={\r\n                    values.UsarDados ? values.CNPJ_CPF : values.Pessoa.CPF\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={3}>\r\n                <TextField\r\n                  id=\"Pessoa.DataNascimento\"\r\n                  name=\"DataNascimento\"\r\n                  label=\"Data Nascimento\"\r\n                  type=\"date\"\r\n                  onChange={handlePessoa}\r\n                  disabled={disableFields}\r\n                  value={values.Pessoa.DataNascimento}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"Pessoa.Email\"\r\n                  name=\"Email\"\r\n                  label=\"E-mail\"\r\n                  disabled={disableFields}\r\n                  fullWidth\r\n                  onChange={handlePessoa}\r\n                  value={values.Pessoa.Email}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Pessoa.Telefone\"\r\n                  name=\"Telefone\"\r\n                  label=\"Telefone\"\r\n                  disabled={disableFields}\r\n                  fullWidth\r\n                  onChange={(e) => { handlePessoa(phoneMask(e)) }}\r\n                  value={\r\n                    values.UsarDados ? values.Telefone : values.Pessoa.Telefone\r\n                  }\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <div className={classes.buttons}>\r\n              {editando\r\n              ? false\r\n              : <Button\r\n              variant=\"contained\"\r\n              color=\"inherit\"\r\n              className={classes.button}\r\n            >\r\n              Limpar\r\n            </Button>}\r\n             \r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n                className={classes.button}\r\n              >\r\n                {editando ? \"Atualizar\" : \"Cadastrar\"}\r\n              </Button>\r\n              \r\n            </div>\r\n          </form>\r\n          <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{mensagem.title}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {mensagem.text}\r\n            </DialogContentText>\r\n          </DialogContent>          \r\n\r\n          {(mensagem.text == \"Empresa cadastrada com sucesso\" || mensagem.text == \"Empresa atualizada\") ?     \r\n            <Button onClick={() => { handleClose(); history.push(\"/empresas\"); }}>Ok</Button>\r\n             : <Button onClick={handleClose}>Ok</Button>} \r\n          \r\n        </Dialog>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CadastroEmpresa;\r\n","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Financeiro\\CadastroFinanceiro.jsx",["342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  MenuItem,\r\n  Switch,\r\n  FormLabel,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Dialog,\r\n  Tooltip,\r\n  Collapse,\r\n  InputAdornment    \r\n} from \"@material-ui/core\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useHistory } from \"react-router\";\r\nimport et from \"date-fns/esm/locale/et/index.js\";\r\nimport { parseJSON } from \"date-fns\";\r\nimport { format } from \"date-fns\";\r\nimport { currencyMask, onlyLetters, getCurrentDate } from \"../../utils/mask\";\r\nimport { setDayOfYear } from \"date-fns/esm\";\r\nimport { url } from \"../../../src/variaveis\";\r\n\r\nfunction CadastroFinanceiro() {\r\n  const classes = useStyles();\r\n  var CurrencyFormat = require(\"react-currency-format\");\r\n  const { token, userLogged } = useContext(StoreContext);\r\n\r\n  const urlAlunos = `${ url }/api/alunoPorEmpresa/${userLogged.empresaId}`;\r\n \r\n  \r\n  const responseAluno = useFetch(urlAlunos,\"get\",token);\r\n  const [todos, setTodos] = useState(false);\r\n  const [loading,setLoading] = useState(false);\r\n  const [tipoReceber, setTipoDoc] = useState(true);\r\n  const history = useHistory();\r\n\r\n  const editarFinanceiro = window.location.pathname.split(\"/\");\r\n  var editarFinanceiroUrl = \"\";\r\n  var editando = false;\r\n  if (editarFinanceiro[2] != null) {\r\n    editarFinanceiroUrl = `${ url }/api/cadastroFinanceiro/${editarFinanceiro[2]}`;\r\n    editando = true;\r\n  }\r\n  const responseEditarFinanceiro = useFetch(editarFinanceiroUrl,\"get\",token);\r\n\r\n  const initialValues = {\r\n    Id: 0,\r\n    AlunoId: 0,\r\n    AlunoNome: \"\",\r\n    PessoaNome: \"\",\r\n    DataVencimento: \"\",\r\n    qtdProvisionar: 0,\r\n    Valor: 0,\r\n    FormaPagamento: \"\",\r\n    Situacao: 1,\r\n    EmpresaId: userLogged.empresaId,\r\n    todosAlunos: false,\r\n    Tipo: \"\",\r\n  };\r\n\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  const alertas = {\r\n    text: \"\",\r\n    title: \"\"\r\n  }\r\n\r\n  const [mensagem, setMensagem] = useState(alertas);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const validadorForm = () => {\r\n    debugger;\r\n    if (values.AlunoNome == \"\" && values.PessoaNome == \"\" && todos == false) {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário selecionar um aluno ou informar uma pessoa\" });\r\n      setOpen(true);\r\n    } else if (values.Valor == \"\" && !todos) {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar valor\" });\r\n      setOpen(true);\r\n    } else if (values.FormaPagamento == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar forma de pagamento\" });\r\n      setOpen(true);\r\n    } else if (values.DataVencimento == \"\" && !todos) {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar data de vencimento\" });\r\n      setOpen(true);\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  const getDialogActions = (e) => {       \r\n    if (e === \"Atenção!\"){\r\n      return (\r\n        <DialogActions>\r\n              <Button onClick={() =>{ setTodos(false); handleClose()}}>Não</Button>\r\n              <Button onClick={handleClose} autoFocus>Sim</Button>\r\n            </DialogActions>\r\n      )\r\n    } \r\n    else if(e === \"Sucesso!\") {\r\n      return (\r\n        <DialogActions>\r\n      <Button onClick={() => { handleClose(); history.push(\"/financeiros\"); }}>Ok</Button>\r\n      </DialogActions>\r\n      )\r\n      \r\n    } else {\r\n      return (\r\n          <DialogActions>\r\n          <Button onClick={handleClose}>Ok</Button>\r\n      </DialogActions>\r\n      )    \r\n    }\r\n  }\r\n\r\n  useEffect(\r\n    function () {\r\n      if (todos) {\r\n        debugger;\r\n        let hoje = getCurrentDate('-');\r\n        setValues({ ...values, AlunoNome: \"\", qtdProvisionar: 0, todosAlunos: true, Valor: \"0.00\", Tipo: \"1\", DataVencimento: hoje})\r\n      }\r\n      if (!todos) {\r\n        setValues({ ...values, todosAlunos: false })\r\n      }\r\n    },\r\n    [todos]\r\n  )\r\n\r\n  useEffect(\r\n    function () {\r\n      debugger;\r\n      console.log(responseEditarFinanceiro.data);\r\n      if (responseEditarFinanceiro.data != null) {\r\n        setValues((prevState) => ({\r\n          Id: responseEditarFinanceiro.data.result.id,\r\n          AlunoId: responseEditarFinanceiro.data.result.alunoId,\r\n          AlunoNome: responseEditarFinanceiro.data.result.nomeAluno,\r\n          PessoaNome: responseEditarFinanceiro.data.result.pessoaNome,\r\n          DataVencimento: format(\r\n            new Date(responseEditarFinanceiro.data.result.dataVencimento),\r\n            \"yyyy-MM-dd\"\r\n          ), \r\n          Valor: responseEditarFinanceiro.data.result.valor,\r\n          FormaPagamento: responseEditarFinanceiro.data.result.formaPagamento,\r\n          Situacao: responseEditarFinanceiro.data.result.situacao,\r\n          todosAlunos: false,\r\n          Tipo: responseEditarFinanceiro.data.result.tipo,\r\n          EmpresaId: responseEditarFinanceiro.data.result.empresaId,\r\n        }));\r\n      }\r\n    },\r\n    [responseEditarFinanceiro]\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    console.log(e.target);\r\n    const { name, value } = e.target;\r\n    if (name == \"AlunoNome\") {\r\n      setValues({ ...values, [name]: e.target.value, AlunoId: e.target.value })\r\n    } else if (name == \"Tipo\" && value != 1) {\r\n      setTipoDoc(false);\r\n      setValues({ ...values, [name]: e.target.value });\r\n    } else if (name == \"Tipo\" && value != 2) {\r\n      setTipoDoc(true);\r\n      setValues({ ...values, [name]: e.target.value });\r\n    }\r\n    else {\r\n      setValues({ ...values, [name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  const handleCheckChange = () => {\r\n    setTodos(!todos);\r\n    if (!todos) {\r\n      setTodos(!todos);\r\n      setValues({ ...values, AlunoId: 0, AlunoNome: \"\" });\r\n      setMensagem({ ...values, title: \"Atenção!\", text: \"Essa ação irá gerar um CRE (contas a receber) para cada aluno. Deseja continuar?\" })\r\n      setOpen(true);\r\n    } else {\r\n      setTodos(!todos);\r\n    }\r\n\r\n  };\r\n\r\n  function showAlunos(alunos) {\r\n    console.log(responseAluno.data);\r\n    return responseAluno.data.map((aluno) => (\r\n      <MenuItem value={aluno.id}>{aluno.nome}</MenuItem>\r\n    ));\r\n  }\r\n\r\n  const handleClickOpen = () => {\r\n    if (validadorForm()) {\r\n      handleSubmit();\r\n    } else {\r\n      console.log(\"form inválido\");\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleSubmit(e) {  \r\n    debugger;\r\n    setLoading(true);\r\n    var dados = values;\r\n    dados.Valor = dados.Valor.replace('.','');\r\n    dados.Valor = dados.Valor.replace(',','.');\r\n    debugger;\r\n    const response = fetch(`${ url }/api/financeiro/cadastrar`, {          \r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: 'Bearer '+token,\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(dados),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (response != null && response.errors == null) {\r\n          setMensagem({ ...values, title: \"Sucesso!\", text: response })\r\n          setOpen(true);          \r\n        } else {\r\n          setMensagem({ ...values, title: \"Erro!\", text: \"Erro ao gerar documento(s)\" })\r\n          setOpen(true);\r\n        }\r\n      })\r\n      .then(() => {\r\n        setLoading(false);\r\n      })\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <div className={classes.titulo}>\r\n            <h1>Cadastro de Financeiro</h1>\r\n          </div>\r\n          <form onSubmit={handleSubmit}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={3}>\r\n                <TextField\r\n                  id=\"Tipo\"\r\n                  name=\"Tipo\"\r\n                  label=\"Tipo\"\r\n                  onChange={handleChange}\r\n                  value={values.Tipo}\r\n                  fullWidth\r\n                  select\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                >\r\n                  <MenuItem value=\"1\">Receber</MenuItem>\r\n                  <MenuItem value=\"2\">Pagar</MenuItem>\r\n\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12} sm={3}>\r\n                <Collapse in={tipoReceber ? true : false}>\r\n                <Tooltip title={todos ? \"Não pode ser usado para todos alunos\" : \"\"} placement=\"top-end\">\r\n                  <TextField\r\n                    id=\"AlunoNome\"\r\n                    name=\"AlunoNome\"\r\n                    label=\"Aluno\"\r\n                    onChange={handleChange}\r\n                    value={values.AlunoId}\r\n                    inputProps={{\r\n                      \"data-id\": `${values.AlunoId}`,\r\n                    }}\r\n                    disabled={todos ? true : false}\r\n                    fullWidth\r\n                    select                    \r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  >\r\n                    {responseAluno.data ? showAlunos(responseAluno.data) : false}\r\n                  </TextField>\r\n                  </Tooltip>\r\n                </Collapse>\r\n                <Collapse in={tipoReceber ? false : true}>\r\n                  <TextField\r\n                    id=\"PessoaNome\"\r\n                    name=\"PessoaNome\"\r\n                    label=\"Pessoa\"\r\n                    onChange={(e) => handleChange(onlyLetters(e))}\r\n                    value={values.PessoaNome}\r\n                    fullWidth\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  >\r\n                  </TextField>\r\n                </Collapse>\r\n\r\n              </Grid>\r\n              {(editando)\r\n                ? false\r\n                : <Grid item xs={12} sm={2}>\r\n                  <FormLabel>Todos</FormLabel>\r\n                  <Switch\r\n                    color=\"primary\"\r\n                    name=\"todos\"\r\n                    value={todos}\r\n                    checked={todos}\r\n                    disabled={values.Tipo == 2 ? true : false}\r\n                    onChange={handleCheckChange}\r\n                    inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>}\r\n\r\n              <Grid item xs={3}>\r\n              <Tooltip title={todos ? \"Será gerada data específica para cada aluno\" : \"\"} placement=\"top-end\">\r\n                <TextField\r\n                  id=\"DataVencimento\"\r\n                  name=\"DataVencimento\"\r\n                  type=\"date\"\r\n                  label=\"Vencimento\"\r\n                  value={values.DataVencimento}\r\n                  disabled={todos ? true : false}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={3}>\r\n              <Tooltip title={todos ? \"Não pode ser usado para todos alunos\" : \"\"} placement=\"top-end\">\r\n                <TextField\r\n                  id=\"Valor\"\r\n                  name=\"Valor\"\r\n                  label=\"Valor\"\r\n                  value={values.Valor}\r\n                  onChange={(e) => handleChange(currencyMask(e))}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                    startAdornment: <InputAdornment position=\"start\">R$</InputAdornment>,\r\n                  }}\r\n                  disabled={todos ? true : false}\r\n                />\r\n              </Tooltip>                    \r\n\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <TextField\r\n                  id=\"FormaPagamento\"\r\n                  name=\"FormaPagamento\"\r\n                  label=\"Forma de Pagamento\"\r\n                  value={values.FormaPagamento}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  select\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                >\r\n                  <MenuItem value=\"boleto\">Boleto</MenuItem>\r\n                  <MenuItem value=\"pix\">PIX</MenuItem>\r\n                  <MenuItem value=\"dinheiro\">Dinheiro</MenuItem>\r\n                  <MenuItem value=\"cartão\">Cartão</MenuItem>\r\n                </TextField>\r\n              </Grid>\r\n              {(editando)\r\n                ? false\r\n                : <Grid item xs={2}>\r\n                    <Tooltip title={todos ? \"Não pode ser usado para todos alunos\" : \"\"} placement=\"top-end\">                  \r\n                    <TextField\r\n                      id=\"qtdProvisionar\"\r\n                      name=\"qtdProvisionar\"\r\n                      label=\"Provisionar\"\r\n                      onChange={handleChange}\r\n                      value={values.qtdProvisionar}\r\n                      fullWidth\r\n                      disabled={todos ? true : false}\r\n                      select\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                    >\r\n                      <MenuItem selected value=\"0\">0</MenuItem>\r\n                      <MenuItem value=\"1\">1</MenuItem>\r\n                      <MenuItem value=\"2\">2</MenuItem>\r\n                      <MenuItem value=\"3\">3</MenuItem>\r\n                      <MenuItem value=\"4\">4</MenuItem>\r\n                      <MenuItem value=\"5\">5</MenuItem>\r\n                      <MenuItem value=\"6\">6</MenuItem>\r\n                      <MenuItem value=\"7\">7</MenuItem>\r\n                      <MenuItem value=\"8\">8</MenuItem>\r\n                      <MenuItem value=\"9\">9</MenuItem>\r\n                      <MenuItem value=\"10\">10</MenuItem>\r\n                      <MenuItem value=\"11\">11</MenuItem>\r\n                      <MenuItem value=\"12\">12</MenuItem>\r\n                    </TextField>\r\n                  </Tooltip>\r\n                </Grid>}\r\n            </Grid>\r\n            <div className={classes.buttons}>\r\n              {editando\r\n                ? false\r\n                : <Button\r\n                  variant=\"contained\"\r\n                  color=\"inherit\"\r\n                  className={classes.button}\r\n                >\r\n                  Limpar\r\n                </Button>}\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n                className={classes.button}\r\n                disabled={loading}\r\n              >\r\n                {editando ? \"Atualizar\" : \"Cadastrar\"}\r\n              </Button>             \r\n            </div>\r\n          </form>\r\n          \r\n        </Paper>\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{mensagem.title}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {mensagem.text}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n            {getDialogActions(mensagem.title)}\r\n        </Dialog>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CadastroFinanceiro;\r\n","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Home\\Home.jsx",[],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Contratos\\Contratos.jsx",["360","361","362","363","364","365","366","367"],"import React, { useContext } from \"react\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Button } from \"@material-ui/core\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport { url } from \"../../../src/variaveis\";\r\nimport CadastroContrato from \"../Contratos/CadastroContrato\";\r\n\r\nfunction Contratos() {\r\n  const { token, userLogged } = useContext(StoreContext);\r\n\r\n  //const response = useFetch(`${ url }/api/materiaPorEmpresa/${userLogged.empresaId}`,\"get\",token);\r\n\r\n  const history = useHistory();\r\n\r\n  const classes = useStyles();\r\n\r\n  function novaMateria(){\r\n    history.push(\"/cadastroMateria\")\r\n  }\r\n\r\n  function editarMateria(id){\r\n    history.push(`/cadastroMateria/${id}`)\r\n  }\r\n\r\n  return (         \r\n        <div className=\"lista-materias\">\r\n          <h1>Contrato Modelo</h1>         \r\n          <CadastroContrato />\r\n          \r\n        </div>     \r\n    \r\n  );\r\n}\r\n\r\nexport default Contratos;\r\n","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Contratos\\CadastroContrato.jsx",["368","369","370","371","372","373","374","375","376"],"import { Grid, Paper, TextareaAutosize, FormControlLabel, Checkbox, Button,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogContentText,\r\n    Dialog } from \"@material-ui/core\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { url } from \"../../variaveis\";\r\n\r\n\r\nfunction CadastroContrato() {\r\n\r\n    const classes = useStyles();\r\n    const { token, userLogged } = useContext(StoreContext);\r\n    const retornoContrato = useFetch(`${url}/api/contratoPorEmpresaId/${userLogged.empresaId}`, \"get\", token)\r\n    const [clausulas, setClausulas] = useState([])\r\n    const [contrato, setContrato] = useState();\r\n    const alertas = {\r\n        text: \"\",\r\n        title: \"\"\r\n      }\r\n    \r\n    const [mensagem, setMensagem] = useState(alertas);\r\n    const [open, setOpen] = useState(false);\r\n    const history = useHistory();\r\n    \r\n    const checkAdmin = () => {\r\n        if(userLogged.tipoUsuario == 1){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    };\r\n\r\n    useEffect(\r\n        function () {\r\n            if (retornoContrato.data != null) {\r\n                const contratoValues = {\r\n                    ContratoId: retornoContrato.data.contratoId,\r\n                    EmpresaId: userLogged.empresaId\r\n                }\r\n                setContrato(contratoValues);\r\n                var clausulasExistentes = []                \r\n                retornoContrato.data.clausulas.map((clausula => (\r\n                    clausulasExistentes.push({ \r\n                        Id: clausula.id,\r\n                        Nome: clausula.nome,\r\n                        Descricao: clausula.descricao,\r\n                        ContratoId: clausula.ContratoId,\r\n                        Ativa: clausula.ativa\r\n                    })\r\n                )))\r\n                setClausulas(clausulasExistentes);\r\n            }\r\n        }, [retornoContrato]\r\n    );\r\n\r\n    useEffect(\r\n        function() {\r\nconsole.log(\"clausula\", clausulas);\r\n        },[clausulas]\r\n    )\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n\r\n      const handleClausula = (e) => {\r\n        const { name, value, checked } = e.target;\r\n        var clausulasExistentes = [...clausulas];  \r\n        var clausulaIndex = clausulas.findIndex(i => i.Id == name);\r\n        if (checked === false) {\r\n            clausulasExistentes[clausulaIndex].Ativa = false;\r\n            setClausulas(clausulasExistentes);\r\n        }\r\n        else if (checked === true) {\r\n            clausulasExistentes[clausulaIndex].Ativa = true;\r\n            setClausulas(clausulasExistentes);\r\n        }\r\n    };  \r\n\r\n    function checkChange(id) {\r\n        var checkClausulas = clausulas;\r\n        var clausulasId = []\r\n        checkClausulas.map((clausula, i) => (\r\n            clausula.Ativa == true ? clausulasId.push(clausula.Id) : false                        \r\n        ))\r\n        if (clausulasId.find(e => e == id)) {\r\n            return true\r\n        } else\r\n            return false\r\n    }\r\n   \r\n\r\n    function addClausula(){        \r\n        var clausulasExistentes = [...clausulas];                \r\n        clausulasExistentes.push({ \r\n                        Id: 1,\r\n                        Nome: \"Nova cláusula\",\r\n                        Descricao: \"descrição\",\r\n                        ContratoId: 0,\r\n                        Ativa: false\r\n                    });                                   \r\n        setClausulas(clausulasExistentes);   \r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        debugger;\r\n        const { name, value } = e.target;\r\n        var clausulasExistentes = clausulas;\r\n        var clausulaIndex = clausulas.findIndex(i => i.Id == name);\r\n        clausulasExistentes[clausulaIndex].descricao = value;\r\n        setClausulas(clausulasExistentes);\r\n      };\r\n\r\n    function handleSubmit(e) {  \r\n        var ContratoId = contrato.ContratoId;\r\n        var EmpresaId = contrato.EmpresaId;\r\n        var request = {            \r\n            clausulas,\r\n            ContratoId,\r\n            EmpresaId\r\n        }\r\n\r\n        const response = fetch(`${url}/api/contrato/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                Authorization: 'Bearer ' + token,\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(request),\r\n        })\r\n        .then((response) => {     \r\n              setMensagem({ title: \"Sucesso!\", text: \"Contrato atualizado.\" })\r\n              setOpen(true);         \r\n          })\r\n         .catch((response) => {\r\n             setMensagem({ title: \"Erro!\", text: \"Erro ao atualizar cadastro.\" })\r\n             setOpen(true);\r\n          });\r\n\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <main className={classes.layout}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={8}>\r\n                        <div className={classes.stepper}>\r\n                            <h2>Selecione quais cláusulas deseja adicionar no contrato:</h2>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n                \r\n                <form>\r\n                    <Grid container spacing={3}>                       \r\n                   {clausulas.map((clausula,i) => (\r\n                       \r\n                       <>\r\n                      <Grid item xs={12} sm={2}>\r\n                      <FormControlLabel\r\n                          control={\r\n                              <Checkbox\r\n                                  key={clausula.Id}\r\n                                  name={clausula.Id}\r\n                                  value={clausula.Id}\r\n                                  onChange={handleClausula}\r\n                                  checked={checkChange(clausula.Id)}\r\n                              />\r\n                          }\r\n                      />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={10}>\r\n                                            <TextareaAutosize\r\n                                                key={clausula.Id}\r\n                                                minRows={4}\r\n                                                aria-label=\"maximum height\"\r\n                                                placeholder=\"Maximum 4 rows\"\r\n                                                defaultValue={clausula.Nome + \" \" + clausula.Descricao}\r\n                                                disabled={checkAdmin() === true ? false : true}\r\n                                                name={clausula.Id}\r\n                                                style={{ width: 700 }}\r\n                                                onChange={handleChange}\r\n                                            />\r\n                                        </Grid>\r\n                      </>\r\n                  \r\n                   ))}\r\n\r\n                    </Grid>\r\n                    <div className={classes.button}>\r\n\r\n                    {checkAdmin() === true ? \r\n                        <Button\r\n                        variant=\"contained\"\r\n                        color=\"warning\"                            \r\n                        onClick={addClausula}\r\n                        className={classes.button}\r\n                    >\r\n                        Adicionar\r\n                    </Button>\r\n\r\n                        : false}\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"                            \r\n                            onClick={handleSubmit}\r\n                            className={classes.button}\r\n                        >\r\n                            Salvar\r\n                        </Button>\r\n                        \r\n                        \r\n                    </div>\r\n                </form>\r\n\r\n                <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{mensagem.title}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {mensagem.text}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          {<Button onClick={() => { handleClose(); history.push(\"/contratos\"); }}>Ok</Button>}\r\n        </Dialog>\r\n            </main>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CadastroContrato;","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\utils\\storage.js",[],{"ruleId":"377","replacedBy":"378"},{"ruleId":"379","replacedBy":"380"},{"ruleId":"381","severity":1,"message":"382","line":2,"column":8,"nodeType":"383","messageId":"384","endLine":2,"endColumn":12},{"ruleId":"381","severity":1,"message":"385","line":5,"column":8,"nodeType":"383","messageId":"384","endLine":5,"endColumn":16},{"ruleId":"381","severity":1,"message":"386","line":10,"column":5,"nodeType":"383","messageId":"384","endLine":10,"endColumn":9},{"ruleId":"381","severity":1,"message":"387","line":13,"column":8,"nodeType":"383","messageId":"384","endLine":13,"endColumn":13},{"ruleId":"381","severity":1,"message":"388","line":20,"column":10,"nodeType":"383","messageId":"384","endLine":20,"endColumn":15},{"ruleId":"381","severity":1,"message":"389","line":6,"column":60,"nodeType":"383","messageId":"384","endLine":6,"endColumn":75},{"ruleId":"381","severity":1,"message":"390","line":196,"column":19,"nodeType":"383","messageId":"384","endLine":196,"endColumn":24},{"ruleId":"381","severity":1,"message":"391","line":238,"column":13,"nodeType":"383","messageId":"384","endLine":238,"endColumn":17},{"ruleId":"381","severity":1,"message":"392","line":245,"column":11,"nodeType":"383","messageId":"384","endLine":245,"endColumn":16},{"ruleId":"381","severity":1,"message":"393","line":249,"column":9,"nodeType":"383","messageId":"384","endLine":249,"endColumn":18},{"ruleId":"394","severity":1,"message":"395","line":254,"column":63,"nodeType":"396","messageId":"397","endLine":254,"endColumn":65},{"ruleId":"394","severity":1,"message":"398","line":272,"column":28,"nodeType":"396","messageId":"397","endLine":272,"endColumn":30},{"ruleId":"381","severity":1,"message":"399","line":282,"column":11,"nodeType":"383","messageId":"384","endLine":282,"endColumn":19},{"ruleId":"394","severity":1,"message":"398","line":645,"column":27,"nodeType":"396","messageId":"397","endLine":645,"endColumn":29},{"ruleId":"381","severity":1,"message":"400","line":23,"column":8,"nodeType":"383","messageId":"384","endLine":23,"endColumn":14},{"ruleId":"381","severity":1,"message":"401","line":9,"column":7,"nodeType":"383","messageId":"384","endLine":9,"endColumn":18},{"ruleId":"381","severity":1,"message":"388","line":10,"column":9,"nodeType":"383","messageId":"384","endLine":10,"endColumn":14},{"ruleId":"394","severity":1,"message":"398","line":12,"column":28,"nodeType":"396","messageId":"397","endLine":12,"endColumn":30},{"ruleId":"381","severity":1,"message":"402","line":2,"column":13,"nodeType":"383","messageId":"384","endLine":2,"endColumn":20},{"ruleId":"381","severity":1,"message":"403","line":4,"column":13,"nodeType":"383","messageId":"384","endLine":4,"endColumn":20},{"ruleId":"381","severity":1,"message":"404","line":1,"column":31,"nodeType":"383","messageId":"384","endLine":1,"endColumn":41},{"ruleId":"381","severity":1,"message":"405","line":11,"column":11,"nodeType":"383","messageId":"384","endLine":11,"endColumn":18},{"ruleId":"381","severity":1,"message":"406","line":13,"column":14,"nodeType":"383","messageId":"384","endLine":13,"endColumn":26},{"ruleId":"407","severity":1,"message":"408","line":20,"column":15,"nodeType":"409","endLine":35,"endColumn":6},{"ruleId":"407","severity":1,"message":"410","line":35,"column":7,"nodeType":"411","endLine":35,"endColumn":19,"suggestions":"412"},{"ruleId":"381","severity":1,"message":"413","line":1,"column":8,"nodeType":"383","messageId":"384","endLine":1,"endColumn":13},{"ruleId":"381","severity":1,"message":"414","line":3,"column":3,"nodeType":"383","messageId":"384","endLine":3,"endColumn":8},{"ruleId":"381","severity":1,"message":"415","line":4,"column":3,"nodeType":"383","messageId":"384","endLine":4,"endColumn":12},{"ruleId":"381","severity":1,"message":"416","line":5,"column":3,"nodeType":"383","messageId":"384","endLine":5,"endColumn":9},{"ruleId":"381","severity":1,"message":"417","line":6,"column":3,"nodeType":"383","messageId":"384","endLine":6,"endColumn":6},{"ruleId":"381","severity":1,"message":"418","line":7,"column":3,"nodeType":"383","messageId":"384","endLine":7,"endColumn":10},{"ruleId":"381","severity":1,"message":"419","line":8,"column":3,"nodeType":"383","messageId":"384","endLine":8,"endColumn":13},{"ruleId":"381","severity":1,"message":"420","line":11,"column":3,"nodeType":"383","messageId":"384","endLine":11,"endColumn":13},{"ruleId":"381","severity":1,"message":"421","line":17,"column":10,"nodeType":"383","messageId":"384","endLine":17,"endColumn":19},{"ruleId":"381","severity":1,"message":"422","line":23,"column":9,"nodeType":"383","messageId":"384","endLine":23,"endColumn":16},{"ruleId":"381","severity":1,"message":"391","line":38,"column":15,"nodeType":"383","messageId":"384","endLine":38,"endColumn":19},{"ruleId":"394","severity":1,"message":"398","line":40,"column":16,"nodeType":"396","messageId":"397","endLine":40,"endColumn":18},{"ruleId":"381","severity":1,"message":"421","line":1,"column":27,"nodeType":"383","messageId":"384","endLine":1,"endColumn":36},{"ruleId":"381","severity":1,"message":"423","line":2,"column":18,"nodeType":"383","messageId":"384","endLine":2,"endColumn":22},{"ruleId":"381","severity":1,"message":"385","line":2,"column":24,"nodeType":"383","messageId":"384","endLine":2,"endColumn":32},{"ruleId":"381","severity":1,"message":"414","line":2,"column":34,"nodeType":"383","messageId":"384","endLine":2,"endColumn":39},{"ruleId":"381","severity":1,"message":"415","line":2,"column":41,"nodeType":"383","messageId":"384","endLine":2,"endColumn":50},{"ruleId":"381","severity":1,"message":"424","line":7,"column":10,"nodeType":"383","messageId":"384","endLine":7,"endColumn":16},{"ruleId":"381","severity":1,"message":"422","line":14,"column":9,"nodeType":"383","messageId":"384","endLine":14,"endColumn":16},{"ruleId":"381","severity":1,"message":"425","line":30,"column":10,"nodeType":"383","messageId":"384","endLine":30,"endColumn":16},{"ruleId":"381","severity":1,"message":"426","line":30,"column":18,"nodeType":"383","messageId":"384","endLine":30,"endColumn":27},{"ruleId":"394","severity":1,"message":"398","line":98,"column":27,"nodeType":"396","messageId":"397","endLine":98,"endColumn":29},{"ruleId":"394","severity":1,"message":"398","line":101,"column":33,"nodeType":"396","messageId":"397","endLine":101,"endColumn":35},{"ruleId":"394","severity":1,"message":"398","line":104,"column":32,"nodeType":"396","messageId":"397","endLine":104,"endColumn":34},{"ruleId":"394","severity":1,"message":"398","line":107,"column":29,"nodeType":"396","messageId":"397","endLine":107,"endColumn":31},{"ruleId":"394","severity":1,"message":"398","line":110,"column":29,"nodeType":"396","messageId":"397","endLine":110,"endColumn":31},{"ruleId":"381","severity":1,"message":"399","line":126,"column":11,"nodeType":"383","messageId":"384","endLine":126,"endColumn":19},{"ruleId":"394","severity":1,"message":"398","line":285,"column":27,"nodeType":"396","messageId":"397","endLine":285,"endColumn":29},{"ruleId":"394","severity":1,"message":"398","line":285,"column":80,"nodeType":"396","messageId":"397","endLine":285,"endColumn":82},{"ruleId":"381","severity":1,"message":"427","line":1,"column":50,"nodeType":"383","messageId":"384","endLine":1,"endColumn":59},{"ruleId":"381","severity":1,"message":"428","line":2,"column":10,"nodeType":"383","messageId":"384","endLine":2,"endColumn":16},{"ruleId":"381","severity":1,"message":"429","line":2,"column":18,"nodeType":"383","messageId":"384","endLine":2,"endColumn":23},{"ruleId":"381","severity":1,"message":"430","line":2,"column":25,"nodeType":"383","messageId":"384","endLine":2,"endColumn":29},{"ruleId":"381","severity":1,"message":"431","line":2,"column":31,"nodeType":"383","messageId":"384","endLine":2,"endColumn":40},{"ruleId":"381","severity":1,"message":"432","line":2,"column":42,"nodeType":"383","messageId":"384","endLine":2,"endColumn":52},{"ruleId":"381","severity":1,"message":"433","line":6,"column":8,"nodeType":"383","messageId":"384","endLine":6,"endColumn":16},{"ruleId":"381","severity":1,"message":"434","line":7,"column":8,"nodeType":"383","messageId":"384","endLine":7,"endColumn":17},{"ruleId":"381","severity":1,"message":"435","line":8,"column":8,"nodeType":"383","messageId":"384","endLine":8,"endColumn":24},{"ruleId":"381","severity":1,"message":"436","line":9,"column":8,"nodeType":"383","messageId":"384","endLine":9,"endColumn":25},{"ruleId":"381","severity":1,"message":"437","line":10,"column":8,"nodeType":"383","messageId":"384","endLine":10,"endColumn":17},{"ruleId":"381","severity":1,"message":"438","line":10,"column":21,"nodeType":"383","messageId":"384","endLine":10,"endColumn":38},{"ruleId":"381","severity":1,"message":"439","line":10,"column":40,"nodeType":"383","messageId":"384","endLine":10,"endColumn":58},{"ruleId":"381","severity":1,"message":"420","line":18,"column":3,"nodeType":"383","messageId":"384","endLine":18,"endColumn":13},{"ruleId":"381","severity":1,"message":"440","line":19,"column":3,"nodeType":"383","messageId":"384","endLine":19,"endColumn":15},{"ruleId":"381","severity":1,"message":"419","line":25,"column":3,"nodeType":"383","messageId":"384","endLine":25,"endColumn":13},{"ruleId":"381","severity":1,"message":"441","line":26,"column":3,"nodeType":"383","messageId":"384","endLine":26,"endColumn":13},{"ruleId":"381","severity":1,"message":"442","line":30,"column":3,"nodeType":"383","messageId":"384","endLine":30,"endColumn":16},{"ruleId":"381","severity":1,"message":"443","line":32,"column":3,"nodeType":"383","messageId":"384","endLine":32,"endColumn":10},{"ruleId":"381","severity":1,"message":"444","line":35,"column":10,"nodeType":"383","messageId":"384","endLine":35,"endColumn":16},{"ruleId":"381","severity":1,"message":"445","line":36,"column":24,"nodeType":"383","messageId":"384","endLine":36,"endColumn":35},{"ruleId":"394","severity":1,"message":"398","line":76,"column":77,"nodeType":"396","messageId":"397","endLine":76,"endColumn":79},{"ruleId":"394","severity":1,"message":"398","line":89,"column":26,"nodeType":"396","messageId":"397","endLine":89,"endColumn":28},{"ruleId":"394","severity":1,"message":"398","line":92,"column":29,"nodeType":"396","messageId":"397","endLine":92,"endColumn":31},{"ruleId":"394","severity":1,"message":"398","line":95,"column":32,"nodeType":"396","messageId":"397","endLine":95,"endColumn":34},{"ruleId":"394","severity":1,"message":"398","line":98,"column":47,"nodeType":"396","messageId":"397","endLine":98,"endColumn":49},{"ruleId":"394","severity":1,"message":"398","line":104,"column":79,"nodeType":"396","messageId":"397","endLine":104,"endColumn":81},{"ruleId":"394","severity":1,"message":"398","line":109,"column":34,"nodeType":"396","messageId":"397","endLine":109,"endColumn":36},{"ruleId":"394","severity":1,"message":"398","line":109,"column":63,"nodeType":"396","messageId":"397","endLine":109,"endColumn":65},{"ruleId":"394","severity":1,"message":"398","line":109,"column":90,"nodeType":"396","messageId":"397","endLine":109,"endColumn":92},{"ruleId":"394","severity":1,"message":"398","line":110,"column":29,"nodeType":"396","messageId":"397","endLine":110,"endColumn":31},{"ruleId":"394","severity":1,"message":"398","line":114,"column":30,"nodeType":"396","messageId":"397","endLine":114,"endColumn":32},{"ruleId":"381","severity":1,"message":"446","line":135,"column":9,"nodeType":"383","messageId":"384","endLine":135,"endColumn":16},{"ruleId":"407","severity":1,"message":"447","line":187,"column":3,"nodeType":"411","endLine":187,"endColumn":20,"suggestions":"448"},{"ruleId":"381","severity":1,"message":"449","line":196,"column":17,"nodeType":"383","messageId":"384","endLine":196,"endColumn":24},{"ruleId":"381","severity":1,"message":"392","line":201,"column":24,"nodeType":"383","messageId":"384","endLine":201,"endColumn":29},{"ruleId":"381","severity":1,"message":"450","line":201,"column":31,"nodeType":"383","messageId":"384","endLine":201,"endColumn":37},{"ruleId":"394","severity":1,"message":"398","line":213,"column":8,"nodeType":"396","messageId":"397","endLine":213,"endColumn":10},{"ruleId":"381","severity":1,"message":"399","line":227,"column":9,"nodeType":"383","messageId":"384","endLine":227,"endColumn":17},{"ruleId":"394","severity":1,"message":"398","line":424,"column":25,"nodeType":"396","messageId":"397","endLine":424,"endColumn":27},{"ruleId":"394","severity":1,"message":"398","line":424,"column":66,"nodeType":"396","messageId":"397","endLine":424,"endColumn":68},{"ruleId":"381","severity":1,"message":"445","line":8,"column":10,"nodeType":"383","messageId":"384","endLine":8,"endColumn":21},{"ruleId":"381","severity":1,"message":"451","line":8,"column":23,"nodeType":"383","messageId":"384","endLine":8,"endColumn":35},{"ruleId":"381","severity":1,"message":"452","line":28,"column":14,"nodeType":"383","messageId":"384","endLine":28,"endColumn":21},{"ruleId":"381","severity":1,"message":"453","line":28,"column":23,"nodeType":"383","messageId":"384","endLine":28,"endColumn":33},{"ruleId":"394","severity":1,"message":"398","line":54,"column":20,"nodeType":"396","messageId":"397","endLine":54,"endColumn":22},{"ruleId":"381","severity":1,"message":"390","line":80,"column":19,"nodeType":"383","messageId":"384","endLine":80,"endColumn":24},{"ruleId":"381","severity":1,"message":"399","line":88,"column":11,"nodeType":"383","messageId":"384","endLine":88,"endColumn":19},{"ruleId":"394","severity":1,"message":"398","line":166,"column":27,"nodeType":"396","messageId":"397","endLine":166,"endColumn":29},{"ruleId":"394","severity":1,"message":"398","line":166,"column":68,"nodeType":"396","messageId":"397","endLine":166,"endColumn":70},{"ruleId":"381","severity":1,"message":"422","line":17,"column":9,"nodeType":"383","messageId":"384","endLine":17,"endColumn":16},{"ruleId":"381","severity":1,"message":"454","line":2,"column":29,"nodeType":"383","messageId":"384","endLine":2,"endColumn":37},{"ruleId":"381","severity":1,"message":"442","line":10,"column":3,"nodeType":"383","messageId":"384","endLine":10,"endColumn":16},{"ruleId":"381","severity":1,"message":"443","line":12,"column":3,"nodeType":"383","messageId":"384","endLine":12,"endColumn":10},{"ruleId":"381","severity":1,"message":"452","line":33,"column":12,"nodeType":"383","messageId":"384","endLine":33,"endColumn":19},{"ruleId":"381","severity":1,"message":"453","line":33,"column":21,"nodeType":"383","messageId":"384","endLine":33,"endColumn":31},{"ruleId":"394","severity":1,"message":"398","line":60,"column":19,"nodeType":"396","messageId":"397","endLine":60,"endColumn":21},{"ruleId":"394","severity":1,"message":"398","line":63,"column":33,"nodeType":"396","messageId":"397","endLine":63,"endColumn":35},{"ruleId":"394","severity":1,"message":"398","line":66,"column":30,"nodeType":"396","messageId":"397","endLine":66,"endColumn":32},{"ruleId":"394","severity":1,"message":"398","line":69,"column":28,"nodeType":"396","messageId":"397","endLine":69,"endColumn":30},{"ruleId":"381","severity":1,"message":"390","line":100,"column":23,"nodeType":"383","messageId":"384","endLine":100,"endColumn":28},{"ruleId":"381","severity":1,"message":"399","line":108,"column":15,"nodeType":"383","messageId":"384","endLine":108,"endColumn":23},{"ruleId":"394","severity":1,"message":"398","line":213,"column":27,"nodeType":"396","messageId":"397","endLine":213,"endColumn":29},{"ruleId":"394","severity":1,"message":"398","line":213,"column":65,"nodeType":"396","messageId":"397","endLine":213,"endColumn":67},{"ruleId":"381","severity":1,"message":"455","line":2,"column":110,"nodeType":"383","messageId":"384","endLine":2,"endColumn":125},{"ruleId":"381","severity":1,"message":"456","line":2,"column":127,"nodeType":"383","messageId":"384","endLine":2,"endColumn":132},{"ruleId":"381","severity":1,"message":"457","line":9,"column":8,"nodeType":"383","messageId":"384","endLine":9,"endColumn":22},{"ruleId":"381","severity":1,"message":"451","line":10,"column":23,"nodeType":"383","messageId":"384","endLine":10,"endColumn":35},{"ruleId":"381","severity":1,"message":"458","line":26,"column":7,"nodeType":"383","messageId":"384","endLine":26,"endColumn":21},{"ruleId":"381","severity":1,"message":"426","line":38,"column":18,"nodeType":"383","messageId":"384","endLine":38,"endColumn":27},{"ruleId":"394","severity":1,"message":"398","line":63,"column":39,"nodeType":"396","messageId":"397","endLine":63,"endColumn":41},{"ruleId":"394","severity":1,"message":"398","line":63,"column":75,"nodeType":"396","messageId":"397","endLine":63,"endColumn":77},{"ruleId":"394","severity":1,"message":"398","line":63,"column":104,"nodeType":"396","messageId":"397","endLine":63,"endColumn":106},{"ruleId":"394","severity":1,"message":"398","line":64,"column":28,"nodeType":"396","messageId":"397","endLine":64,"endColumn":30},{"ruleId":"394","severity":1,"message":"398","line":64,"column":59,"nodeType":"396","messageId":"397","endLine":64,"endColumn":61},{"ruleId":"394","severity":1,"message":"395","line":91,"column":37,"nodeType":"396","messageId":"397","endLine":91,"endColumn":39},{"ruleId":"381","severity":1,"message":"399","line":97,"column":11,"nodeType":"383","messageId":"384","endLine":97,"endColumn":19},{"ruleId":"381","severity":1,"message":"399","line":121,"column":13,"nodeType":"383","messageId":"384","endLine":121,"endColumn":21},{"ruleId":"381","severity":1,"message":"459","line":142,"column":9,"nodeType":"383","messageId":"384","endLine":142,"endColumn":13},{"ruleId":"381","severity":1,"message":"399","line":147,"column":11,"nodeType":"383","messageId":"384","endLine":147,"endColumn":19},{"ruleId":"394","severity":1,"message":"398","line":168,"column":25,"nodeType":"396","messageId":"397","endLine":168,"endColumn":27},{"ruleId":"394","severity":1,"message":"398","line":183,"column":34,"nodeType":"396","messageId":"397","endLine":183,"endColumn":36},{"ruleId":"394","severity":1,"message":"398","line":201,"column":53,"nodeType":"396","messageId":"397","endLine":201,"endColumn":55},{"ruleId":"381","severity":1,"message":"460","line":9,"column":3,"nodeType":"383","messageId":"384","endLine":9,"endColumn":9},{"ruleId":"381","severity":1,"message":"442","line":16,"column":3,"nodeType":"383","messageId":"384","endLine":16,"endColumn":16},{"ruleId":"381","severity":1,"message":"443","line":18,"column":3,"nodeType":"383","messageId":"384","endLine":18,"endColumn":10},{"ruleId":"381","severity":1,"message":"451","line":25,"column":28,"nodeType":"383","messageId":"384","endLine":25,"endColumn":40},{"ruleId":"381","severity":1,"message":"461","line":25,"column":83,"nodeType":"383","messageId":"384","endLine":25,"endColumn":94},{"ruleId":"381","severity":1,"message":"452","line":41,"column":10,"nodeType":"383","messageId":"384","endLine":41,"endColumn":17},{"ruleId":"381","severity":1,"message":"453","line":41,"column":19,"nodeType":"383","messageId":"384","endLine":41,"endColumn":29},{"ruleId":"381","severity":1,"message":"462","line":45,"column":9,"nodeType":"383","messageId":"384","endLine":45,"endColumn":15},{"ruleId":"394","severity":1,"message":"398","line":94,"column":27,"nodeType":"396","messageId":"397","endLine":94,"endColumn":29},{"ruleId":"394","severity":1,"message":"398","line":97,"column":34,"nodeType":"396","messageId":"397","endLine":97,"endColumn":36},{"ruleId":"394","severity":1,"message":"398","line":100,"column":31,"nodeType":"396","messageId":"397","endLine":100,"endColumn":33},{"ruleId":"394","severity":1,"message":"398","line":103,"column":31,"nodeType":"396","messageId":"397","endLine":103,"endColumn":33},{"ruleId":"394","severity":1,"message":"398","line":106,"column":42,"nodeType":"396","messageId":"397","endLine":106,"endColumn":44},{"ruleId":"394","severity":1,"message":"398","line":109,"column":38,"nodeType":"396","messageId":"397","endLine":109,"endColumn":40},{"ruleId":"394","severity":1,"message":"398","line":112,"column":38,"nodeType":"396","messageId":"397","endLine":112,"endColumn":40},{"ruleId":"394","severity":1,"message":"398","line":115,"column":38,"nodeType":"396","messageId":"397","endLine":115,"endColumn":40},{"ruleId":"394","severity":1,"message":"398","line":118,"column":38,"nodeType":"396","messageId":"397","endLine":118,"endColumn":40},{"ruleId":"394","severity":1,"message":"398","line":121,"column":35,"nodeType":"396","messageId":"397","endLine":121,"endColumn":37},{"ruleId":"394","severity":1,"message":"398","line":124,"column":34,"nodeType":"396","messageId":"397","endLine":124,"endColumn":36},{"ruleId":"394","severity":1,"message":"398","line":127,"column":33,"nodeType":"396","messageId":"397","endLine":127,"endColumn":35},{"ruleId":"394","severity":1,"message":"398","line":130,"column":44,"nodeType":"396","messageId":"397","endLine":130,"endColumn":46},{"ruleId":"394","severity":1,"message":"398","line":133,"column":35,"nodeType":"396","messageId":"397","endLine":133,"endColumn":37},{"ruleId":"394","severity":1,"message":"398","line":136,"column":38,"nodeType":"396","messageId":"397","endLine":136,"endColumn":40},{"ruleId":"394","severity":1,"message":"398","line":201,"column":14,"nodeType":"396","messageId":"397","endLine":201,"endColumn":16},{"ruleId":"394","severity":1,"message":"398","line":205,"column":21,"nodeType":"396","messageId":"397","endLine":205,"endColumn":23},{"ruleId":"394","severity":1,"message":"398","line":209,"column":21,"nodeType":"396","messageId":"397","endLine":209,"endColumn":23},{"ruleId":"394","severity":1,"message":"398","line":213,"column":21,"nodeType":"396","messageId":"397","endLine":213,"endColumn":23},{"ruleId":"394","severity":1,"message":"398","line":217,"column":21,"nodeType":"396","messageId":"397","endLine":217,"endColumn":23},{"ruleId":"394","severity":1,"message":"398","line":221,"column":21,"nodeType":"396","messageId":"397","endLine":221,"endColumn":23},{"ruleId":"394","severity":1,"message":"398","line":225,"column":21,"nodeType":"396","messageId":"397","endLine":225,"endColumn":23},{"ruleId":"394","severity":1,"message":"398","line":229,"column":21,"nodeType":"396","messageId":"397","endLine":229,"endColumn":23},{"ruleId":"394","severity":1,"message":"398","line":233,"column":21,"nodeType":"396","messageId":"397","endLine":233,"endColumn":23},{"ruleId":"394","severity":1,"message":"398","line":237,"column":21,"nodeType":"396","messageId":"397","endLine":237,"endColumn":23},{"ruleId":"394","severity":1,"message":"398","line":241,"column":21,"nodeType":"396","messageId":"397","endLine":241,"endColumn":23},{"ruleId":"394","severity":1,"message":"398","line":245,"column":21,"nodeType":"396","messageId":"397","endLine":245,"endColumn":23},{"ruleId":"381","severity":1,"message":"449","line":254,"column":19,"nodeType":"383","messageId":"384","endLine":254,"endColumn":26},{"ruleId":"381","severity":1,"message":"449","line":281,"column":19,"nodeType":"383","messageId":"384","endLine":281,"endColumn":26},{"ruleId":"394","severity":1,"message":"395","line":288,"column":19,"nodeType":"396","messageId":"397","endLine":288,"endColumn":21},{"ruleId":"381","severity":1,"message":"399","line":303,"column":11,"nodeType":"383","messageId":"384","endLine":303,"endColumn":19},{"ruleId":"394","severity":1,"message":"395","line":314,"column":50,"nodeType":"396","messageId":"397","endLine":314,"endColumn":52},{"ruleId":"394","severity":1,"message":"398","line":386,"column":40,"nodeType":"396","messageId":"397","endLine":386,"endColumn":42},{"ruleId":"394","severity":1,"message":"398","line":388,"column":44,"nodeType":"396","messageId":"397","endLine":388,"endColumn":46},{"ruleId":"394","severity":1,"message":"398","line":394,"column":57,"nodeType":"396","messageId":"397","endLine":394,"endColumn":59},{"ruleId":"394","severity":1,"message":"398","line":653,"column":27,"nodeType":"396","messageId":"397","endLine":653,"endColumn":29},{"ruleId":"394","severity":1,"message":"398","line":653,"column":80,"nodeType":"396","messageId":"397","endLine":653,"endColumn":82},{"ruleId":"381","severity":1,"message":"463","line":23,"column":8,"nodeType":"383","messageId":"384","endLine":23,"endColumn":10},{"ruleId":"381","severity":1,"message":"464","line":24,"column":10,"nodeType":"383","messageId":"384","endLine":24,"endColumn":19},{"ruleId":"381","severity":1,"message":"465","line":27,"column":10,"nodeType":"383","messageId":"384","endLine":27,"endColumn":22},{"ruleId":"381","severity":1,"message":"458","line":32,"column":7,"nodeType":"383","messageId":"384","endLine":32,"endColumn":21},{"ruleId":"394","severity":1,"message":"398","line":81,"column":26,"nodeType":"396","messageId":"397","endLine":81,"endColumn":28},{"ruleId":"394","severity":1,"message":"398","line":81,"column":53,"nodeType":"396","messageId":"397","endLine":81,"endColumn":55},{"ruleId":"394","severity":1,"message":"398","line":81,"column":68,"nodeType":"396","messageId":"397","endLine":81,"endColumn":70},{"ruleId":"394","severity":1,"message":"398","line":84,"column":29,"nodeType":"396","messageId":"397","endLine":84,"endColumn":31},{"ruleId":"394","severity":1,"message":"398","line":87,"column":38,"nodeType":"396","messageId":"397","endLine":87,"endColumn":40},{"ruleId":"394","severity":1,"message":"398","line":90,"column":38,"nodeType":"396","messageId":"397","endLine":90,"endColumn":40},{"ruleId":"407","severity":1,"message":"447","line":134,"column":5,"nodeType":"411","endLine":134,"endColumn":12,"suggestions":"466"},{"ruleId":"394","severity":1,"message":"398","line":166,"column":14,"nodeType":"396","messageId":"397","endLine":166,"endColumn":16},{"ruleId":"394","severity":1,"message":"398","line":168,"column":21,"nodeType":"396","messageId":"397","endLine":168,"endColumn":23},{"ruleId":"394","severity":1,"message":"395","line":168,"column":40,"nodeType":"396","messageId":"397","endLine":168,"endColumn":42},{"ruleId":"394","severity":1,"message":"398","line":171,"column":21,"nodeType":"396","messageId":"397","endLine":171,"endColumn":23},{"ruleId":"394","severity":1,"message":"395","line":171,"column":40,"nodeType":"396","messageId":"397","endLine":171,"endColumn":42},{"ruleId":"381","severity":1,"message":"399","line":219,"column":11,"nodeType":"383","messageId":"384","endLine":219,"endColumn":19},{"ruleId":"394","severity":1,"message":"398","line":318,"column":43,"nodeType":"396","messageId":"397","endLine":318,"endColumn":45},{"ruleId":"381","severity":1,"message":"467","line":3,"column":10,"nodeType":"383","messageId":"384","endLine":3,"endColumn":18},{"ruleId":"381","severity":1,"message":"468","line":5,"column":10,"nodeType":"383","messageId":"384","endLine":5,"endColumn":16},{"ruleId":"381","severity":1,"message":"469","line":7,"column":10,"nodeType":"383","messageId":"384","endLine":7,"endColumn":13},{"ruleId":"381","severity":1,"message":"388","line":11,"column":11,"nodeType":"383","messageId":"384","endLine":11,"endColumn":16},{"ruleId":"381","severity":1,"message":"470","line":11,"column":18,"nodeType":"383","messageId":"384","endLine":11,"endColumn":28},{"ruleId":"381","severity":1,"message":"422","line":17,"column":9,"nodeType":"383","messageId":"384","endLine":17,"endColumn":16},{"ruleId":"381","severity":1,"message":"471","line":19,"column":12,"nodeType":"383","messageId":"384","endLine":19,"endColumn":23},{"ruleId":"381","severity":1,"message":"472","line":23,"column":12,"nodeType":"383","messageId":"384","endLine":23,"endColumn":25},{"ruleId":"381","severity":1,"message":"414","line":1,"column":16,"nodeType":"383","messageId":"384","endLine":1,"endColumn":21},{"ruleId":"394","severity":1,"message":"398","line":31,"column":35,"nodeType":"396","messageId":"397","endLine":31,"endColumn":37},{"ruleId":"407","severity":1,"message":"473","line":58,"column":12,"nodeType":"411","endLine":58,"endColumn":29,"suggestions":"474"},{"ruleId":"381","severity":1,"message":"390","line":72,"column":23,"nodeType":"383","messageId":"384","endLine":72,"endColumn":28},{"ruleId":"394","severity":1,"message":"398","line":74,"column":59,"nodeType":"396","messageId":"397","endLine":74,"endColumn":61},{"ruleId":"394","severity":1,"message":"398","line":89,"column":28,"nodeType":"396","messageId":"397","endLine":89,"endColumn":30},{"ruleId":"394","severity":1,"message":"398","line":91,"column":37,"nodeType":"396","messageId":"397","endLine":91,"endColumn":39},{"ruleId":"394","severity":1,"message":"398","line":114,"column":59,"nodeType":"396","messageId":"397","endLine":114,"endColumn":61},{"ruleId":"381","severity":1,"message":"399","line":128,"column":15,"nodeType":"383","messageId":"384","endLine":128,"endColumn":23},"no-native-reassign",["475"],"no-negated-in-lhs",["476"],"no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'MenuItem' is defined but never used.","'Link' is defined but never used.","'Aluno' is defined but never used.","'token' is assigned a value but never used.","'onlyNumbersMax2' is defined but never used.","'value' is assigned a value but never used.","'name' is assigned a value but never used.","'index' is assigned a value but never used.","'newValues' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'response' is assigned a value but never used.","'Loader' is defined but never used.","'showSidebar' is assigned a value but never used.","'FaIcons' is defined but never used.","'IoIcons' is defined but never used.","'useContext' is defined but never used.","'history' is assigned a value but never used.","'handleErrors' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","FunctionExpression","React Hook useEffect has missing dependencies: 'body' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["477"],"'React' is defined but never used.","'Paper' is defined but never used.","'TextField' is defined but never used.","'AppBar' is defined but never used.","'Box' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'InputLabel' is defined but never used.","'useEffect' is defined but never used.","'classes' is assigned a value but never used.","'Grid' is defined but never used.","'format' is defined but never used.","'values' is assigned a value but never used.","'setValues' is assigned a value but never used.","'Component' is defined but never used.","'Formik' is defined but never used.","'Field' is defined but never used.","'Form' is defined but never used.","'useFormik' is defined but never used.","'FieldArray' is defined but never used.","'Checkbox' is defined but never used.","'FormGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'ScopedCssBaseline' is defined but never used.","'lifecycle' is defined but never used.","'componentDidMount' is defined but never used.","'componentDidUpdate' is defined but never used.","'ListItemText' is defined but never used.","'withStyles' is defined but never used.","'DialogActions' is defined but never used.","'Tooltip' is defined but never used.","'purple' is defined but never used.","'onlyLetters' is defined but never used.","'methods' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["478"],"'checked' is assigned a value but never used.","'select' is assigned a value but never used.","'currencyMask' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'useState' is defined but never used.","'TablePagination' is defined but never used.","'Table' is defined but never used.","'CurrencyFormat' is defined but never used.","'CurrencyFormat' is assigned a value but never used.","'show' is assigned a value but never used.","'Select' is defined but never used.","'onlyNumbers' is defined but never used.","'person' is assigned a value but never used.","'et' is defined but never used.","'parseJSON' is defined but never used.","'setDayOfYear' is defined but never used.",["479"],"'useFetch' is defined but never used.","'Button' is defined but never used.","'url' is defined but never used.","'userLogged' is assigned a value but never used.","'novaMateria' is defined but never used.","'editarMateria' is defined but never used.","React Hook useEffect has a missing dependency: 'userLogged.empresaId'. Either include it or remove the dependency array.",["480"],"no-global-assign","no-unsafe-negation",{"desc":"481","fix":"482"},{"desc":"483","fix":"484"},{"desc":"485","fix":"486"},{"desc":"487","fix":"488"},"Update the dependencies array to be: [url, method, token, body]",{"range":"489","text":"490"},"Update the dependencies array to be: [values, values.QtdAulas]",{"range":"491","text":"492"},"Update the dependencies array to be: [todos, values]",{"range":"493","text":"494"},"Update the dependencies array to be: [retornoContrato, userLogged.empresaId]",{"range":"495","text":"496"},[894,906],"[url, method, token, body]",[5971,5988],"[values, values.QtdAulas]",[4041,4048],"[todos, values]",[2076,2093],"[retornoContrato, userLogged.empresaId]"]