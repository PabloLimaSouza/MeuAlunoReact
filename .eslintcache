[{"D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\index.js":"1","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\App.jsx":"2","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Usuario\\Login.jsx":"3","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\contexts\\Provider.jsx":"4","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Aluno\\CadastroAluno.jsx":"5","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\components\\menu\\MenuItem.jsx":"6","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\components\\content\\Content.jsx":"7","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\components\\menu\\Menu.jsx":"8","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\components\\Routes\\Private\\Private.jsx":"9","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\contexts\\StoreContext.js":"10","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\utils\\useStorage.js":"11","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\hooks\\useFetch.js":"12","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Styles\\useStyles.js":"13","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Aluno\\Alunos.jsx":"14","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\components\\content\\Header.jsx":"15","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Servico\\CadastroServico.jsx":"16","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Servico\\Servicos.jsx":"17","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Materia\\Materias.jsx":"18","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Aula\\Aulas.jsx":"19","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Aula\\CadastroAula.jsx":"20","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Empresa\\Empresa.jsx":"21","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Materia\\CadastroMateria.jsx":"22","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Empresa\\CadastroEmpresa.jsx":"23","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Financeiro\\Financeiros.jsx":"24","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Financeiro\\CadastroFinanceiro.jsx":"25","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\utils\\storage.js":"26","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\index.js":"27","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\App.jsx":"28","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Usuario\\Login.jsx":"29","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\contexts\\Provider.jsx":"30","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Aluno\\CadastroAluno.jsx":"31","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\components\\menu\\MenuItem.jsx":"32","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\components\\menu\\Menu.jsx":"33","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\components\\content\\Content.jsx":"34","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\components\\Routes\\Private\\Private.jsx":"35","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\contexts\\StoreContext.js":"36","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\hooks\\useFetch.js":"37","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\utils\\useStorage.js":"38","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Styles\\useStyles.js":"39","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\components\\content\\Header.jsx":"40","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Aluno\\Alunos.jsx":"41","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Servico\\CadastroServico.jsx":"42","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Servico\\Servicos.jsx":"43","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Aula\\Aulas.jsx":"44","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Aula\\CadastroAula.jsx":"45","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Empresa\\Empresa.jsx":"46","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Materia\\Materias.jsx":"47","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Empresa\\CadastroEmpresa.jsx":"48","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Financeiro\\CadastroFinanceiro.jsx":"49","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Materia\\CadastroMateria.jsx":"50","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Financeiro\\Financeiros.jsx":"51","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\utils\\storage.js":"52","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\utils\\mask.jsx":"53","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Usuario\\CadastroUsuario.jsx":"54","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Usuario\\Usuarios.jsx":"55","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Home\\Home.jsx":"56","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Contratos\\CadastroContrato.jsx":"57","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\variaveis.js":"58","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Contratos\\Contratos.jsx":"59"},{"size":383,"mtime":1613090310000,"results":"60","hashOfConfig":"61"},{"size":851,"mtime":1618395192000,"results":"62","hashOfConfig":"61"},{"size":2553,"mtime":1613570932000,"results":"63","hashOfConfig":"61"},{"size":397,"mtime":1613513018000,"results":"64","hashOfConfig":"61"},{"size":17675,"mtime":1637514307297,"results":"65","hashOfConfig":"61"},{"size":1130,"mtime":1637514113816,"results":"66","hashOfConfig":"61"},{"size":2482,"mtime":1637011854000,"results":"67","hashOfConfig":"61"},{"size":932,"mtime":1618395942000,"results":"68","hashOfConfig":"61"},{"size":454,"mtime":1618395268000,"results":"69","hashOfConfig":"61"},{"size":154,"mtime":1637511972926,"results":"70","hashOfConfig":"61"},{"size":446,"mtime":1613477594000,"results":"71","hashOfConfig":"61"},{"size":502,"mtime":1619734808000,"results":"72","hashOfConfig":"61"},{"size":1163,"mtime":1614433708000,"results":"73","hashOfConfig":"61"},{"size":2325,"mtime":1628556012000,"results":"74","hashOfConfig":"61"},{"size":720,"mtime":1631584108000,"results":"75","hashOfConfig":"61"},{"size":10420,"mtime":1637513967349,"results":"76","hashOfConfig":"61"},{"size":1924,"mtime":1628557578000,"results":"77","hashOfConfig":"61"},{"size":1887,"mtime":1629067970000,"results":"78","hashOfConfig":"61"},{"size":1797,"mtime":1629064724000,"results":"79","hashOfConfig":"61"},{"size":5191,"mtime":1633182026000,"results":"80","hashOfConfig":"61"},{"size":1723,"mtime":1631586180000,"results":"81","hashOfConfig":"61"},{"size":3653,"mtime":1637513383504,"results":"82","hashOfConfig":"61"},{"size":17115,"mtime":1632967236000,"results":"83","hashOfConfig":"61"},{"size":6151,"mtime":1637015242000,"results":"84","hashOfConfig":"61"},{"size":12266,"mtime":1638031206023,"results":"85","hashOfConfig":"61"},{"size":740,"mtime":1613477586000,"results":"86","hashOfConfig":"61"},{"size":422,"mtime":1644065226145,"results":"87","hashOfConfig":"88"},{"size":851,"mtime":1638124916238,"results":"89","hashOfConfig":"88"},{"size":2729,"mtime":1645311068228,"results":"90","hashOfConfig":"88"},{"size":507,"mtime":1643550733506,"results":"91","hashOfConfig":"88"},{"size":21973,"mtime":1645310172529,"results":"92","hashOfConfig":"88"},{"size":2404,"mtime":1645330088300,"results":"93","hashOfConfig":"88"},{"size":1717,"mtime":1645066464735,"results":"94","hashOfConfig":"88"},{"size":2602,"mtime":1645330163910,"results":"95","hashOfConfig":"88"},{"size":770,"mtime":1643576006332,"results":"96","hashOfConfig":"88"},{"size":154,"mtime":1638124916236,"results":"97","hashOfConfig":"88"},{"size":931,"mtime":1643576061012,"results":"98","hashOfConfig":"88"},{"size":446,"mtime":1638124916236,"results":"99","hashOfConfig":"88"},{"size":1163,"mtime":1638124916242,"results":"100","hashOfConfig":"88"},{"size":1952,"mtime":1643558233106,"results":"101","hashOfConfig":"88"},{"size":2353,"mtime":1645311113633,"results":"102","hashOfConfig":"88"},{"size":13215,"mtime":1645311027927,"results":"103","hashOfConfig":"88"},{"size":1986,"mtime":1645311045662,"results":"104","hashOfConfig":"88"},{"size":1809,"mtime":1645310804241,"results":"105","hashOfConfig":"88"},{"size":7554,"mtime":1645310867090,"results":"106","hashOfConfig":"88"},{"size":1861,"mtime":1645310938769,"results":"107","hashOfConfig":"88"},{"size":1895,"mtime":1645310993154,"results":"108","hashOfConfig":"88"},{"size":21909,"mtime":1645310916114,"results":"109","hashOfConfig":"88"},{"size":14617,"mtime":1645310953640,"results":"110","hashOfConfig":"88"},{"size":5303,"mtime":1645310981690,"results":"111","hashOfConfig":"88"},{"size":10221,"mtime":1645310972314,"results":"112","hashOfConfig":"88"},{"size":740,"mtime":1638124916236,"results":"113","hashOfConfig":"88"},{"size":2704,"mtime":1639602622879,"results":"114","hashOfConfig":"88"},{"size":12652,"mtime":1645311810138,"results":"115","hashOfConfig":"88"},{"size":2539,"mtime":1645311260239,"results":"116","hashOfConfig":"88"},{"size":1350,"mtime":1645500350820,"results":"117","hashOfConfig":"88"},{"size":5098,"mtime":1645498530607,"results":"118","hashOfConfig":"88"},{"size":117,"mtime":1645500239818,"results":"119","hashOfConfig":"88"},{"size":1028,"mtime":1645403498123,"results":"120","hashOfConfig":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},"7cfdpx",{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"123"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"123"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"123"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"123"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"123"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"123"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"123"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"123"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"123"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"123"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"123"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"123"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"123"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"123"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"123"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"123"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},"gtz0pb",{"filePath":"193","messages":"194","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"192"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"192"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"192"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"192"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"192"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"192"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"192"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"192"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"192"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"192"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"192"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"192"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"192"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"192"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"192"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"192"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"192"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"192"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"192"},"D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\index.js",[],["275","276"],"D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\App.jsx",["277","278","279","280"],"import React from 'react'\r\nimport Menu from '../components/menu/Menu'\r\nimport Content from '../components/content/Content'\r\nimport './App.css'\r\nimport MenuItem from '../components/menu/MenuItem'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport Login from '../views/Usuario/Login'\r\nimport Aluno from './Aluno/CadastroAluno'\r\nimport RoutesPrivate from '../components/Routes/Private/Private'\r\nimport StoreProvider from '../contexts/Provider'\r\n\r\nconst App = props => (   \r\n    <div>\r\n      <StoreProvider>\r\n     <Router>\r\n       <Switch>\r\n       <Route path=\"/login\" component={Login}/>          \r\n       <RoutesPrivate path=\"/\" component={Content}/>             \r\n       </Switch>  \r\n     </Router>       \r\n     </StoreProvider>       \r\n    </div>  \r\n\r\n    \r\n    \r\n)\r\n\r\nexport default App\r\n","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Usuario\\Login.jsx",["281","282","283","284"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\n\r\nimport \"./Login.css\";\r\n\r\nfunction initialState() {\r\n  return { Login: \"\", Senha: \"\" };\r\n}\r\n\r\nfunction login(values) {\r\n  if (values.Login !== '') {\r\n    return { token: values};\r\n  }\r\n  return { error: 'Usuário ou senha inválido' };\r\n}\r\n\r\nconst UserLogin = () => {\r\n  const [values, setValues] = useState(initialState);\r\n  const [error, setError] = useState(null);\r\n  const { setToken } = useContext(StoreContext);\r\n  const history = useHistory();\r\n  const {token} = '';\r\n\r\n  function onChange(event) {\r\n    const { value, name } = event.target;\r\n\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  function onSubmit(event) {\r\n    event.preventDefault();   \r\n    \r\n    const response = fetch(\"https://localhost:44389/api/usuario\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(values),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (response.login !== \"\") {                  \r\n         const { token, error } = login(response); \r\n         setToken(token);\r\n         return history.push(\"/\");\r\n         console.log(token) ;   \r\n         console.log('deubom');                  \r\n        } else {\r\n          console.log(\"Deu ruim\");\r\n        }\r\n      });   \r\n      \r\n    setError(error);\r\n    setValues(initialState);\r\n  }\r\n\r\n  return (\r\n    <div className=\"user-login\">\r\n      <h1 className=\"user-login__title\">Acessar o Sistema</h1>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"user-login__form-control\">\r\n          <label htmlFor=\"user\">Usuário</label>\r\n          <input\r\n            id=\"user\"\r\n            type=\"text\"\r\n            name=\"Login\"\r\n            onChange={onChange}\r\n            value={values.Login}\r\n          />\r\n        </div>\r\n        <div className=\"user-login__form-control\">\r\n          <label htmlFor=\"password\">Senha</label>\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            name=\"Senha\"\r\n            onChange={onChange}\r\n            value={values.Senha}\r\n          />\r\n        </div>\r\n        {error && <div className=\"user-login__error\">{error}</div>}\r\n        <button type=\"submit\" className=\"user-login__submit-button\">\r\n          Entrar\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserLogin;\r\n","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\contexts\\Provider.jsx",[],"D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Aluno\\CadastroAluno.jsx",["285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport {\r\n  Formik,\r\n  Field,\r\n  Form,\r\n  useFormik,\r\n  FieldArray,\r\n  getActiveElement,\r\n} from \"formik\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport ScopedCssBaseline from \"@material-ui/core/ScopedCssBaseline\";\r\n\r\nimport {\r\n  Button,\r\n  Divider,\r\n  FormControl,\r\n  FormLabel,\r\n  Grid,\r\n  InputLabel,\r\n  ListItemText,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport { purple } from \"@material-ui/core/colors\";\r\nimport { findAllByAltText } from \"@testing-library/dom\";\r\nimport { format } from 'date-fns';\r\n\r\nfunction CadastroAluno() {\r\n  const { token } = useContext(StoreContext);\r\n\r\n  const materiasUrl = `https://localhost:44389/api/materiaPorEmpresa/${token.empresaId}`;\r\n  const materiasResponse = useFetch(materiasUrl);\r\n  console.log(\"materias: \", materiasResponse.data)\r\n  const servicosUrl = `https://localhost:44389/api/servicoPorEmpresa/${token.empresaId}`;\r\n  const servicosResponse = useFetch(servicosUrl);\r\n\r\n  const editarAlunoId = window.location.pathname.split(\"/\");\r\n  var editarAlunoUrl = \"\";\r\n\r\n  if (editarAlunoId[2] != null) {\r\n    editarAlunoUrl = `https://localhost:44389/api/aluno/${editarAlunoId[2]}`;\r\n  }\r\n\r\n  const alunoResponse = useFetch(editarAlunoUrl);\r\n  const [loading, setLoading] = useState(true);\r\n  const [checked,setChecked] = useState(false);\r\n  \r\n \r\n\r\n  const initialValues = {\r\n    Id: 0,\r\n    Nome: \"\",\r\n    DataNascimento: \"\",\r\n    Serie: \"\",\r\n    NomeResponsavel: \"\",\r\n    CPFResponsavel: \"\",\r\n    TelefoneResponsavel: \"\",\r\n    EmailResponsavel: \"\",\r\n    Escola: \"\",\r\n    Endereco: {\r\n      Logradouro: \"\",\r\n      Numero: \"\",\r\n      Complemento: \"\",\r\n      Bairro: \"\",\r\n      Cidade: \"\",\r\n      Estado: \"\",\r\n      CEP: \"\",\r\n    },\r\n    EmpresaId: token.empresaId,\r\n    ServicoId: \"\",\r\n    MateriaAlunos: [],\r\n  };\r\n\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  useEffect(\r\n    function () {\r\n      if (alunoResponse.data != null) {\r\n        setLoading(false);\r\n     \r\n        var materias = []\r\n        alunoResponse.data.materiaAlunos.map((materia => (\r\n          materias.push({MateriaId: materia.materiaId})\r\n        )))\r\n        \r\n        setValues((prevState) => ({\r\n          Id: alunoResponse.data.id,\r\n          Nome: alunoResponse.data.nome,\r\n          DataNascimento: format(new Date(alunoResponse.data.dataNascimento), 'yyyy-MM-dd'),\r\n          Serie: alunoResponse.data.serie,\r\n          Escola: alunoResponse.data.escola,\r\n          NomeResponsavel: alunoResponse.data.nomeResponsavel,\r\n          CPFResponsavel: alunoResponse.data.cpfResponsavel,\r\n          TelefoneResponsavel: alunoResponse.data.telefoneResponsavel,\r\n          EmailResponsavel: alunoResponse.data.emailResponsavel,\r\n          Endereco: {\r\n            Logradouro: alunoResponse.data.endereco.logradouro,\r\n            Numero: alunoResponse.data.endereco.numero,\r\n            Complemento: alunoResponse.data.endereco.complemento,\r\n            Bairro: alunoResponse.data.endereco.bairro,\r\n            Cidade: alunoResponse.data.endereco.cidade,\r\n            Estado: alunoResponse.data.endereco.estado,\r\n            CEP: alunoResponse.data.endereco.cep,\r\n          },\r\n          ServicoId: alunoResponse.data.servicoId,\r\n          EmpresaId: alunoResponse.data.empresaId,\r\n          MateriaAlunos: materias,\r\n        }));        \r\n      }\r\n    },\r\n    [alunoResponse]\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: e.target.value });\r\n  };\r\n\r\n  const handleEndereco = (e) => {\r\n    const { name, value } = e.target;\r\n    const Endereco = { ...values.Endereco };\r\n\r\n    if (name == \"Logradouro\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Logradouro\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"Numero\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Numero\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"Complemento\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Complemento\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"Bairro\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Bairro\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"Cidade\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Cidade\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"Estado\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Estado\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"CEP\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"CEP\") Endereco[key] = value;\r\n      });\r\n    } \r\n\r\n    setValues({ ...values, Endereco });\r\n  };\r\n\r\n  const handleMateria = (e) => {\r\n    const { name, value, checked } = e.target;    \r\n\r\n    var MateriaAlunos = [...values.MateriaAlunos]; //matérias que tem atualmente\r\n    console.log(MateriaAlunos);\r\n    console.log(MateriaAlunos.length);\r\n    const materiaIdIndex = value.search(\"id\");\r\n    console.log(materiaIdIndex);\r\n    const index = value.substring(6, materiaIdIndex - 1);\r\n\r\n    const materiaId = value.substring(materiaIdIndex + 3);\r\n\r\n    var newValues = \"\";\r\n\r\n    //se desmarcar checkbox da matéria\r\n    if (checked === false){\r\n       //se encontrar materiaId no array, faz filter e tira\r\n      MateriaAlunos = MateriaAlunos.filter((n) => n.MateriaId != materiaId);\r\n      setValues({ ...values, MateriaAlunos });\r\n    }\r\n\r\n    //se marcar checkbox da matéria\r\n        if (checked === true){\r\n    //adiciona materia no array\r\n          MateriaAlunos.push({ MateriaId: materiaId });\r\n          setValues({ ...values, MateriaAlunos });\r\n       }    \r\n  };\r\n\r\n  function checkMateria(id){\r\n    var checkMateria = [...values.MateriaAlunos]    \r\n    var matIds = []\r\n    checkMateria.map((mat,i) => (\r\n      matIds.push(Object.values(mat))\r\n    ))      \r\n    if( matIds.find(e => e == id) ){  \r\n      return true\r\n    } else    \r\n    return false    \r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    alert(\"SUCCESS!! :-)\\n\\n\" + JSON.stringify(values, null, 4));\r\n    console.log(values);\r\n    e.preventDefault();\r\n\r\n    const response = fetch(`https://localhost:44389/api/aluno/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(values),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (response == \"Aluno Cadastrado\") {\r\n          console.log(\"Deu bom\");\r\n          console.log(response);\r\n        } else {\r\n          console.log(\"Deu ruim\");\r\n        }\r\n      });\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <div className={classes.titulo}>\r\n            <h1>Cadastro de Aluno</h1>\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <div className={classes.subtitulo}>\r\n                  <h4>Dados do Aluno</h4>\r\n                  <Divider />\r\n                </div>\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"Nome\"\r\n                  name=\"Nome\"\r\n                  label=\"Nome Aluno\"\r\n                  fullWidth\r\n                  onChange={handleChange}\r\n                  value={values.Nome}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={3}>\r\n                <TextField\r\n                  id=\"DataNascimento\"\r\n                  name=\"DataNascimento\"\r\n                  label=\"Data Nascimento\"\r\n                  type=\"date\"\r\n                  onChange={handleChange}\r\n                  value={values.DataNascimento}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Serie\"\r\n                  name=\"Serie\"\r\n                  label=\"Serie\"\r\n                  onChange={handleChange}\r\n                  value={values.Serie}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={3}>\r\n                <TextField\r\n                  id=\"Escola\"\r\n                  name=\"Escola\"\r\n                  label=\"Escola\"\r\n                  onChange={handleChange}\r\n                  value={values.Escola}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"NomeResponsavel\"\r\n                  name=\"NomeResponsavel\"\r\n                  label=\"Nome Responsável\"\r\n                  fullWidth\r\n                  onChange={handleChange}\r\n                  value={values.NomeResponsavel}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"CPFResponsavel\"\r\n                  name=\"CPFResponsavel\"\r\n                  label=\"CPF\"\r\n                  onChange={handleChange}\r\n                  value={values.CPFResponsavel}\r\n                  fullWidth\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"TelefoneResponsavel\"\r\n                  name=\"TelefoneResponsavel\"\r\n                  label=\"Telefone\"\r\n                  onChange={handleChange}\r\n                  value={values.TelefoneResponsavel}\r\n                  fullWidth\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"EmailResponsavel\"\r\n                  name=\"EmailResponsavel\"\r\n                  label=\"E-mail\"\r\n                  onChange={handleChange}\r\n                  value={values.EmailResponsavel}\r\n                  fullWidth\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <div className={classes.subtitulo}>\r\n                  <h4>Endereço</h4>\r\n                  <Divider />\r\n                </div>\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"Endereco.Logradouro\"\r\n                  name=\"Logradouro\"\r\n                  onChange={handleEndereco}\r\n                  value={values.Endereco.Logradouro}\r\n                  label=\"Logradouro\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={1}>\r\n                <TextField\r\n                  id=\"Endereco.Numero\"\r\n                  name=\"Numero\"\r\n                  label=\"Nº\"\r\n                  onChange={handleEndereco}\r\n                  value={values.Endereco.Numero}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={3}>\r\n                <TextField\r\n                  id=\"Endereco.Complemento\"\r\n                  name=\"Complemento\"\r\n                  label=\"Complemento\"\r\n                  onChange={handleEndereco}\r\n                  value={values.Endereco.Complemento}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Endereco.Cidade\"\r\n                  name=\"Cidade\"\r\n                  label=\"Cidade\"\r\n                  onChange={handleEndereco}\r\n                  value={values.Endereco.Cidade}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Endereco.Bairro\"\r\n                  name=\"Bairro\"\r\n                  onChange={handleEndereco}\r\n                  value={values.Endereco.Bairro}\r\n                  label=\"Bairro\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Endereco.Estado\"\r\n                  name=\"Estado\"\r\n                  label=\"Estado\"\r\n                  onChange={handleEndereco}\r\n                  value={values.Endereco.Estado}\r\n                  fullWidth\r\n                  select\r\n                >\r\n                  <MenuItem value=\"AC\">Acre</MenuItem>\r\n                  <MenuItem value=\"AL\">Alagoas</MenuItem>\r\n                  <MenuItem value=\"AP\">Amapá</MenuItem>\r\n                  <MenuItem value=\"AM\">Amazonas</MenuItem>\r\n                  <MenuItem value=\"BA\">Bahia</MenuItem>\r\n                  <MenuItem value=\"CE\">Ceará</MenuItem>\r\n                  <MenuItem value=\"DF\">Distrito Federal</MenuItem>\r\n                  <MenuItem value=\"ES\">Espírito Santo</MenuItem>\r\n                  <MenuItem value=\"GO\">Goiás</MenuItem>\r\n                  <MenuItem value=\"MA\">Maranhão</MenuItem>\r\n                  <MenuItem value=\"MT\">Mato Grosso</MenuItem>\r\n                  <MenuItem value=\"MS\">Mato Grosso do Sul</MenuItem>\r\n                  <MenuItem value=\"MG\">Minas Gerais</MenuItem>\r\n                  <MenuItem value=\"PA\">Pará</MenuItem>\r\n                  <MenuItem value=\"PB\">Paraíba</MenuItem>\r\n                  <MenuItem value=\"PR\">Paraná</MenuItem>\r\n                  <MenuItem value=\"PE\">Pernambuco</MenuItem>\r\n                  <MenuItem value=\"PI\">Piauí</MenuItem>\r\n                  <MenuItem value=\"RJ\">Rio de Janeiro</MenuItem>\r\n                  <MenuItem value=\"RN\">Rio Grande do Norte</MenuItem>\r\n                  <MenuItem value=\"RS\">Rio Grande do Sul</MenuItem>\r\n                  <MenuItem value=\"RO\">Rondônia</MenuItem>\r\n                  <MenuItem value=\"RR\">Roraima</MenuItem>\r\n                  <MenuItem value=\"SC\">Santa Catarina</MenuItem>\r\n                  <MenuItem value=\"SP\">São Paulo</MenuItem>\r\n                  <MenuItem value=\"SE\">Sergipe</MenuItem>\r\n                  <MenuItem value=\"TO\">Tocantins</MenuItem>\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Endereco.CEP\"\r\n                  name=\"CEP\"\r\n                  label=\"CEP\"\r\n                  onChange={handleEndereco}\r\n                  value={values.Endereco.CEP}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <div className={classes.subtitulo}>\r\n                  <h4>Matérias</h4>\r\n                  <Divider />\r\n                </div>\r\n              </Grid>\r\n\r\n               <Grid item xs={12}>\r\n                { \r\n                materiasResponse.data ? \r\n                (\r\n                materiasResponse.data.map((mat, j) => (\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        name={`MateriaAlunos${[]}.MateriaId`}\r\n                        onChange={handleMateria}\r\n                        //onChange={(e) => handleMateria(e)}\r\n                        value={`index:${j},id:${mat.id}`}\r\n                        checked={checkMateria(mat.id)}                        \r\n                      />\r\n                    }\r\n                    label={mat.nome}\r\n                  />\r\n                ))) : false             \r\n                  }\r\n              </Grid> \r\n\r\n              <Grid item xs={12}>\r\n                <div className={classes.subtitulo}>\r\n                  <h4>Serviço Contratado</h4>\r\n                  <Divider />\r\n                </div>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <Select\r\n                  id=\"Servico\"\r\n                  label=\"Servico Contratado\"\r\n                  onChange={handleChange}\r\n                  name=\"ServicoId\"\r\n                  value={values.ServicoId}\r\n                  \r\n                >\r\n                  {servicosResponse.data ? (\r\n                    \r\n                      servicosResponse.data.map((serv) => (\r\n                        <MenuItem value={serv.id}>\r\n                          {serv.descricao + \" - Valor: R$\" + serv.valor}\r\n                        </MenuItem>\r\n                      ))) : false\r\n                  }\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n            <div classname={classes.buttons}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"inherit\"\r\n                className={classes.button}\r\n              >\r\n                Limpar\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                className={classes.button}\r\n              >\r\n                Cadastrar\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CadastroAluno;\r\n","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\components\\menu\\MenuItem.jsx",["320","321"],"import React from 'react'\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as IoIcons from 'react-icons/io';\r\n\r\nexport const MenuItem = [\r\n    {\r\n        title: 'Home',\r\n        path: '/',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Empresas',\r\n        path: '/empresas',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Aulas',\r\n        path: '/aulas',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Serviços',\r\n        path: '/servicos',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Matérias',\r\n        path: '/materias',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Alunos',\r\n        path: '/alunos',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Financeiro',\r\n        path: '/financeiros',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    }   \r\n]\r\n","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\components\\content\\Content.jsx",["322","323","324"],"import React from \"react\";\r\nimport \"./Content.css\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport CadastroAluno from \"../../views/Aluno/CadastroAluno\";\r\nimport Alunos from \"../../views/Aluno/Alunos\";\r\nimport Menu from \"../menu/Menu\";\r\nimport Login from \"../../views/Usuario/Login\";\r\nimport Header from \"./Header\";\r\nimport CadastroServico from \"../../views/Servico/CadastroServico\";\r\nimport Servicos from \"../../views/Servico/Servicos\";\r\nimport CadastroMateria from \"../../views/Materia/CadastroMateria\";\r\nimport Materias from \"../../views/Materia/Materias\";\r\nimport Aulas from \"../../views/Aula/Aulas\";\r\nimport CadastroAula from \"../../views/Aula/CadastroAula\";\r\nimport Empresas from \"../../views/Empresa/Empresa\";\r\nimport CadastroEmpresa from \"../../views/Empresa/CadastroEmpresa\";\r\nimport Financeiros from \"../../views/Financeiro/Financeiros\";\r\nimport CadastroFinanceiro from \"../../views/Financeiro/CadastroFinanceiro\";\r\n\r\nconst Content = (props) => (\r\n  <div className=\"Geral\"> \r\n\r\n  <div className=\"Header\"><Header/></div>   \r\n  <div className=\"Menu\"><Menu/></div>   \r\n  <div className=\"PaginaAtual\">\r\n  <Switch>\r\n          <Route path=\"/cadastroAluno\" component={CadastroAluno} />\r\n          <Route path=\"/alunos\" component={Alunos} />\r\n          <Route path=\"/cadastroServico\" component={CadastroServico}/>\r\n          <Route path=\"/servicos\" component={Servicos}/>\r\n          <Route path=\"/cadastroMateria\" component={CadastroMateria}/>\r\n          <Route path=\"/materias\" component={Materias}/>\r\n          <Route path=\"/aulas\" component={Aulas}/>\r\n          <Route path=\"/cadastroAula\" component={CadastroAula}/>\r\n          <Route path=\"/empresas\" component={Empresas}/>\r\n          <Route path=\"/cadastroEmpresa\" component={CadastroEmpresa}/>\r\n          <Route path=\"/financeiros\" component={Financeiros}/>\r\n          <Route path=\"/cadastroFinanceiro\" component={CadastroFinanceiro}/>\r\n\r\n        </Switch></div>   \r\n  <div className=\"Footer\">Todos direitos reservados @ 2021</div>   \r\n \r\n\r\n     {/* <div className=\"Header\">\r\n      <Header />\r\n    </div>\r\n    <div className=\"Menu\">\r\n      <Menu/>\r\n    </div> */}\r\n\r\n    {/* <div className=\"Content\">\r\n      <Menu />\r\n\r\n      <div className=\"paginaAtual\">\r\n        <Switch>\r\n          <Route path=\"/cadastroAluno\" component={Aluno} />\r\n          <Route path=\"/alunos\" component={Alunos} />\r\n        </Switch>\r\n      </div>\r\n    </div>  */}\r\n  </div>\r\n);\r\n\r\nexport default Content;\r\n","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\components\\menu\\Menu.jsx",["325","326","327","328","329","330"],"import React ,{useState} from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport { MenuItem } from './MenuItem'\r\n\r\n\r\nconst Menu = (props) => {\r\nconst [sidebar,setSidebar] = useState(false);\r\nconst showSidebar = () => setSidebar(!sidebar);\r\n\r\nreturn (   \r\n    <>    \r\n   \r\n    <nav className=\"nav-menu\">\r\n        <ul className=\"nav-menu-items\">\r\n            {MenuItem.map((item,index) => {\r\n                return (\r\n                    <li key={index} className={item.cName}>\r\n                        <Link to={item.path}>\r\n                            {item.icon}\r\n                            <span>{item.title}</span>\r\n                        </Link>\r\n                    </li>\r\n                )\r\n            })}\r\n        </ul>\r\n    </nav>    \r\n    </>   \r\n    ) \r\n\r\n}\r\n\r\nexport default Menu;\r\n","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\components\\Routes\\Private\\Private.jsx",[],"D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\contexts\\StoreContext.js",[],"D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\utils\\useStorage.js",[],"D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\hooks\\useFetch.js",["331","332"],"import { useEffect, useState } from 'react'\r\n\r\nexport const useFetch = (url,method, headers, body) => {\r\n    const [response,setResponse] = useState({\r\n        data: null,\r\n        loading: true\r\n    })\r\n\r\n    useEffect(async function(){\r\n        await fetch(url, { method }, { headers }, { body })\r\n            .then(resp => resp.json())\r\n            .then(json => setResponse({\r\n                data: json,\r\n                loading: false\r\n            }))\r\n    },[url,method])\r\n    return response\r\n}","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Styles\\useStyles.js",[],"D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Aluno\\Alunos.jsx",["333"],"import React, { useContext } from \"react\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport StoreContext from '../../contexts/StoreContext';\r\nimport { format } from 'date-fns';\r\n\r\n\r\nimport \"./Alunos.css\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst Alunos = (props) => {\r\n  const url = \"https://localhost:44389/api/aluno\";\r\n  const method = 'get';\r\n  const response = useFetch(url);\r\n  const history = useHistory();\r\n  const { token } = useContext(StoreContext); \r\n  console.log(token);\r\n\r\n  function novoAluno(){\r\n   history.push('/cadastroAluno');\r\n  }\r\n\r\n  function editarAluno(id){\r\n    history.push(`/cadastroAluno/${id}`)\r\n  }\r\n\r\n  function showAlunos(alunos) {\r\n    return (\r\n        \r\n        alunos.map((aluno) => (\r\n            <tr onClick={() => editarAluno(aluno.id)}>\r\n              <td key={aluno.id}>{aluno.id}</td>\r\n              <td key={aluno.nome}>{aluno.nome}</td>\r\n              <td key={aluno.dataNascimento}>{format(new Date(aluno.dataNascimento), 'dd/MM/yyyy')}</td>\r\n              <td key={aluno.serie}>{aluno.serie}º</td>\r\n              <td key={aluno.nomeResponsavel}>{aluno.nomeResponsavel}</td>\r\n              <td key={aluno.cpfResponsavel}>{aluno.cpfResponsavel}</td>\r\n              <td key={aluno.emailResponsavel}>{aluno.emailResponsavel}</td>\r\n              <td key={aluno.telefoneResponsavel}>{aluno.telefoneResponsavel}</td>              \r\n            </tr>\r\n          ))\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"lista-alunos\">\r\n      <h1>Alunos</h1>\r\n      <div className=\"btn-novo\">\r\n          <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                onClick={novoAluno}\r\n                className=\"btn-novo\"                \r\n              >\r\n                Novo Aluno\r\n              </Button>\r\n          </div>\r\n      <table id=\"alunos\">\r\n        <tbody>\r\n        <tr>\r\n          <th>Id</th>\r\n          <th>Aluno</th>\r\n          <th>Idade</th>\r\n          <th>Série</th>\r\n          <th>Responsável</th>\r\n          <th>CPF</th>\r\n          <th>E-mail</th>\r\n          <th>Telefone</th>\r\n        </tr>\r\n        {response.data ? showAlunos(response.data) : false}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alunos;\r\n","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\components\\content\\Header.jsx",[],"D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Servico\\CadastroServico.jsx",["334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Formik, Field, Form, useFormik, FieldArray } from \"formik\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport ScopedCssBaseline from \"@material-ui/core/ScopedCssBaseline\";\r\n\r\nimport {\r\n  Button,\r\n  Divider,\r\n  FormControl,\r\n  FormLabel,\r\n  Grid,\r\n  InputLabel,\r\n  ListItemText,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport { purple } from \"@material-ui/core/colors\";\r\n\r\nfunction CadastroServico() {\r\n  const { token } = useContext(StoreContext);\r\n  console.log(token);\r\n  const aulasUrl = \"https://localhost:44389/api/aulaPorEmpresa/\" + token.empresaId + \"\";\r\n  const aulasResponse = useFetch(aulasUrl);\r\n\r\n  const editarServicoId = window.location.pathname.split(\"/\");\r\n  var editarServicoUrl = \"\";\r\n\r\n  if (editarServicoId[2] != null) {\r\n    editarServicoUrl = `https://localhost:44389/api/servico/${editarServicoId[2]}`;\r\n  }\r\n\r\n  const servicoResponse = useFetch(editarServicoUrl);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const initialValues = {\r\n    Id: 0,\r\n    Descricao: \"\",\r\n    Valor: \"\",\r\n    Fidelidade: false,\r\n    TipoMulta: \"\",\r\n    ValorMulta: \"\",\r\n    EmpresaId: token.empresaId,\r\n    QtdAulas: \"\",\r\n    ServicosAulas: [],\r\n  };\r\n\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  useEffect(\r\n    function () {\r\n      if (servicoResponse.data != null) {\r\n        var servicos = [];\r\n        servicoResponse.data.servicosAulas.map((servico) =>\r\n          servicos.push({ AulaId: servico.aulaId })\r\n        );\r\n\r\n        setValues((prevState) => ({\r\n          Id: servicoResponse.data.id,\r\n          Descricao: servicoResponse.data.descricao,\r\n          Valor: servicoResponse.data.valor,\r\n          TipoMulta: servicoResponse.data.tipoMulta,\r\n          Fidelidade: servicoResponse.data.fidelidade,\r\n          EmpresaId: servicoResponse.data.empresaId,\r\n          ValorMulta: servicoResponse.data.valorMulta,\r\n          ServicosAulas: servicos,\r\n          QtdAulas: servicoResponse.data.qtdAulas,\r\n        }));\r\n      }\r\n\r\n      console.log(values);\r\n    },\r\n    [servicoResponse]\r\n  );\r\n\r\n  useEffect(\r\n    function () {\r\n      if (values.QtdAulas > 0) {\r\n        const ServicosAulas = [...values.ServicosAulas];\r\n        const QtdAulas = values.QtdAulas || 0;\r\n        const previousNumber = ServicosAulas.length || 0;\r\n        if (previousNumber < QtdAulas) {\r\n          for (let i = previousNumber; i < QtdAulas; i++) {\r\n            ServicosAulas.push({ AulaId: \"\" });\r\n          }\r\n        } else {\r\n          for (let i = previousNumber; i >= QtdAulas; i--) {\r\n            ServicosAulas.splice(i, 1);\r\n          }\r\n        }\r\n        setValues({ ...values, ServicosAulas });\r\n      }\r\n    },\r\n    [values.QtdAulas]\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: e.target.value });\r\n    console.log(\r\n      \"handleChange \" +\r\n        \">>name: \" +\r\n        e.target.name +\r\n        \" >>value: \" +\r\n        e.target.value +\r\n        \" >>checked: \" +\r\n        e.target.checked\r\n    );\r\n  };\r\n\r\n  const handleCheckChange = (e) => {\r\n    const {name, checked} = e.target;\r\n    setValues({...values, [name]: e.target.checked});\r\n    console.log(\r\n      \"handleCheckChange \" +\r\n        \">>name: \" +\r\n        e.target.name +\r\n        \" >>value: \" +\r\n        e.target.value +\r\n        \" >>checked: \" +\r\n        e.target.checked\r\n    );\r\n  };\r\n\r\n  const handleChangeAula = (e) => {\r\n    const { name, value, index, select } = e.target;\r\n    console.log(\r\n      \"handleChange \" +\r\n        \">>name: \" +\r\n        e.target.name +\r\n        \" >>value: \" +\r\n        e.target.value +\r\n        \" >>index: \" +\r\n        e.target.index\r\n    );\r\n\r\n    const AulaIdIndex = name.substring(13, 14);\r\n    console.log(AulaIdIndex);\r\n    console.log(value);\r\n\r\n    var ServicosAulas = [...values.ServicosAulas]; //servicos que tem atualmente\r\n    ServicosAulas.splice(AulaIdIndex, 1, { AulaId: value }); //preencher item selecionado\r\n\r\n    setValues({ ...values, ServicosAulas });\r\n    console.log(ServicosAulas);\r\n  };\r\n\r\n  function handleSubmit(e) {\r\n    alert(\"SUCCESS!! :-)\\n\\n\" + JSON.stringify(values, null, 4));\r\n    console.log(values);\r\n    e.preventDefault();\r\n\r\n    const response = fetch(\"https://localhost:44389/api/servico\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(values),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (\r\n          response == \"Serviço cadastrado\" ||\r\n          response == \"Serviço atualizado\"\r\n        ) {\r\n          console.log(\"Deu bom\");\r\n          console.log(response);\r\n        } else {\r\n          console.log(\"Deu ruim\");\r\n        }\r\n      });\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className={classes.titulo}>\r\n              <h1>Cadastro de Serviço</h1>\r\n            </div>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <div className={classes.subtitulo}>\r\n                  <h4>Dados do Serviço</h4>\r\n                  <Divider />\r\n                </div>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={10}>\r\n                <TextField\r\n                  id=\"Descricao\"\r\n                  name=\"Descricao\"\r\n                  label=\"Descricao\"\r\n                  value={values.Descricao}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Valor\"\r\n                  name=\"Valor\"\r\n                  label=\"Valor\"\r\n                  type=\"number\"\r\n                  fullWidth\r\n                  value={values.Valor}\r\n                  onChange={handleChange}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={2}>\r\n                <FormLabel>Fidelidade</FormLabel>\r\n\r\n                <Switch\r\n                  color=\"primary\"\r\n                  name=\"Fidelidade\"\r\n                  value={values.Fidelidade}\r\n                  checked={values.Fidelidade}\r\n                  onChange={handleCheckChange}\r\n                  inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"TipoMulta\"\r\n                  name=\"TipoMulta\"\r\n                  label=\"Tipo de Multa\"\r\n                  fullWidth\r\n                  value={values.TipoMulta}\r\n                  onChange={handleChange}\r\n                  select\r\n                >\r\n                  <MenuItem value=\"1\">Percentual</MenuItem>\r\n                  <MenuItem value=\"2\">Fixo</MenuItem>\r\n                </TextField>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"ValorMulta\"\r\n                  name=\"ValorMulta\"\r\n                  label=\"Valor Multa\"\r\n                  value={values.ValorMulta}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"QtdAulas\"\r\n                  name=\"QtdAulas\"\r\n                  label=\"Qtd. Aulas\"\r\n                  fullWidth\r\n                  select\r\n                  value={values.QtdAulas}\r\n                  onChange={handleChange}\r\n                >\r\n                  {[1, 2, 3, 4, 5, 6, 7].map((i) => (\r\n                    <MenuItem value={i}>{i}</MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <div className={classes.subtitulo}>\r\n                  <h4>Aulas do Serviço</h4>\r\n                  <Divider />\r\n                </div>\r\n              </Grid>\r\n\r\n              {values.ServicosAulas.map((ServicosAula, j) => (\r\n                <Grid item xs={12} sm={3}>\r\n                  <FormControl className={classes.formControl}>\r\n                    <div>\r\n                      <h5 className=\"card-title\">Aula {j + 1}</h5>\r\n                      <Select\r\n                        onChange={handleChangeAula}\r\n                        name={`ServicosAulas${[j]}.AulaId`}\r\n                        value={values.ServicosAulas[j].AulaId}\r\n                      >\r\n                        {aulasResponse.data.map((aula, i) => (\r\n                          <MenuItem\r\n                            key={i}                            \r\n                            value={aula.id}\r\n                          >\r\n                            {aula.dia +\r\n                              \" (\" +\r\n                              aula.horaInicio +\r\n                              \"-\" +\r\n                              aula.horaFim +\r\n                              \")\"}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </div>\r\n                  </FormControl>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n\r\n            <div className={classes.buttons}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"inherit\"\r\n                className={classes.button}\r\n              >\r\n                Limpar\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                className={classes.button}\r\n              >\r\n                Cadastrar\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CadastroServico;\r\n","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Servico\\Servicos.jsx",["359"],"import React , { useContext } from \"react\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Servicos.css\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst Servicos = () => {\r\n  const { token } = useContext(StoreContext); \r\n  const url = \"https://localhost:44389/api/servico/\";  \r\n  const response = useFetch(url);\r\n  const history = useHistory();\r\n  \r\n  \r\n\r\n  function novoServico() {\r\n    history.push(\"/cadastroServico\");\r\n  }\r\n\r\n  function editarServico(id) {\r\n    history.push(`/cadastroServico/${id}`);\r\n  }\r\n\r\n  console.log(response);\r\n  function showServicos(servicos) {\r\n    return servicos.map((servico) => (\r\n      <tr onClick={() => editarServico(servico.id)}>\r\n        <td key={servico.id}>{servico.id}</td>\r\n        <td key={servico.descricao}>{servico.descricao}</td>\r\n        <td key={servico.valor}>{servico.valor}</td>\r\n        <td key={servico.qtdAulas}>{servico.qtdAulas}</td>\r\n        <td key={servico.fidelidade}>{servico.fidelidade ? \"SIM\" : \"NÃO\"}</td>\r\n      </tr>\r\n    ));\r\n  }\r\n  return (\r\n    <div className=\"lista-servicos\">\r\n      <h1>Serviços</h1>\r\n      <div className=\"btn-novo\">\r\n          <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                onClick={novoServico}\r\n                className=\"btn-novo\"                \r\n              >\r\n                Novo Serviço\r\n              </Button>\r\n          </div>\r\n      <table id=\"servicos\">\r\n        <tbody>\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>Descrição</th>\r\n            <th>Valor</th>\r\n            <th>Qtd. Aulas</th>\r\n            <th>Fidelidade</th>\r\n          </tr>\r\n          {response.data ? showServicos(response.data) : false}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Servicos;\r\n","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Materia\\Materias.jsx",["360"],"import React, { useContext } from \"react\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport \"./Materias.css\"\r\nimport { Button } from \"@material-ui/core\";\r\nimport useStyles from \"../Styles/useStyles\";\r\n\r\nfunction Materias() {\r\n  const { token } = useContext(StoreContext);\r\n\r\n  const url = `https://localhost:44389/api/materiaPorEmpresa/${token.empresaId}`;\r\n  const method = \"get\";\r\n  const response = useFetch(url, method);\r\n\r\n  const history = useHistory();\r\n\r\n  const classes = useStyles();\r\n\r\n  function novaMateria(){\r\n    history.push(\"/cadastroMateria\")\r\n  }\r\n\r\n  function editarMateria(id){\r\n    history.push(`/cadastroMateria/${id}`)\r\n  }\r\n\r\n  function showMaterias(materias){\r\n    return (\r\n      materias.map((materia) => (\r\n        <tr onClick={() => editarMateria(materia.id)}>\r\n          <td key={materia.id}>{materia.id}</td>      \r\n          <td key={materia.nome}>{materia.nome}</td>          \r\n        </tr>\r\n      ))   \r\n    )\r\n  }\r\n  return (         \r\n        <div className=\"lista-materias\">\r\n          <h1>Matérias</h1>\r\n          <div className=\"btn-novo\">\r\n          <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                onClick={novaMateria}\r\n                className=\"btn-novo\"                \r\n              >\r\n                Nova Matéria\r\n              </Button>\r\n          </div>\r\n         \r\n          <table id=\"materias\">\r\n            <tbody>\r\n              <tr>\r\n                <th>Id</th>                              \r\n                <th>Nome</th>   \r\n              </tr>\r\n              {response.data ? showMaterias(response.data) : false}             \r\n            </tbody>\r\n          </table>\r\n        </div>     \r\n    \r\n  );\r\n}\r\n\r\nexport default Materias;\r\n","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Aula\\Aulas.jsx",["361"],"import { Button } from \"@material-ui/core\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport \"./Aulas.css\"\r\n\r\nfunction Aulas() {\r\n  const { token } = useContext(StoreContext);\r\n  const url = `https://localhost:44389/api/aulaPorEmpresa/${token.empresaId}`;\r\n  const method = \"get\";\r\n  const response = useFetch(url, method);\r\n\r\n  const history = useHistory();\r\n\r\n  function novaAula() {\r\n    history.push(\"/cadastroaula\");\r\n  }\r\n\r\n  function editarAula(id) {\r\n    history.push(`/cadastroAula/${id}`);\r\n  }\r\n\r\n  \r\n  function showAulas(aulas) {\r\n    return aulas.map((aula) => (\r\n      <tr onClick={() => editarAula(aula.id)}>\r\n        <td>{aula.id}</td>  \r\n        <td>{aula.dia}</td>\r\n        <td>{aula.horaInicio}</td>\r\n        <td>{aula.horaFim}</td>\r\n        <td>{aula.vagas}</td>       \r\n      </tr>\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <div className=\"lista-aulas\">\r\n      <h1>Aulas</h1>\r\n      <div className=\"btn-novo\">\r\n          <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                onClick={novaAula}\r\n                className=\"btn-novo\"                \r\n              >\r\n                Nova Aula\r\n              </Button>\r\n          </div>\r\n      <table id=\"aulas\">\r\n        <tbody>\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>Dia</th>\r\n            <th>Hora Inicio</th>\r\n            <th>Hora Fim</th>\r\n            <th>Vagas</th>           \r\n          </tr>\r\n          {response.data ? showAulas(response.data) : false}\r\n          {console.log(response.data)}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Aulas;\r\n","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Aula\\CadastroAula.jsx",["362","363","364","365","366","367","368"],"import React, { useContext, useState, useEffect } from 'react'\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport { Button, Grid, Paper, TextField } from \"@material-ui/core\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport { useFetch } from '../../hooks/useFetch';\r\n\r\nfunction CadastroAula(){\r\n    const { token } = useContext(StoreContext);\r\n    const url = \"https://localhost:44389/api/aula/\";  \r\n    \r\n    //montar URL para editar aula\r\n    var editarAulaUrl = \"\";    \r\n    const editarAulaId = window.location.pathname.split(\"/\");\r\n    if (editarAulaId[2] != null){\r\n      editarAulaUrl =  `https://localhost:44389/api/aula/${editarAulaId[2]}`;      \r\n    }\r\n\r\n    const aulaResponse = useFetch(editarAulaUrl);\r\n    const [loading, setLoading] = useState(true);  \r\n\r\n    const initialValues = {\r\n      Id: 0,\r\n      Dia: \"\",\r\n      HoraInicio: \"\",\r\n      HoraFim: \"\",\r\n      Vagas: \"\",\r\n      EmpresaId: token.empresaId,\r\n  }\r\n\r\n    useEffect(\r\n      function(){\r\n        if (aulaResponse.data != null){\r\n          setValues((prevState) => ({\r\n            Id:  aulaResponse.data.id,\r\n            Dia: aulaResponse.data.dia,\r\n            HoraInicio:  aulaResponse.data.horaInicio,\r\n            HoraFim:  aulaResponse.data.horaFim,\r\n            Vagas:  aulaResponse.data.vagas,\r\n            EmpresaId: aulaResponse.data.empresaId,\r\n          }));\r\n        };\r\n      },\r\n      [aulaResponse]\r\n    );\r\n\r\n    const [values,setValues] = useState(initialValues);\r\n    \r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setValues({...values, [name]: e.target.value});\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        alert(\"Sucess: \\n\\n\" + JSON.stringify(values, null, 4));\r\n        console.log(values);\r\n        e.preventDefault();\r\n\r\n        const response = fetch(\"https://localhost:44389/api/aula\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(values),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((response) => {\r\n          if (\r\n            response == \"Aula cadastrada\" ||\r\n            response == \"Aula atualizada\"\r\n          ) {\r\n            console.log(\"Deu bom\");\r\n            console.log(response);\r\n          } else {\r\n            console.log(\"Deu ruim\");\r\n          }\r\n        });\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n          <main className={classes.layout}>\r\n            <Paper className={classes.paper}>\r\n              <div className={classes.titulo}>\r\n                <h1>Cadastro de Aula</h1>\r\n              </div>\r\n              <form onSubmit={handleSubmit}>\r\n                  <Grid container spacing={3}>\r\n                      <Grid item xs={12} sm={3}>\r\n                          <TextField \r\n                             id=\"Dia\"\r\n                             name=\"Dia\"\r\n                             label=\"Dia da Semana\"                             \r\n                             onChange={handleChange}\r\n                             value={values.Dia}\r\n                          />\r\n                      </Grid>\r\n                      <Grid item xs={3}>\r\n                          <TextField \r\n                             id=\"HoraInicio\"\r\n                             name=\"HoraInicio\"\r\n                             label=\"Hora Inicio\"                             \r\n                             onChange={handleChange}\r\n                             value={values.HoraInicio}\r\n                          />\r\n                      </Grid>\r\n                      <Grid item xs={3}>\r\n                          <TextField \r\n                             id=\"HoraFim\"\r\n                             name=\"HoraFim\"\r\n                             label=\"Hora Fim\"                             \r\n                             onChange={handleChange}\r\n                             value={values.HoraFim}\r\n                          />\r\n                      </Grid>\r\n                      <Grid item xs={3}>\r\n                          <TextField \r\n                             id=\"Vagas\"\r\n                             name=\"Vagas\"\r\n                             label=\"Qtd. Vagas\"                             \r\n                             onChange={handleChange}\r\n                             value={values.Vagas}\r\n                          />\r\n                      </Grid>\r\n                  </Grid>\r\n                  <div classname={classes.buttons}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"inherit\"\r\n                    className={classes.button}\r\n                  >\r\n                    Limpar\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className={classes.button}\r\n                  >\r\n                    Cadastrar\r\n                  </Button>\r\n                </div>\r\n              </form>\r\n            </Paper>\r\n          </main>\r\n        </React.Fragment>\r\n      );\r\n\r\n}\r\n\r\nexport default CadastroAula;","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Empresa\\Empresa.jsx",[],"D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Materia\\CadastroMateria.jsx",["369","370","371","372","373","374","375","376"],"import { Button, Grid, Paper, TextField } from \"@material-ui/core\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useHistory, Route } from \"react-router-dom\";\r\n\r\nfunction CadastroMateria() {\r\n  const { token } = useContext(StoreContext);\r\n  const { history } = useHistory();\r\n      //montar URL para editar matéria\r\n      var editarMateriaUrl = \"\";    \r\n      const editarMateriaId = window.location.pathname.split(\"/\");\r\n      if (editarMateriaId[2] != null){\r\n        editarMateriaUrl =  `https://localhost:44389/api/materia/${editarMateriaId[2]}`;      \r\n      }\r\n\r\n  function listaMaterias(){\r\n      history.push(\"/materias\");\r\n  }\r\n  \r\n      const materiaResponse = useFetch(editarMateriaUrl);\r\n      const [loading, setLoading] = useState(true);  \r\n\r\n  const initialValues = {\r\n    Id: 0,\r\n    Nome: \"\",\r\n    EmpresaId: token.empresaId,\r\n  };\r\n\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  useEffect(\r\n    function(){\r\n      if (materiaResponse.data != null){\r\n        setValues((prevState) => ({\r\n          Id:  materiaResponse.data.id,\r\n          Nome: materiaResponse.data.nome,\r\n          EmpresaId: materiaResponse.data.empresaId,\r\n        }));\r\n      };\r\n    },\r\n    [materiaResponse]\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: e.target.value });\r\n  };\r\n\r\n  function handleSubmit(e) {\r\n    alert(\"Sucess: \\n\\n\" + JSON.stringify(values, null, 4));\r\n    console.log(values);\r\n    e.preventDefault();\r\n\r\n    const response = fetch(\"https://localhost:44389/api/materia/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(values),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (\r\n          response == \"Matéria atualizada\" ||\r\n          response == \"Matéria cadastrada\"\r\n        ) {\r\n         window.alert('Sucesso!');      \r\n        } else {\r\n          window.alert('Erro!');\r\n        }\r\n      });\r\n  }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <div className={classes.titulo}>\r\n            <h1>Cadastro de Matéria</h1>\r\n          </div>\r\n          <form onSubmit={handleSubmit}>\r\n              <Grid container spacing={3}>\r\n                  <Grid item xs={12}>\r\n                      <TextField \r\n                         id=\"Nome\"\r\n                         name=\"Nome\"\r\n                         label=\"Nome\"\r\n                         fullWidth\r\n                         onChange={handleChange}\r\n                         value={values.Nome}\r\n                      />\r\n                  </Grid>\r\n              </Grid>\r\n              <div classname={classes.buttons}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"inherit\"\r\n                className={classes.button}\r\n              >\r\n                Limpar\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                className={classes.button}\r\n              >\r\n                Cadastrar\r\n              </Button>\r\n            </div>\r\n          </form>        \r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CadastroMateria;\r\n","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Empresa\\CadastroEmpresa.jsx",["377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Select,\r\n  Divider,\r\n  Switch,\r\n  FormLabel,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { MenuItem } from \"@material-ui/core\";\r\nimport { format } from \"date-fns\";\r\n\r\nfunction CadastroEmpresa() {\r\n  var editarEmpresaUrl = \"\";\r\n  const editarEmpresaId = window.location.pathname.split(\"/\");\r\n  if (editarEmpresaId[2] != null) {\r\n    editarEmpresaUrl = `https://localhost:44389/api/empresa/${editarEmpresaId[2]}`;\r\n  }\r\n\r\n  const empresaResponse = useFetch(editarEmpresaUrl);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const person = { Nome: \"\", Telefone: \"\" };\r\n  const [disableFields, setDisable] = useState(false);\r\n\r\n  const initialValues = {\r\n    Id: 0,\r\n    TipoEmpresa: \"\",\r\n    UsarDados: false,\r\n    CNPJ_CPF: \"\",\r\n    RazaoSocial: \"\",\r\n    Telefone: \"\",\r\n    Endereco: {\r\n      Logradouro: \"\",\r\n      Numero: \"\",\r\n      Complemento: \"\",\r\n      Bairro: \"\",\r\n      Cidade: \"\",\r\n      Estado: \"\",\r\n      CEP: \"\",\r\n    },\r\n    Pessoas: [person],\r\n  };\r\n\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  //atualizar campos do form quando é para editar empresa  \r\n  useEffect(\r\n    function () {\r\n      if (empresaResponse.data != null) {\r\n        setValues((prevState) => ({\r\n          Id: empresaResponse.data.id,\r\n          TipoEmpresa: empresaResponse.data.cnpJ_CPF.length < 12 ? \"1\" : \"2\",\r\n          CNPJ_CPF: empresaResponse.data.cnpJ_CPF,\r\n          RazaoSocial: empresaResponse.data.razaoSocial,\r\n          Telefone: empresaResponse.data.telefone,\r\n          Endereco: {\r\n            Id: empresaResponse.data.endereco.id,\r\n            Logradouro: empresaResponse.data.endereco.logradouro,\r\n            Numero: empresaResponse.data.endereco.numero,\r\n            Complemento: empresaResponse.data.endereco.complemento,\r\n            Bairro: empresaResponse.data.endereco.bairro,\r\n            Cidade: empresaResponse.data.endereco.cidade,\r\n            Estado: empresaResponse.data.endereco.estado,\r\n            CEP: empresaResponse.data.endereco.cep,\r\n          },\r\n          Pessoas: {\r\n            Nome: empresaResponse.data.pessoas[0].nome,\r\n            CPF: empresaResponse.data.pessoas[0].cpf,\r\n            Email: empresaResponse.data.pessoas[0].email,\r\n            DataNascimento: format(\r\n              new Date(empresaResponse.data.pessoas[0].dataNascimento),\r\n              \"yyyy-MM-dd\"\r\n            ),\r\n            Telefone: empresaResponse.data.pessoas[0].telefone,\r\n          },\r\n        }));\r\n        setDisable(true);\r\n      }\r\n    },\r\n    [empresaResponse]\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: e.target.value });\r\n    console.log({ name, value });\r\n  };\r\n\r\n  const handlePessoa = (e) => {\r\n    const { name, value } = e.target;\r\n    const Endereco = { ...values.Endereco };\r\n    const Pessoa = { ...values.Pessoas };\r\n    console.log(Pessoa);\r\n    var pessoa = [\r\n      {\r\n        Nome: Pessoa[0].Nome,\r\n        CPF: Pessoa[0].CPF,\r\n        DataNascimento: Pessoa[0].DataNascimento,\r\n        Email: Pessoa[0].Email,\r\n        Telefone: Pessoa[0].Telefone,\r\n      },\r\n    ];\r\n\r\n    if (name == \"Logradouro\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Logradouro\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"Numero\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Numero\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"Complemento\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Complemento\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"Bairro\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Bairro\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"Cidade\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Cidade\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"Estado\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Estado\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"CEP\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"CEP\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"CPF\") {\r\n      pessoa[0].CPF = value;\r\n    } else if (name == \"Nome\") {\r\n      pessoa[0].Nome = value;\r\n    } else if (name == \"Telefone\") {\r\n      pessoa[0].Telefone = value;\r\n    } else if (name == \"Email\") {\r\n      pessoa[0].Email = value;\r\n    } else if (name == \"DataNascimento\") {\r\n      pessoa[0].DataNascimento = value;\r\n    }\r\n\r\n    setValues({ ...values, Endereco, Pessoas: pessoa });\r\n  };\r\n\r\n  const funcUsarDadosEmpresa = (e) => {\r\n    const { name, checked } = e.target;\r\n    const newPessoa = values;\r\n    \r\n    newPessoa.Pessoas = [{\r\n      Nome: values.RazaoSocial,\r\n      CPF: values.CNPJ_CPF,\r\n      Telefone: values.Telefone,    \r\n    }];\r\n    setValues({...values, Pessoas: newPessoa});\r\n\r\n    setValues({ ...values, [name]: e.target.checked });\r\n    console.log(\r\n      \"handleCheckChange \" +\r\n        \">>name: \" +\r\n        e.target.name +\r\n        \" >>value: \" +\r\n        e.target.value +\r\n        \" >>checked: \" +\r\n        e.target.checked\r\n    );\r\n    console.log(values);\r\n  };\r\n\r\n  function handleSubmit(e) {\r\n    console.log(editarEmpresaUrl);\r\n    //limpar pessoa/usuario da empresa\r\n    if (values.Id != 0) {\r\n      const valuesToSubmit = values;\r\n      valuesToSubmit.Pessoas = [];\r\n      setValues({ ...values, valuesToSubmit });\r\n    }\r\n\r\n    alert(\"Sucess: \\n\\n\" + JSON.stringify(values, null, 4));\r\n    console.log(values);\r\n    e.preventDefault();\r\n\r\n    const response = fetch(\"https://localhost:44389/api/empresa/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(values),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (\r\n          response == \"Empresa cadastrada\" ||\r\n          response == \"Empresa não cadastrada\"\r\n        ) {\r\n          console.log(\"Deu bom\");\r\n          console.log(response);\r\n        } else {\r\n          console.log(\"Deu ruim\");\r\n        }\r\n      });\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <div className={classes.titulo}>\r\n            <h1>Cadastro de Empresa</h1>\r\n          </div>\r\n          <form onSubmit={handleSubmit}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"TipoEmpresa\"\r\n                  name=\"TipoEmpresa\"\r\n                  label=\"Tipo\"\r\n                  select\r\n                  fullWidth\r\n                  value={values.TipoEmpresa}\r\n                  onChange={handleChange}\r\n                >\r\n                  <MenuItem value=\"1\">Física</MenuItem>\r\n                  <MenuItem value=\"2\">Jurídica</MenuItem>\r\n                </TextField>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"RazaoSocial\"\r\n                  name=\"RazaoSocial\"\r\n                  label=\"Nome\"\r\n                  fullWidth\r\n                  onChange={handleChange}\r\n                  value={values.RazaoSocial}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"CNPJ_CPF\"\r\n                  name=\"CNPJ_CPF\"\r\n                  label={\r\n                    values.TipoEmpresa == \"1\"\r\n                      ? \"CPF\"\r\n                      : values.TipoEmpresa == \"2\"\r\n                      ? \"CNPJ\"\r\n                      : \"CNPJ OU CPF\"\r\n                  }\r\n                  fullWidth\r\n                  onChange={handleChange}\r\n                  value={values.CNPJ_CPF}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"Telefone\"\r\n                  name=\"Telefone\"\r\n                  label=\"Telefone\"\r\n                  fullWidth\r\n                  onChange={handleChange}\r\n                  value={values.Telefone}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"Endereco.Logradouro\"\r\n                  name=\"Logradouro\"\r\n                  onChange={handlePessoa}\r\n                  value={values.Endereco.Logradouro}\r\n                  label=\"Endereço\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={1}>\r\n                <TextField\r\n                  id=\"Endereco.Numero\"\r\n                  name=\"Numero\"\r\n                  label=\"Nº\"\r\n                  onChange={handlePessoa}\r\n                  value={values.Endereco.Numero}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={3}>\r\n                <TextField\r\n                  id=\"Endereco.Complemento\"\r\n                  name=\"Complemento\"\r\n                  label=\"Complemento\"\r\n                  onChange={handlePessoa}\r\n                  value={values.Endereco.Complemento}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Endereco.Cidade\"\r\n                  name=\"Cidade\"\r\n                  label=\"Cidade\"\r\n                  onChange={handlePessoa}\r\n                  value={values.Endereco.Cidade}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Endereco.Bairro\"\r\n                  name=\"Bairro\"\r\n                  onChange={handlePessoa}\r\n                  value={values.Endereco.Bairro}\r\n                  label=\"Bairro\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Endereco.Estado\"\r\n                  name=\"Estado\"\r\n                  label=\"Estado\"\r\n                  onChange={handlePessoa}\r\n                  value={values.Endereco.Estado}\r\n                  fullWidth\r\n                  select\r\n                >\r\n                  <MenuItem value=\"AC\">Acre</MenuItem>\r\n                  <MenuItem value=\"AL\">Alagoas</MenuItem>\r\n                  <MenuItem value=\"AP\">Amapá</MenuItem>\r\n                  <MenuItem value=\"AM\">Amazonas</MenuItem>\r\n                  <MenuItem value=\"BA\">Bahia</MenuItem>\r\n                  <MenuItem value=\"CE\">Ceará</MenuItem>\r\n                  <MenuItem value=\"DF\">Distrito Federal</MenuItem>\r\n                  <MenuItem value=\"ES\">Espírito Santo</MenuItem>\r\n                  <MenuItem value=\"GO\">Goiás</MenuItem>\r\n                  <MenuItem value=\"MA\">Maranhão</MenuItem>\r\n                  <MenuItem value=\"MT\">Mato Grosso</MenuItem>\r\n                  <MenuItem value=\"MS\">Mato Grosso do Sul</MenuItem>\r\n                  <MenuItem value=\"MG\">Minas Gerais</MenuItem>\r\n                  <MenuItem value=\"PA\">Pará</MenuItem>\r\n                  <MenuItem value=\"PB\">Paraíba</MenuItem>\r\n                  <MenuItem value=\"PR\">Paraná</MenuItem>\r\n                  <MenuItem value=\"PE\">Pernambuco</MenuItem>\r\n                  <MenuItem value=\"PI\">Piauí</MenuItem>\r\n                  <MenuItem value=\"RJ\">Rio de Janeiro</MenuItem>\r\n                  <MenuItem value=\"RN\">Rio Grande do Norte</MenuItem>\r\n                  <MenuItem value=\"RS\">Rio Grande do Sul</MenuItem>\r\n                  <MenuItem value=\"RO\">Rondônia</MenuItem>\r\n                  <MenuItem value=\"RR\">Roraima</MenuItem>\r\n                  <MenuItem value=\"SC\">Santa Catarina</MenuItem>\r\n                  <MenuItem value=\"SP\">São Paulo</MenuItem>\r\n                  <MenuItem value=\"SE\">Sergipe</MenuItem>\r\n                  <MenuItem value=\"TO\">Tocantins</MenuItem>\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Endereco.CEP\"\r\n                  name=\"CEP\"\r\n                  label=\"CEP\"\r\n                  onChange={handlePessoa}\r\n                  value={values.Endereco.CEP}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <br></br>\r\n                <div className={classes.subtitulo}>\r\n                  <h4>Dados Usuário</h4>\r\n                  <Divider />\r\n                </div>\r\n                <Grid item xs={12} sm={4}>\r\n                  <FormLabel>Usar dados da empresa?</FormLabel>\r\n\r\n                  <Switch\r\n                    color=\"primary\"\r\n                    name=\"UsarDados\"\r\n                    value={values.UsarDados}\r\n                    checked={values.UsarDados}\r\n                    disabled={disableFields}\r\n                    onChange={funcUsarDadosEmpresa}\r\n                    inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"Pessoa.Nome\"\r\n                  name=\"Nome\"\r\n                  label=\"Nome\"\r\n                  fullWidth\r\n                  disabled={disableFields}\r\n                  onChange={handlePessoa}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={\r\n                    values.UsarDados ? values.RazaoSocial : values.Pessoas.Nome\r\n                  }\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"Pessoa.CPF\"\r\n                  name=\"CPF\"\r\n                  label=\"CPF\"\r\n                  fullWidth\r\n                  disabled={disableFields}\r\n                  onChange={handlePessoa}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={\r\n                    values.UsarDados ? values.CNPJ_CPF : values.Pessoas.CPF\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={3}>\r\n                <TextField\r\n                  id=\"Pessoa.DataNascimento\"\r\n                  name=\"DataNascimento\"\r\n                  label=\"Data Nascimento\"\r\n                  type=\"date\"\r\n                  onChange={handlePessoa}\r\n                  disabled={disableFields}\r\n                  value={values.Pessoas.DataNascimento}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"Pessoa.Email\"\r\n                  name=\"Email\"\r\n                  label=\"E-mail\"\r\n                  disabled={disableFields}\r\n                  fullWidth\r\n                  onChange={handlePessoa}\r\n                  value={values.Pessoas.Email}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Pessoa.Telefone\"\r\n                  name=\"Telefone\"\r\n                  label=\"Telefone\"\r\n                  disabled={disableFields}\r\n                  fullWidth\r\n                  onChange={handlePessoa}\r\n                  value={\r\n                    values.UsarDados ? values.Telefone : values.Pessoas.Telefone\r\n                  }\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <div classname={classes.buttons}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"inherit\"\r\n                className={classes.button}\r\n                disabled={disableFields}\r\n              >\r\n                Limpar\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                className={classes.button}\r\n              >\r\n                {disableFields ? \"Alterar\" : \"Cadastrar\"}\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CadastroEmpresa;\r\n","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Financeiro\\Financeiros.jsx",["401","402","403","404"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Button, Grid, MenuItem, Paper, TextField } from \"@material-ui/core\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\nimport \"./Financeiros.css\";\r\nimport CurrencyFormat from 'react-currency-format';\r\n\r\nconst Financeiros = () => {\r\n  const { token } = useContext(StoreContext);  \r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n \r\n\r\n  const url = `https://localhost:44389/api/financeiroPorEmpresa/${token.empresaId}`;\r\n  const response = useFetch(url);  \r\n\r\n  var CurrencyFormat = require('react-currency-format');\r\n\r\n  const initialValues = {\r\n    Id: 0,\r\n    AlunoId: 0,\r\n    NomeAluno: \"\",\r\n    DataVencimento: \"\",    \r\n    Valor: 0,\r\n    FormaPagamento: \"\",\r\n    Situacao: 0,\r\n    EmpresaId: 0,    \r\n  }\r\n  const [values,setValues] = useState(initialValues); \r\n  \r\n  function editarFinanceiro(id){\r\n    history.push(`/cadastroFinanceiro/${id}`)\r\n  }\r\n\r\n  function novoFinanceiro(){\r\n    history.push(\"/cadastroFinanceiro\")\r\n  } \r\n\r\n  function showFinanceiros(financeiros){\r\n    return (\r\n      financeiros.map((financeiro) => (\r\n        <tr onClick={() => editarFinanceiro(financeiro.id)}>\r\n          <td key={financeiro.id}>{financeiro.id}</td>\r\n          <td>Receber</td>\r\n          <td key={financeiro.nomeAluno}>{financeiro.nomeAluno}</td>\r\n          <td key={financeiro.dataVencimento}>{format(new Date(financeiro.dataVencimento),'dd/MM/yyy')}</td>\r\n          <CurrencyFormat value={financeiro.valor} displayType='text' thousandSeparator={true} prefix={'R$'} \r\n          renderText={value => <td key={financeiro.valor}>{value}</td>}/>\r\n          <td key={financeiro.situacao}>Em aberto            \r\n         </td>                \r\n        </tr>\r\n      ))\r\n    )\r\n  }\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <div className={classes.titulo}>\r\n            <h1>Financeiro</h1>\r\n          </div>\r\n          <div className=\"btn-novo\">\r\n          <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                onClick={novoFinanceiro}\r\n                className=\"btn-novo\"                \r\n              >\r\n                Novo\r\n              </Button>\r\n          </div>\r\n          <Paper className={classes.paper}>              \r\n            <div className={classes.subtitulo}>\r\n              <Grid container spacing={4}>\r\n                <Grid item xs={3}>\r\n                  <TextField\r\n                    id=\"VencimentoInicio\"\r\n                    name=\"VencimentoInicio\"\r\n                    type=\"date\"\r\n                    label=\"Vencimento Inicio\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <TextField\r\n                    id=\"VencimentoFim\"\r\n                    name=\"VencimentoFim\"\r\n                    type=\"date\"\r\n                    label=\"Vencimento Fim\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                  <TextField\r\n                    id=\"Tipo\"\r\n                    name=\"Tipo\"\r\n                    label=\"Tipo\"\r\n                    fullWidth\r\n                    select\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  >\r\n                    <MenuItem value=\"CRE\">CRE</MenuItem>\r\n                    <MenuItem value=\"CPA\">CPA</MenuItem>\r\n                  </TextField>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                <TextField\r\n                    id=\"Situacao\"\r\n                    name=\"Situacao\"\r\n                    label=\"Situação\"\r\n                    fullWidth\r\n                    select\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  >\r\n                    <MenuItem value=\"Todos\">Todos</MenuItem>  \r\n                    <MenuItem value=\"Aberto\">Abertos</MenuItem>\r\n                    <MenuItem value=\"Fechado\">Fechados</MenuItem>\r\n                  </TextField>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={12}>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    id=\"Aluno\"\r\n                    name=\"Aluno\"\r\n                    type=\"Aluno\"\r\n                    label=\"Aluno\"\r\n                    fullWidth                   \r\n                  />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                onClick={novoFinanceiro}\r\n                className=\"btn-novo\"                \r\n              >\r\n                Pesquisar\r\n              </Button>\r\n                </Grid>\r\n                </Grid>\r\n               \r\n            </div>\r\n            </Paper>\r\n          <Paper className={classes.paper}>\r\n         <div className=\"lista-financeiros\">\r\n             <table id=\"financeiros\">\r\n                 <tbody>\r\n                     <tr>\r\n                         <th>Id</th>\r\n                         <th>Tipo</th>\r\n                         <th>Aluno</th>\r\n                         <th>Vencimento</th>\r\n                         <th>Valor</th>\r\n                         <th>Situação</th>                         \r\n                     </tr>\r\n                    {response.data ?\r\n                    showFinanceiros(response.data)\r\n                    : false}\r\n                 </tbody>\r\n             </table>\r\n\r\n         </div>\r\n          </Paper>\r\n        </Paper>\r\n       \r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Financeiros;\r\n","D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Financeiro\\CadastroFinanceiro.jsx",["405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421"],"D:\\Desenvolvimento\\Sources\\MeuAlunoReact\\MeuAlunoReact\\src\\utils\\storage.js",[],"C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\index.js",[],["422","423"],"C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\App.jsx",["424","425","426","427"],"C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Usuario\\Login.jsx",["428","429"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport { url } from \"../../../src/variaveis\";\r\n\r\nimport \"./Login.css\";\r\n\r\nfunction initialState() {\r\n  return { Login: \"\", Senha: \"\" };\r\n}\r\n\r\nconst UserLogin = () => {\r\n  const [values, setValues] = useState(initialState);\r\n  const [error, setError] = useState(null);\r\n  const { setToken } = useContext(StoreContext);\r\n  const { setUserLogged} = useContext(StoreContext);\r\n  const history = useHistory();\r\n  const {token} = '';\r\n\r\n  function onChange(event) {\r\n    const { value, name } = event.target;\r\n\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  function onSubmit(event) {\r\n    event.preventDefault();   \r\n    const response = fetch(`${ url }/api/usuario/login`, {\r\n      //const response = fetch(\"https://localhost:44389/api/usuario/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(values),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (response.jwt != null && response.dadosUsuario.login != null) {          \r\n         setToken(response.jwt);\r\n         setUserLogged(response.dadosUsuario);         \r\n         return history.push(\"/\");                        \r\n        } else {\r\n          console.log(\"Deu ruim\");\r\n          console.log(response.jwt);\r\n          console.log(response.dadosUsuario);\r\n          //setToken(response.jwt);\r\n          setError(response);\r\n        }\r\n      });         \r\n    \r\n    setValues(initialState);\r\n  }\r\n\r\n  return (\r\n    <div className=\"user-login\">\r\n      <h1 className=\"user-login__title\">Acessar o Sistema</h1>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"user-login__form-control\">\r\n          <label htmlFor=\"user\">Usuário</label>\r\n          <input\r\n            id=\"user\"\r\n            type=\"text\"\r\n            name=\"Login\"\r\n            onChange={onChange}\r\n            value={values.Login}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"user-login__form-control\">\r\n          <label htmlFor=\"password\">Senha</label>\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            name=\"Senha\"\r\n            onChange={onChange}\r\n            value={values.Senha}\r\n            required\r\n          />\r\n        </div>\r\n        {error && <div className=\"user-login__error\">{error}</div>}\r\n        <button type=\"submit\" className=\"user-login__submit-button\">\r\n          Entrar\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserLogin;\r\n","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\contexts\\Provider.jsx",[],"C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Aluno\\CadastroAluno.jsx",["430","431","432","433","434","435","436","437"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { cpfMask, onlyLetters, onlyNumbersMax5, phoneMask } from \"../../utils/mask\";\r\n\r\nimport {\r\n  Button,\r\n  Divider,\r\n  Grid,  \r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  TextField,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  Dialog,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport { format } from 'date-fns';\r\nimport { useHistory } from \"react-router\";\r\n\r\n\r\nfunction CadastroAluno() {\r\n  const { token, userLogged } = useContext(StoreContext);\r\n\r\n  const materiasUrl = `http://raphaelfogaca-002-site1.itempurl.com/api/materiaPorEmpresa/${userLogged.empresaId}`;\r\n  const materiasResponse = useFetch(materiasUrl,\"get\",token);\r\n  console.log(\"materias: \", materiasResponse.data)\r\n  const servicosUrl = `http://raphaelfogaca-002-site1.itempurl.com/api/servicoPorEmpresa/${userLogged.empresaId}`;\r\n  const servicosResponse = useFetch(servicosUrl,\"get\",token);\r\n\r\n  const editarAlunoId = window.location.pathname.split(\"/\");\r\n  var editarAlunoUrl = \"\";\r\n\r\n  if (editarAlunoId[2] != null) {\r\n    editarAlunoUrl = `http://raphaelfogaca-002-site1.itempurl.com/api/aluno/${editarAlunoId[2]}`;\r\n  }\r\n\r\n  const history = useHistory();\r\n\r\n  const alunoResponse = useFetch(editarAlunoUrl,\"get\",token);\r\n  const [open, setOpen] = useState(false);\r\n  \r\n  const initialValues = {\r\n    Id: 0,\r\n    Nome: \"\",\r\n    DataNascimento: \"\",\r\n    Serie: \"\",\r\n    NomeResponsavel: \"\",\r\n    CPFResponsavel: \"\",\r\n    TelefoneResponsavel: \"\",\r\n    EmailResponsavel: \"\",\r\n    Escola: \"\",\r\n    Endereco: {\r\n      Logradouro: \"\",\r\n      Numero: \"\",\r\n      Complemento: \"\",\r\n      Bairro: \"\",\r\n      Cidade: \"\",\r\n      Estado: \"\",\r\n      CEP: \"\",\r\n    },\r\n    EmpresaId: userLogged.empresaId,\r\n    ServicoId: \"\",\r\n    MateriaAlunos: [],\r\n  };\r\n\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  const alertas = {\r\n    text: \"\",\r\n    title: \"\"\r\n  }\r\n\r\n  const [mensagem, setMensagem] = useState(alertas);\r\n\r\n  const handleClickOpen = () => {      \r\n    if (validadorForm()) {\r\n      handleSubmit();      \r\n    } else {\r\n      console.log(\"form inválido\");\r\n    }\r\n  };\r\n\r\n  const validadorForm = () => {\r\n    if(values.Nome ===\"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar nome do aluno\" });\r\n      setOpen(true);      \r\n    } else if(values.DataNascimento ===\"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar data de nascimento do aluno\" });\r\n      setOpen(true); \r\n    } else if(values.Serie ===\"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar a série do aluno\" });\r\n      setOpen(true); \r\n    } else if(values.Escola ===\"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o nome da escola do aluno\" });\r\n      setOpen(true); \r\n    } else if(values.NomeResponsavel ===\"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o nome do responsável pelo aluno\" });\r\n      setOpen(true); \r\n    } else if(values.CPFResponsavel ===\"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o CPF do responsável pelo aluno\" });\r\n      setOpen(true); \r\n    } else if(values.TelefoneResponsavel ===\"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o telefone do responsável pelo aluno\" });\r\n      setOpen(true); \r\n    } else if(values.EmailResponsavel ===\"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o e-mail do responsável pelo aluno\" });\r\n      setOpen(true); \r\n    } else if(values.Endereco.Logradouro ===\"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o logradouro do endereço\" });\r\n      setOpen(true); \r\n    } else if(values.Endereco.Numero ===\"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o número do endereço\" });\r\n      setOpen(true); \r\n    } else if(values.Endereco.Cidade ===\"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar a cidade do endereço\" });\r\n      setOpen(true); \r\n    } else if(values.Endereco.Bairro ===\"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o bairro do endereço\" });\r\n      setOpen(true); \r\n    } else if(values.Endereco.Estado ===\"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o estado do endereço\" });\r\n      setOpen(true); \r\n    } else if(values.Endereco.CEP ===\"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o CEP do endereço\" });\r\n      setOpen(true); \r\n    } else if(values.MateriaAlunos.length === 0){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário selecionar pelo menos uma matéria\" });\r\n      setOpen(true); \r\n    } else if(values.ServicoId ===\"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário selecionar o serviço contratado\" });\r\n      setOpen(true); \r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(\r\n    function () {\r\n      if (alunoResponse.data != null) {        \r\n\r\n        var materias = []\r\n        alunoResponse.data.materiaAlunos.map((materia => (\r\n          materias.push({ MateriaId: materia.materiaId })\r\n        )))\r\n\r\n        setValues((prevState) => ({\r\n          Id: alunoResponse.data.id,\r\n          Nome: alunoResponse.data.nome,\r\n          DataNascimento: format(new Date(alunoResponse.data.dataNascimento), 'yyyy-MM-dd'),\r\n          Serie: alunoResponse.data.serie,\r\n          Escola: alunoResponse.data.escola,\r\n          NomeResponsavel: alunoResponse.data.nomeResponsavel,\r\n          CPFResponsavel: alunoResponse.data.cpfResponsavel,\r\n          TelefoneResponsavel: alunoResponse.data.telefoneResponsavel,\r\n          EmailResponsavel: alunoResponse.data.emailResponsavel,\r\n          Endereco: {\r\n            Logradouro: alunoResponse.data.endereco.logradouro,\r\n            Numero: alunoResponse.data.endereco.numero,\r\n            Complemento: alunoResponse.data.endereco.complemento,\r\n            Bairro: alunoResponse.data.endereco.bairro,\r\n            Cidade: alunoResponse.data.endereco.cidade,\r\n            Estado: alunoResponse.data.endereco.estado,\r\n            CEP: alunoResponse.data.endereco.cep,\r\n          },\r\n          ServicoId: alunoResponse.data.servicoId,\r\n          EmpresaId: alunoResponse.data.empresaId,\r\n          MateriaAlunos: materias,\r\n        }));\r\n      }\r\n    },\r\n    [alunoResponse]\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: e.target.value });\r\n  };\r\n\r\n  const handleEndereco = (e) => {\r\n    const { name, value } = e.target;\r\n    const Endereco = { ...values.Endereco };\r\n\r\n    if (name === \"Logradouro\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Logradouro\") Endereco[key] = value;\r\n      });\r\n    } else if (name === \"Numero\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Numero\") Endereco[key] = value;\r\n      });\r\n    } else if (name === \"Complemento\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Complemento\") Endereco[key] = value;\r\n      });\r\n    } else if (name === \"Bairro\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Bairro\") Endereco[key] = value;\r\n      });\r\n    } else if (name === \"Cidade\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Cidade\") Endereco[key] = value;\r\n      });\r\n    } else if (name === \"Estado\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Estado\") Endereco[key] = value;\r\n      });\r\n    } else if (name === \"CEP\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"CEP\") Endereco[key] = value;\r\n      });\r\n    }\r\n\r\n    setValues({ ...values, Endereco });\r\n  };\r\n\r\n  const handleMateria = (e) => {\r\n    const { name, value, checked } = e.target;\r\n\r\n    var MateriaAlunos = [...values.MateriaAlunos]; //matérias que tem atualmente\r\n    console.log(MateriaAlunos);\r\n    console.log(MateriaAlunos.length);\r\n    const materiaIdIndex = value.search(\"id\");\r\n    console.log(materiaIdIndex);\r\n    const index = value.substring(6, materiaIdIndex - 1);\r\n\r\n    const materiaId = value.substring(materiaIdIndex + 3);\r\n\r\n    var newValues = \"\";\r\n\r\n    //se desmarcar checkbox da matéria\r\n    if (checked === false) {\r\n      //se encontrar materiaId no array, faz filter e tira\r\n      MateriaAlunos = MateriaAlunos.filter((n) => n.MateriaId != materiaId);\r\n      setValues({ ...values, MateriaAlunos });\r\n    }\r\n\r\n    //se marcar checkbox da matéria\r\n    if (checked === true) {\r\n      //adiciona materia no array\r\n      MateriaAlunos.push({ MateriaId: materiaId });\r\n      setValues({ ...values, MateriaAlunos });\r\n    }\r\n  };\r\n\r\n  function checkMateria(id) {\r\n    var checkMateria = [...values.MateriaAlunos]\r\n    var matIds = []\r\n    checkMateria.map((mat, i) => (\r\n      matIds.push(Object.values(mat))\r\n    ))\r\n    if (matIds.find(e => e == id)) {\r\n      return true\r\n    } else\r\n      return false\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    alert(\"SUCCESS!! :-)\\n\\n\" + JSON.stringify(values, null, 4));   \r\n    console.log(values);   \r\n\r\n    const response = fetch(`http://raphaelfogaca-002-site1.itempurl.com/api/aluno/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: 'Bearer '+token,\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(values),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response === \"Aluno cadastrado\") {\r\n          setMensagem({ ...values, title: \"Sucesso!\", text: response })\r\n          setOpen(true);\r\n         } \r\n        else {\r\n          setMensagem({ ...values, title: \"Erro!\", text: \"Erro ao cadastrar aluno\" })\r\n          setOpen(true);\r\n        }\r\n      });\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <div className={classes.titulo}>\r\n            <h1>Cadastro de Aluno</h1>\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <div className={classes.subtitulo}>\r\n                  <h4>Dados do Aluno</h4>\r\n                  <Divider />\r\n                </div>\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"Nome\"\r\n                  name=\"Nome\"\r\n                  label=\"Nome Aluno\"\r\n                  \r\n                  fullWidth\r\n                  onChange={(e) => { handleChange(onlyLetters(e)) }}\r\n                  value={values.Nome}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={3}>\r\n                <TextField\r\n                  id=\"DataNascimento\"\r\n                  name=\"DataNascimento\"\r\n                  label=\"Data Nascimento\"\r\n                  type=\"date\"\r\n                  \r\n                  onChange={handleChange}\r\n                  value={values.DataNascimento}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Serie\"\r\n                  name=\"Serie\"\r\n                  label=\"Serie\"\r\n                  \r\n                  onChange={handleChange}\r\n                  value={values.Serie}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={3}>\r\n                <TextField\r\n                  id=\"Escola\"\r\n                  name=\"Escola\"\r\n                  label=\"Escola\"\r\n                  \r\n                  onChange={(e) => { handleChange(onlyLetters(e)) }}\r\n                  value={values.Escola}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"NomeResponsavel\"\r\n                  name=\"NomeResponsavel\"\r\n                  label=\"Nome Responsável\"\r\n                  \r\n                  fullWidth\r\n                  onChange={(e) => { handleChange(onlyLetters(e)) }}\r\n                  value={values.NomeResponsavel}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"CPFResponsavel\"\r\n                  name=\"CPFResponsavel\"\r\n                  label=\"CPF\"\r\n                  \r\n                  onChange={(e) => { handleChange(cpfMask(e)) }}\r\n                  value={values.CPFResponsavel}\r\n                  fullWidth\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"TelefoneResponsavel\"\r\n                  name=\"TelefoneResponsavel\"\r\n                  label=\"Telefone\"\r\n                  \r\n                  onChange={(e) => { handleChange(phoneMask(e)) }}\r\n                  value={values.TelefoneResponsavel}\r\n                  fullWidth\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </Grid>              \r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"EmailResponsavel\"\r\n                  name=\"EmailResponsavel\"\r\n                  label=\"E-mail\"\r\n                  onChange={handleChange}\r\n                  \r\n                  value={values.EmailResponsavel}\r\n                  fullWidth\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <div className={classes.subtitulo}>\r\n                  <h4>Endereço</h4>\r\n                  <Divider />\r\n                </div>\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"Endereco.Logradouro\"\r\n                  name=\"Logradouro\"\r\n                  \r\n                  onChange={handleEndereco}\r\n                  value={values.Endereco.Logradouro}\r\n                  label=\"Logradouro\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={1}>\r\n                <TextField\r\n                  id=\"Endereco.Numero\"\r\n                  name=\"Numero\"\r\n                  label=\"Nº\"                  \r\n                  onChange={(e) => { handleEndereco(onlyNumbersMax5(e)) }}\r\n                  value={values.Endereco.Numero}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={3}>\r\n                <TextField\r\n                  id=\"Endereco.Complemento\"\r\n                  name=\"Complemento\"\r\n                  label=\"Complemento\"\r\n                  onChange={handleEndereco}\r\n                  value={values.Endereco.Complemento}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Endereco.Cidade\"\r\n                  name=\"Cidade\"\r\n                  label=\"Cidade\"\r\n                  \r\n                  onChange={handleEndereco}\r\n                  value={values.Endereco.Cidade}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Endereco.Bairro\"\r\n                  name=\"Bairro\"\r\n                  \r\n                  onChange={handleEndereco}\r\n                  value={values.Endereco.Bairro}\r\n                  label=\"Bairro\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Endereco.Estado\"\r\n                  name=\"Estado\"\r\n                  label=\"Estado\"\r\n                  \r\n                  onChange={handleEndereco}\r\n                  value={values.Endereco.Estado}\r\n                  fullWidth\r\n                  select\r\n                >\r\n                  <MenuItem value=\"AC\">Acre</MenuItem>\r\n                  <MenuItem value=\"AL\">Alagoas</MenuItem>\r\n                  <MenuItem value=\"AP\">Amapá</MenuItem>\r\n                  <MenuItem value=\"AM\">Amazonas</MenuItem>\r\n                  <MenuItem value=\"BA\">Bahia</MenuItem>\r\n                  <MenuItem value=\"CE\">Ceará</MenuItem>\r\n                  <MenuItem value=\"DF\">Distrito Federal</MenuItem>\r\n                  <MenuItem value=\"ES\">Espírito Santo</MenuItem>\r\n                  <MenuItem value=\"GO\">Goiás</MenuItem>\r\n                  <MenuItem value=\"MA\">Maranhão</MenuItem>\r\n                  <MenuItem value=\"MT\">Mato Grosso</MenuItem>\r\n                  <MenuItem value=\"MS\">Mato Grosso do Sul</MenuItem>\r\n                  <MenuItem value=\"MG\">Minas Gerais</MenuItem>\r\n                  <MenuItem value=\"PA\">Pará</MenuItem>\r\n                  <MenuItem value=\"PB\">Paraíba</MenuItem>\r\n                  <MenuItem value=\"PR\">Paraná</MenuItem>\r\n                  <MenuItem value=\"PE\">Pernambuco</MenuItem>\r\n                  <MenuItem value=\"PI\">Piauí</MenuItem>\r\n                  <MenuItem value=\"RJ\">Rio de Janeiro</MenuItem>\r\n                  <MenuItem value=\"RN\">Rio Grande do Norte</MenuItem>\r\n                  <MenuItem value=\"RS\">Rio Grande do Sul</MenuItem>\r\n                  <MenuItem value=\"RO\">Rondônia</MenuItem>\r\n                  <MenuItem value=\"RR\">Roraima</MenuItem>\r\n                  <MenuItem value=\"SC\">Santa Catarina</MenuItem>\r\n                  <MenuItem value=\"SP\">São Paulo</MenuItem>\r\n                  <MenuItem value=\"SE\">Sergipe</MenuItem>\r\n                  <MenuItem value=\"TO\">Tocantins</MenuItem>\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Endereco.CEP\"\r\n                  name=\"CEP\"\r\n                  label=\"CEP\"\r\n                  \r\n                  onChange={handleEndereco}\r\n                  value={values.Endereco.CEP}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <div className={classes.subtitulo}>\r\n                  <h4>Matérias</h4>\r\n                  <Divider />\r\n                </div>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>                \r\n                {\r\n                  materiasResponse.data ?\r\n                    (\r\n                      materiasResponse.data.map((mat, j) => (\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              name={`MateriaAlunos${[]}.MateriaId`}\r\n                              onChange={handleMateria}                              \r\n                              value={`index:${j},id:${mat.id}`}\r\n                              checked={checkMateria(mat.id)}\r\n                            />\r\n                          }\r\n                          label={mat.nome}\r\n                        />\r\n                      ))) : false\r\n                }\r\n                \r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <div className={classes.subtitulo}>\r\n                  <h4>Serviço Contratado</h4>\r\n                  <Divider />\r\n                </div>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <Select\r\n                  id=\"Servico\"\r\n                  label=\"Servico Contratado\"\r\n                  onChange={handleChange}\r\n                  name=\"ServicoId\"\r\n                  \r\n                  value={values.ServicoId}\r\n\r\n                >\r\n                  {servicosResponse.data ? (\r\n\r\n                    servicosResponse.data.map((serv) => (\r\n                      <MenuItem value={serv.id}>\r\n                        {serv.descricao + \" - Valor: R$\" + serv.valor}\r\n                      </MenuItem>\r\n                    ))) : false\r\n                  }\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n            <div classname={classes.buttons}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"inherit\"\r\n                className={classes.button}\r\n              >\r\n                Limpar\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"                \r\n                onClick={handleClickOpen}\r\n                className={classes.button}\r\n              >\r\n                Cadastrar\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </Paper>\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{mensagem.title}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {mensagem.text}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          {(mensagem.text == \"Aluno cadastrado\") ?     \r\n          <Button onClick={() => { handleClose(); history.push(\"/alunos\"); }}>Ok</Button>\r\n           : <Button onClick={handleClose}>Ok</Button>}          \r\n        </Dialog>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CadastroAluno;\r\n","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\components\\menu\\MenuItem.jsx",["438","439"],"import React from 'react'\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as IoIcons from 'react-icons/io';\r\n\r\nexport const MenuItemAdmin = [\r\n    {\r\n        title: 'Home',\r\n        path: '/',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Empresas',\r\n        path: '/empresas',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Aulas',\r\n        path: '/aulas',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Serviços',\r\n        path: '/servicos',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Matérias',\r\n        path: '/materias',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Alunos',\r\n        path: '/alunos',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Financeiro',\r\n        path: '/financeiros',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Usuários',\r\n        path: '/usuarios',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    }   \r\n]\r\n\r\nexport const MenuItemCliente = [\r\n    {\r\n        title: 'Home',\r\n        path: '/',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },  \r\n    {\r\n        title: 'Matérias',\r\n        path: '/materias',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },  \r\n    {\r\n        title: 'Aulas',\r\n        path: '/aulas',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Serviços',\r\n        path: '/servicos',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },    \r\n    {\r\n        title: 'Alunos',\r\n        path: '/alunos',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Financeiro',\r\n        path: '/financeiros',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },       \r\n]","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\components\\menu\\Menu.jsx",["440","441","442"],"import React ,{useState, useContext} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MenuItemAdmin, MenuItemCliente } from './MenuItem';\r\nimport StoreContext from '../../contexts/StoreContext';\r\n\r\n\r\nconst Menu = (props) => {\r\nconst [sidebar,setSidebar] = useState(false);\r\nconst showSidebar = () => setSidebar(!sidebar);\r\nconst { token, userLogged } = useContext(StoreContext);\r\nconsole.log(userLogged);\r\n if(userLogged.tipoUsuario == 1){\r\n    return (   \r\n        <>    \r\n       \r\n        <nav className=\"nav-menu\">\r\n            <ul className=\"nav-menu-items\">\r\n                {MenuItemAdmin.map((item,index) => {\r\n                    return (\r\n                        <li key={index} className={item.cName}>\r\n                            <Link to={item.path}>\r\n                                {item.icon}\r\n                                <span>{item.title}</span>\r\n                            </Link>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </nav>    \r\n        </>   \r\n        ) \r\n }else {\r\n    return (   \r\n        <>    \r\n       \r\n        <nav className=\"nav-menu\">\r\n            <ul className=\"nav-menu-items\">\r\n                {MenuItemCliente.map((item,index) => {\r\n                    return (\r\n                        <li key={index} className={item.cName}>\r\n                            <Link to={item.path}>\r\n                                {item.icon}\r\n                                <span>{item.title}</span>\r\n                            </Link>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </nav>    \r\n        </>   \r\n        ) \r\n }\r\n\r\n\r\n}\r\n\r\nexport default Menu;\r\n","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\components\\content\\Content.jsx",[],"C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\components\\Routes\\Private\\Private.jsx",[],"C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\contexts\\StoreContext.js",[],"C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\hooks\\useFetch.js",["443","444","445","446","447"],"import { useEffect, useState, useContext } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nexport const useFetch = (url,method, token, body) => {\r\n    const [response,setResponse] = useState({\r\n        data: null,\r\n        loading: true\r\n    })\r\n\r\n    const history = useHistory();\r\n\r\n    function handleErrors(response) {\r\n        if (!response.ok) {\r\n            throw Error(response.statusText);\r\n        }\r\n        return response;\r\n    }\r\n\r\n    useEffect(async function(){\r\n        await fetch(url, { \r\n            method: method, \r\n            headers: new Headers\r\n            ({\r\n                'Authorization': 'Bearer ' + token            \r\n            }),\r\n            body: body       \r\n    })\r\n        \r\n        .then(resp => resp.json())\r\n        .then(json => setResponse({\r\n                data: json,\r\n                loading: false\r\n            }));\r\n    },[url,method])\r\n    return response\r\n}","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\utils\\useStorage.js",[],"C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Styles\\useStyles.js",[],"C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\components\\content\\Header.jsx",["448","449","450","451","452","453","454","455","456","457"],"import {\r\n  MenuItem,\r\n  Paper,\r\n  TextField,\r\n  AppBar,\r\n  Box,\r\n  Toolbar,\r\n  Typography,\r\n  Select,\r\n  FormControl,\r\n  InputLabel\r\n} from \"@material-ui/core\";\r\nimport React, { useContext } from \"react\";\r\nimport StoreContext from '../../contexts/StoreContext';\r\nimport useStyles from \"../../views/Styles/useStyles\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Header = () => {\r\n  const { token, setToken } = useContext(StoreContext);\r\n  const { userLogged, setUserLogged } = useContext(StoreContext);\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  if (token != null) {\r\n\r\n    const showEmpresas = () => {\r\n      return userLogged.empresa.map((emp) => (\r\n        <MenuItem value={emp.id}>{emp.razaoSocial}</MenuItem>\r\n      ));\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n      const { name, value } = e.target;\r\n      var newEmpresa = userLogged.empresa.filter((emp) => (\r\n        emp.id == value\r\n      ))     \r\n      setUserLogged({ ...userLogged, empresaId: newEmpresa[0].id, empresaNome: newEmpresa[0].razaoSocial })\r\n      history.push('/');      \r\n    }\r\n\r\n    return (\r\n      <div className=\"Header\" >\r\n\r\n        <label>Empresa</label>\r\n        <FormControl sx={{ m: 1, minWidth: 120 }} variant=\"standard\">\r\n          <Select\r\n            className=\"header-select\"\r\n            labelId=\"empresaNome\"\r\n            id=\"empresaNome\"\r\n            name=\"empresaNome\"\r\n            onChange={handleChange}\r\n            label=\"Empresa\"\r\n            value={userLogged.empresaId}            \r\n          >\r\n            {userLogged.empresa.length > 0\r\n              ? showEmpresas()\r\n              : false}\r\n          </Select>\r\n        </FormControl>\r\n\r\n\r\n        <label>Olá </label>\r\n        <strong>{userLogged.pessoaNome}</strong>\r\n\r\n        <button type=\"button\" onClick={() => setToken(null)}>Sair</button>\r\n      </div>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <></>\r\n    )\r\n  }\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Aluno\\Alunos.jsx",[],"C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Servico\\CadastroServico.jsx",["458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498"],"import React, { useContext, useState, useEffect, Component } from \"react\";\r\nimport { Formik, Field, Form, useFormik, FieldArray } from \"formik\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useHistory } from \"react-router\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport ScopedCssBaseline from \"@material-ui/core/ScopedCssBaseline\";\r\nimport lifecycle, { componentDidMount, componentDidUpdate } from 'react-pure-lifecycle';\r\n\r\nimport {\r\n  Button,\r\n  Divider,\r\n  FormControl,\r\n  FormLabel,\r\n  Grid,\r\n  InputLabel,\r\n  ListItemText,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n  withStyles,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Dialog,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport { purple } from \"@material-ui/core/colors\";\r\nimport { currencyMask, onlyLetters } from \"../../utils/mask\";\r\nimport { url } from \"../../../src/variaveis\";\r\n\r\nfunction CadastroServico() {\r\n  const { token, userLogged } = useContext(StoreContext);\r\n  const aulasResponse = useFetch(`${ url }/api/aulaPorEmpresa/${userLogged.empresaId}`,\"get\",token);\r\n  const history = useHistory();\r\n  const editarServicoId = window.location.pathname.split(\"/\");\r\n  var editarServicoUrl = \"\";\r\n\r\n  if (editarServicoId[2] != null) {\r\n    editarServicoUrl = `${ url }/api/servico/${editarServicoId[2]}`;\r\n  }\r\n\r\n  const servicoResponse = useFetch(editarServicoUrl,\"get\",token);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const initialValues = {\r\n    Id: 0,\r\n    Descricao: \"\",\r\n    Valor: \"\",\r\n    Fidelidade: false,\r\n    TipoMulta: \"\",\r\n    ValorMulta: \"\",\r\n    EmpresaId: userLogged.empresaId,\r\n    QtdAulas: \"\",\r\n    ServicosAulas: [],\r\n  };\r\n\r\n  const [values, setValues] = useState(initialValues);\r\n  const alertas = {\r\n    text: \"\",\r\n    title: \"\"\r\n  }\r\n  const [mensagem, setMensagem] = useState(alertas);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const validadorServicosAulas = () => {\r\n    var validador = false;    \r\n    for (var i = 0; i < values.QtdAulas; i++) {      \r\n      if (values.ServicosAulas[i] != null && values.ServicosAulas[i].AulaId == \"\") {\r\n        validador = false;\r\n      }\r\n      else {\r\n        validador = true;\r\n      }\r\n    }\r\n    console.log(validador);\r\n    return validador;\r\n  }\r\n\r\n  const validadorForm = () => {\r\n    console.log(\"validadorForm()\")\r\n    if (values.Descricao == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário selecionar uma descrição\" });\r\n      setOpen(true);\r\n    } else if (values.Valor == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar valor\" });\r\n      setOpen(true);\r\n    } else if (values.QtdAulas == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar quantidade de aulas\" });\r\n      setOpen(true);\r\n    } else if (values.ServicosAulas[0].AulaId == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário selecionar pelo menos uma aula\" });\r\n      setOpen(true);\r\n    } else if (values.QtdAulas > 0 && !validadorServicosAulas()) {\r\n      console.log(\"values.QtdAulas > 0 && !validadorServicosAulas()\")\r\n      for (var i = 0; i <= values.QtdAulas; i++) {\r\n        if (values.ServicosAulas[i] != null && values.ServicosAulas[i].AulaId == \"\") {\r\n          setMensagem({ ...values, title: \"Alerta!\", text: \"Falta selecionar aula do serviço\" });\r\n          setOpen(true);\r\n        }\r\n      }  \r\n    } else if (values.Fidelidade == true && (values.TipoMulta == \"\" || values.ValorMulta == \"\")){\r\n        if(values.TipoMulta == \"\"){\r\n          setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar tipo de multa quando tem fidelidade\" });\r\n          setOpen(true);\r\n        }\r\n        if(values.ValorMulta == \"\"){\r\n          setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar valor de multa quando tem fidelidade\" });\r\n          setOpen(true);\r\n        } \r\n    }  else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  const handleClickOpen = () => {\r\n    console.log(\"handleClickOpen()\");  \r\n    if (validadorForm())  {\r\n        \r\n        handleSubmit();\r\n      }\r\n      else {\r\n        console.log(\"form invalido\");\r\n      }      \r\n    }     \r\n       \r\n  \r\n  const methods = {\r\n    componentDidUpdate(isFormValid) {\r\n      return true;\r\n    }\r\n  };\r\n\r\nconst handleClose = () => {\r\n  setOpen(false);\r\n};\r\n\r\nuseEffect(\r\n  function () {\r\n    if (servicoResponse.data != null) {\r\n      var servicos = [];\r\n      servicoResponse.data.servicosAulas.map((servico) =>\r\n        servicos.push({ AulaId: servico.aulaId })\r\n      );\r\n\r\n      setValues((prevState) => ({\r\n        Id: servicoResponse.data.id,\r\n        Descricao: servicoResponse.data.descricao,\r\n        Valor: servicoResponse.data.valor,\r\n        TipoMulta: servicoResponse.data.tipoMulta,\r\n        Fidelidade: servicoResponse.data.fidelidade,\r\n        EmpresaId: servicoResponse.data.empresaId,\r\n        ValorMulta: servicoResponse.data.valorMulta,\r\n        ServicosAulas: servicos,\r\n        QtdAulas: servicoResponse.data.qtdAulas,\r\n      }));\r\n    }\r\n  },\r\n  [servicoResponse]\r\n);\r\n\r\nuseEffect(\r\n  function () {\r\n    if (values.QtdAulas > 0) {\r\n      const ServicosAulas = [...values.ServicosAulas];\r\n      const QtdAulas = values.QtdAulas || 0;\r\n      const previousNumber = ServicosAulas.length || 0;\r\n      if (previousNumber < QtdAulas) {\r\n        for (let i = previousNumber; i < QtdAulas; i++) {\r\n          ServicosAulas.push({ AulaId: \"\" });\r\n        }\r\n      } else {\r\n        for (let i = previousNumber; i >= QtdAulas; i--) {\r\n          ServicosAulas.splice(i, 1);\r\n        }\r\n      }\r\n      setValues({ ...values, ServicosAulas });\r\n    }\r\n  },\r\n  [values.QtdAulas]\r\n);\r\n\r\nconst handleChange = (e) => {\r\n  const { name, value } = e.target;\r\n  setValues({ ...values, [name]: e.target.value });\r\n};\r\n\r\nconst handleCheckChange = (e) => {\r\n  const { name, checked } = e.target;\r\n  setValues({ ...values, [name]: e.target.checked });\r\n};\r\n\r\nconst handleChangeAula = (e) => {\r\n  const { name, value, index, select } = e.target;\r\n\r\n  const AulaIdIndex = name.substring(13, 14);\r\n  console.log(AulaIdIndex);\r\n  console.log(value);\r\n\r\n  var ServicosAulas = [...values.ServicosAulas]; //servicos que tem atualmente\r\n  ServicosAulas.splice(AulaIdIndex, 1, { AulaId: value }); //preencher item selecionado\r\n  setValues({ ...values, ServicosAulas });\r\n};\r\n\r\nfunction handleSubmit(e) {\r\n  setLoading(true);\r\n\r\n  const response = fetch(`${ url }/api/servico`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: 'Bearer  '+token,\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(values),\r\n  })\r\n    .then((response) => response.json())\r\n    .then((response) => {\r\n      if (response != null) {\r\n        setMensagem({ ...values, title: \"Sucesso!\", text: response })\r\n        setOpen(true);\r\n      } else {\r\n        setMensagem({ ...values, title: \"Erro!\", text: \"Erro ao cadastrar serviço\" })\r\n        setOpen(true);\r\n      }\r\n    })\r\n    .then(() => {\r\n      setLoading(false);\r\n    })\r\n}\r\n\r\nconst classes = useStyles();\r\n\r\nreturn (\r\n  <React.Fragment>\r\n    <main className={classes.layout}>\r\n      <Paper className={classes.paper}>\r\n        <form>\r\n          <div className={classes.titulo}>\r\n            <h1>Cadastro de Serviço</h1>\r\n          </div>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <div className={classes.subtitulo}>\r\n                <h4>Dados do Serviço</h4>\r\n                <Divider />\r\n              </div>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={10}>\r\n              <TextField\r\n                id=\"Descricao\"\r\n                name=\"Descricao\"\r\n                label=\"Descrição\"\r\n                value={values.Descricao}\r\n                onChange={handleChange}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={2}>\r\n              <TextField\r\n                id=\"Valor\"\r\n                name=\"Valor\"\r\n                label=\"Valor\"                \r\n                fullWidth\r\n                value={values.Valor}\r\n                onChange={(e) => handleChange(currencyMask(e))}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={2}>\r\n              <FormLabel>Fidelidade</FormLabel>\r\n\r\n              <Switch\r\n                color=\"primary\"\r\n                name=\"Fidelidade\"\r\n                value={values.Fidelidade}\r\n                checked={values.Fidelidade}\r\n                onChange={handleCheckChange}\r\n                inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n              { values.Fidelidade ? \r\n              (\r\n                <> \r\n                <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"TipoMulta\"\r\n                  name=\"TipoMulta\"\r\n                  label=\"Tipo de Multa\"\r\n                  fullWidth\r\n                  value={values.TipoMulta}\r\n                  onChange={handleChange}\r\n                  select\r\n                >\r\n                  <MenuItem value=\"1\">Percentual</MenuItem>\r\n                  <MenuItem value=\"2\">Fixo</MenuItem>\r\n                </TextField>\r\n              </Grid>\r\n               <Grid item xs={12} sm={2}>\r\n               <TextField\r\n                 id=\"ValorMulta\"\r\n                 name=\"ValorMulta\"\r\n                 label=\"Valor Multa\"\r\n                 value={values.ValorMulta}\r\n                 onChange={(e) => handleChange(currencyMask(e))}\r\n                 fullWidth\r\n               />\r\n             </Grid> \r\n             </>             \r\n              )\r\n            : false }\r\n          \r\n\r\n           \r\n\r\n            <Grid item xs={12} sm={2}>\r\n              <TextField\r\n                id=\"QtdAulas\"\r\n                name=\"QtdAulas\"\r\n                label=\"Qtd. Aulas\"\r\n                fullWidth\r\n                select\r\n                value={values.QtdAulas}\r\n                onChange={handleChange}\r\n              >\r\n                {[1, 2, 3, 4, 5, 6, 7].map((i) => (\r\n                  <MenuItem value={i}>{i}</MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <div className={classes.subtitulo}>\r\n                <h4>Aulas do Serviço</h4>\r\n                <Divider />\r\n              </div>\r\n            </Grid>\r\n\r\n            {values.ServicosAulas.map((ServicosAula, j) => (\r\n              <Grid item xs={12} sm={3}>\r\n                <FormControl className={classes.formControl}>\r\n                  <div>\r\n                    <h5 className=\"card-title\">Aula {j + 1}</h5>\r\n                    <Select\r\n                      onChange={handleChangeAula}\r\n                      name={`ServicosAulas${[j]}.AulaId`}\r\n                      value={values.ServicosAulas[j].AulaId}\r\n                    >\r\n                      {aulasResponse.data.map((aula, i) => (\r\n                        <MenuItem\r\n                          key={i}\r\n                          value={aula.id}\r\n                        >\r\n                          {aula.dia +\r\n                            \" (\" +\r\n                            aula.horaInicio +\r\n                            \"-\" +\r\n                            aula.horaFim +\r\n                            \")\"}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </div>\r\n                </FormControl>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n\r\n          <div className={classes.buttons}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"inherit\"\r\n              className={classes.button}\r\n            >\r\n              Limpar\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n              className={classes.button}\r\n              disabled={loading}\r\n            >\r\n              Cadastrar\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Paper>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{mensagem.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {mensagem.text}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        {(mensagem.text == \"Serviço cadastrado\" || mensagem.text == \"Serviço atualizado\") ?\r\n          <Button onClick={() => { handleClose(); history.push(\"/servicos\"); }}>Ok</Button>\r\n          : <Button onClick={handleClose}>Ok</Button>}\r\n\r\n      </Dialog>\r\n    </main>\r\n  </React.Fragment>\r\n);\r\n                          }\r\nexport default CadastroServico;\r\n","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Servico\\Servicos.jsx",[],"C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Aula\\Aulas.jsx",["499"],"import { Button } from \"@material-ui/core\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport \"./Aulas.css\"\r\nimport { url } from \"../../../src/variaveis\";\r\n\r\n\r\nfunction Aulas() {\r\n  const { token, userLogged } = useContext(StoreContext); \r\n  const response = useFetch(`${ url }/api/aulaPorEmpresa/${userLogged.empresaId}`, \"get\",token);\r\n\r\n  const history = useHistory();\r\n\r\n  function novaAula() {\r\n    history.push(\"/cadastroaula\");\r\n  }\r\n\r\n  function editarAula(id) {\r\n    history.push(`/cadastroAula/${id}`);\r\n  }\r\n\r\n  \r\n  function showAulas(aulas) {\r\n    return aulas.map((aula) => (\r\n      <tr onClick={() => editarAula(aula.id)}>\r\n        <td>{aula.id}</td>  \r\n        <td>{aula.dia}</td>\r\n        <td>{aula.horaInicio}</td>\r\n        <td>{aula.horaFim}</td>\r\n        <td>{aula.vagas}</td>       \r\n      </tr>\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <div className=\"lista-aulas\">\r\n      <h1>Aulas</h1>\r\n      <div className=\"btn-novo\">\r\n          <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                onClick={novaAula}\r\n                className=\"btn-novo\"                \r\n              >\r\n                Nova Aula\r\n              </Button>\r\n          </div>\r\n      <table id=\"aulas\">\r\n        <tbody>\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>Dia</th>\r\n            <th>Hora Inicio</th>\r\n            <th>Hora Fim</th>\r\n            <th>Vagas</th>           \r\n          </tr>\r\n          {response.data ? showAulas(response.data) : false}\r\n          {console.log(response.data)}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Aulas;\r\n","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Aula\\CadastroAula.jsx",["500","501","502","503","504","505","506","507","508","509","510","511"],"import React, { useContext, useState, useEffect } from 'react'\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport { Button, \r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Dialog,\r\n  Tooltip, } from \"@material-ui/core\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport { useFetch } from '../../hooks/useFetch';\r\nimport { useHistory } from \"react-router\";\r\nimport { horarioMask, onlyNumbersMax5 } from '../../utils/mask';\r\nimport { url } from \"../../../src/variaveis\";\r\n\r\nfunction CadastroAula(){\r\n    const { token, userLogged } = useContext(StoreContext);      \r\n    const history = useHistory();\r\n    const [open, setOpen] = useState(false);\r\n    //montar URL para editar aula\r\n    var editando = false;\r\n    var editarAulaUrl = \"\";    \r\n    const editarAulaId = window.location.pathname.split(\"/\");\r\n    if (editarAulaId[2] != null){\r\n      editarAulaUrl =  `${ url }/api/aula/${editarAulaId[2]}`;\r\n      editando = true;      \r\n    }\r\n\r\n    const aulaResponse = useFetch(editarAulaUrl,\"get\",token);\r\n    const [loading, setLoading] = useState(true);  \r\n\r\n    const initialValues = {\r\n      Id: 0,\r\n      Dia: \"\",\r\n      HoraInicio: \"\",\r\n      HoraFim: \"\",\r\n      Vagas: \"\",\r\n      EmpresaId: userLogged.empresaId,\r\n  }\r\n\r\n  const alertas = {\r\n    text: \"\",\r\n    title: \"\"\r\n  }\r\n\r\n  const [mensagem, setMensagem] = useState(alertas);\r\n\r\n  const handleClickOpen = () => {      \r\n    if (validadorForm()) {\r\n      handleSubmit();      \r\n    } else {\r\n      console.log(\"form inválido\");\r\n    }\r\n  };\r\n\r\n  const validadorForm = () => {\r\n    if(values.Dia == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar dia da aula\" });\r\n      setOpen(true);      \r\n    } else if(values.HoraInicio == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar horário de inicio\" });\r\n      setOpen(true);      \r\n    } else if(values.HoraFim == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar horário de fim\" });\r\n      setOpen(true);      \r\n    } else if(values.Vagas == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar quantidade de vagas\" });\r\n      setOpen(true);      \r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n    useEffect(\r\n      function(){\r\n        if (aulaResponse.data != null){\r\n          setValues((prevState) => ({\r\n            Id:  aulaResponse.data.id,\r\n            Dia: aulaResponse.data.dia,\r\n            HoraInicio:  aulaResponse.data.horaInicio,\r\n            HoraFim:  aulaResponse.data.horaFim,\r\n            Vagas:  aulaResponse.data.vagas,\r\n            EmpresaId: aulaResponse.data.empresaId,\r\n          }));\r\n        };\r\n      },\r\n      [aulaResponse]\r\n    );\r\n\r\n    const [values,setValues] = useState(initialValues);\r\n    \r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setValues({...values, [name]: e.target.value});\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        alert(\"Sucess: \\n\\n\" + JSON.stringify(values, null, 4));\r\n        console.log(values);\r\n\r\n        const response = fetch(`${ url }/api/aula`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: 'Bearer '+token,\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(values),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((response) => {\r\n          if (response === \"Aula cadastrada\" || response === \"Aula atualizada\") {\r\n            setMensagem({ ...values, title: \"Sucesso!\", text: response })\r\n            setOpen(true);\r\n           } \r\n          else {\r\n            setMensagem({ ...values, title: \"Erro!\", text: \"Erro ao cadastrar aula\" })\r\n            setOpen(true);\r\n          }\r\n        });\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n          <main className={classes.layout}>\r\n            <Paper className={classes.paper}>\r\n              <div className={classes.titulo}>\r\n                <h1>Cadastro de Aula</h1>\r\n              </div>\r\n              <form onSubmit={handleSubmit}>\r\n                  <Grid container spacing={3}>\r\n                      <Grid item xs={12} sm={3}>\r\n                          <TextField \r\n                             id=\"Dia\"\r\n                             name=\"Dia\"\r\n                             label=\"Dia da Semana\"                             \r\n                             onChange={handleChange}\r\n                             value={values.Dia}\r\n                          />\r\n                      </Grid>\r\n                      <Grid item xs={3}>\r\n                          <TextField \r\n                             id=\"HoraInicio\"\r\n                             name=\"HoraInicio\"\r\n                             label=\"Hora Inicio\"                             \r\n                             onChange={(e) => {handleChange(horarioMask(e))}}\r\n                             value={values.HoraInicio}\r\n                          />\r\n                      </Grid>\r\n                      <Grid item xs={3}>\r\n                          <TextField \r\n                             id=\"HoraFim\"\r\n                             name=\"HoraFim\"\r\n                             label=\"Hora Fim\"                             \r\n                             onChange={(e) => {handleChange(horarioMask(e))}}\r\n                             value={values.HoraFim}\r\n                          />\r\n                      </Grid>\r\n                      <Grid item xs={3}>\r\n                          <TextField \r\n                             id=\"Vagas\"\r\n                             name=\"Vagas\"\r\n                             label=\"Qtd. Vagas\"                             \r\n                             onChange={(e) => {handleChange(onlyNumbersMax5(e))}}\r\n                             value={values.Vagas}\r\n                          />\r\n                      </Grid>\r\n                  </Grid>\r\n                  <div className={classes.buttons}>\r\n              {editando\r\n              ? false\r\n              : <Button\r\n              variant=\"contained\"\r\n              color=\"inherit\"\r\n              className={classes.button}\r\n            >\r\n              Limpar\r\n            </Button>}\r\n             \r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n                className={classes.button}\r\n              >\r\n                {editando ? \"Atualizar\" : \"Cadastrar\"}\r\n              </Button>\r\n            </div>\r\n              </form>\r\n            </Paper>\r\n            <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{mensagem.title}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {mensagem.text}\r\n            </DialogContentText>\r\n          </DialogContent>          \r\n\r\n          {(mensagem.text == \"Aula cadastrada\" || mensagem.text == \"Aula atualizada\") ?     \r\n            <Button onClick={() => { handleClose(); history.push(\"/aulas\"); }}>Ok</Button>\r\n             : <Button onClick={handleClose}>Ok</Button>} \r\n          \r\n        </Dialog>\r\n          </main>\r\n        </React.Fragment>\r\n      );\r\n\r\n}\r\n\r\nexport default CadastroAula;","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Empresa\\Empresa.jsx",[],"C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Materia\\Materias.jsx",["512"],"import React, { useContext } from \"react\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport \"./Materias.css\"\r\nimport { Button } from \"@material-ui/core\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport { url } from \"../../../src/variaveis\";\r\n\r\nfunction Materias() {\r\n  const { token, userLogged } = useContext(StoreContext);\r\n\r\n  const response = useFetch(`${ url }/api/materiaPorEmpresa/${userLogged.empresaId}`,\"get\",token);\r\n\r\n  const history = useHistory();\r\n\r\n  const classes = useStyles();\r\n\r\n  function novaMateria(){\r\n    history.push(\"/cadastroMateria\")\r\n  }\r\n\r\n  function editarMateria(id){\r\n    history.push(`/cadastroMateria/${id}`)\r\n  }\r\n\r\n  function showMaterias(materias){\r\n    return (\r\n      materias.map((materia) => (\r\n        <tr onClick={() => editarMateria(materia.id)}>\r\n          <td key={materia.id}>{materia.id}</td>      \r\n          <td key={materia.nome}>{materia.nome}</td>          \r\n        </tr>\r\n      ))   \r\n    )\r\n  }\r\n  return (         \r\n        <div className=\"lista-materias\">\r\n          <h1>Matérias</h1>\r\n          <div className=\"btn-novo\">\r\n          <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                onClick={novaMateria}\r\n                className=\"btn-novo\"                \r\n              >\r\n                Nova Matéria\r\n              </Button>\r\n          </div>\r\n         \r\n          <table id=\"materias\">\r\n            <tbody>\r\n              <tr>\r\n                <th>Id</th>                              \r\n                <th>Nome</th>   \r\n              </tr>\r\n              {response.data ? showMaterias(response.data) : false}             \r\n            </tbody>\r\n          </table>\r\n        </div>     \r\n    \r\n  );\r\n}\r\n\r\nexport default Materias;\r\n","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Empresa\\CadastroEmpresa.jsx",["513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { url } from \"../../../src/variaveis\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Select,\r\n  Divider,\r\n  Switch,\r\n  FormLabel,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Dialog,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { MenuItem } from \"@material-ui/core\";\r\nimport { format } from \"date-fns\";\r\nimport { useHistory } from \"react-router\";\r\nimport { cepMask, cpfMask, currencyMask, onlyLetters, onlyNumbersMax5, phoneMask } from \"../../utils/mask\";\r\n\r\n\r\n\r\nfunction CadastroEmpresa() {\r\n  const { token } = useContext(StoreContext);\r\n  var editando = false;\r\n  var editarEmpresaUrl = \"\";\r\n  const editarEmpresaId = window.location.pathname.split(\"/\");\r\n  if (editarEmpresaId[2] != null) {\r\n    editarEmpresaUrl = `${ url }/api/empresa/${editarEmpresaId[2]}`;\r\n    editando = true;\r\n  }\r\n\r\n  const empresaResponse = useFetch(editarEmpresaUrl,\"get\",token);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const history = useHistory();\r\n\r\n  const person = { Nome: \"\", Telefone: \"\" };\r\n  const [disableFields, setDisable] = useState(false);\r\n\r\n  const initialValues = {\r\n    Id: 0,\r\n    TipoEmpresa: \"\",\r\n    UsarDados: false,\r\n    CNPJ_CPF: \"\",\r\n    RazaoSocial: \"\",\r\n    Telefone: \"\",\r\n    Endereco: {\r\n      Logradouro: \"\",\r\n      Numero: \"\",\r\n      Complemento: \"\",\r\n      Bairro: \"\",\r\n      Cidade: \"\",\r\n      Estado: \"\",\r\n      CEP: \"\",\r\n    },\r\n    Pessoa: {\r\n        Nome: \"\",\r\n        CPF: \"\",\r\n        DataNascimento: \"\",\r\n        Email: \"\",\r\n        Telefone: \"\",        \r\n    },\r\n  };\r\n\r\n  const [values, setValues] = useState(initialValues);\r\n  const alertas = {\r\n    text: \"\",\r\n    title: \"\"\r\n  }\r\n\r\n  const [mensagem, setMensagem] = useState(alertas);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {      \r\n    if (validadorForm()) {\r\n      handleSubmit();      \r\n    } else {\r\n      console.log(\"form inválido\");\r\n    }\r\n  };\r\n\r\n  const validadorForm = () => {\r\n    console.log(values);\r\n    if(values.TipoEmpresa == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o tipo da empresa\" });\r\n      setOpen(true);      \r\n    } else if(values.RazaoSocial == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar nome da empresa\" });\r\n      setOpen(true);  \r\n    } else if(values.CNPJ_CPF == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar CNPJ ou CPF da empresa\" });\r\n      setOpen(true);  \r\n    } else if(values.Telefone == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o nº de telefone da empresa\" });\r\n      setOpen(true); \r\n    } else if(values.Endereco.Logradouro == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o logradouro do endereço\" });\r\n      setOpen(true); \r\n    } else if(values.Endereco.Numero == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o número do endereço\" });\r\n      setOpen(true); \r\n    } else if(values.Endereco.Cidade == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar a cidade do endereço\" });\r\n      setOpen(true); \r\n    } else if(values.Endereco.Bairro == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o bairro do endereço\" });\r\n      setOpen(true); \r\n    } else if(values.Endereco.Estado == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o estado do endereço\" });\r\n      setOpen(true); \r\n    } else if(values.Endereco.CEP == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o CEP do endereço\" });\r\n      setOpen(true); \r\n    } else if(values.Pessoa.Nome == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o nome da pessoa\" });\r\n      setOpen(true); \r\n    } else if(values.Pessoa.CPF == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o CPF da pessoa\" });\r\n      setOpen(true); \r\n    } else if(values.Pessoa.DataNascimento == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar a data de nascimento da pessoa\" });\r\n      setOpen(true); \r\n    } else if(values.Pessoa.Email == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o e-mail da pessoa\" });\r\n      setOpen(true); \r\n    } else if(values.Pessoa.Telefone == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o telefone da pessoa\" });\r\n      setOpen(true); \r\n    }\r\n    else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  //atualizar campos do form quando é para editar empresa  \r\n  useEffect(\r\n    function () {\r\n      console.log(empresaResponse.data);\r\n      if (empresaResponse.data != null) {\r\n        setValues((prevState) => ({\r\n          Id: empresaResponse.data.id,\r\n          TipoEmpresa: empresaResponse.data.cnpJ_CPF.length < 12 ? \"1\" : \"2\",\r\n          CNPJ_CPF: empresaResponse.data.cnpJ_CPF,\r\n          RazaoSocial: empresaResponse.data.razaoSocial,\r\n          Telefone: empresaResponse.data.telefone,\r\n          Endereco: {\r\n            Id: empresaResponse.data.endereco.id,\r\n            Logradouro: empresaResponse.data.endereco.logradouro,\r\n            Numero: empresaResponse.data.endereco.numero,\r\n            Complemento: empresaResponse.data.endereco.complemento,\r\n            Bairro: empresaResponse.data.endereco.bairro,\r\n            Cidade: empresaResponse.data.endereco.cidade,\r\n            Estado: empresaResponse.data.endereco.estado,\r\n            CEP: empresaResponse.data.endereco.cep,\r\n          },\r\n          Pessoa: {\r\n            Nome: empresaResponse.data.pessoas[0].nome,\r\n            CPF: empresaResponse.data.pessoas[0].cpf,\r\n            Email: empresaResponse.data.pessoas[0].email,\r\n            DataNascimento: format(\r\n              new Date(empresaResponse.data.pessoas[0].dataNascimento),\r\n              \"yyyy-MM-dd\"\r\n            ),\r\n            Telefone: empresaResponse.data.pessoas[0].telefone,\r\n          },\r\n        }));\r\n        setDisable(true);\r\n      }\r\n    },\r\n    [empresaResponse]\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: e.target.value });\r\n    console.log({ name, value });\r\n  };\r\n\r\n  const handlePessoa = (e) => {\r\n    const { name, value } = e.target;\r\n    const Endereco = { ...values.Endereco };\r\n    const Pessoa = { ...values.Pessoa };\r\n    console.log(Pessoa);\r\n\r\n    if (name == \"Logradouro\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Logradouro\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"Numero\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Numero\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"Complemento\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Complemento\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"Bairro\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Bairro\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"Cidade\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Cidade\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"Estado\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Estado\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"CEP\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"CEP\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"CPF\") {\r\n      Object.keys(Pessoa).forEach((key) => {\r\n        if (key === \"CPF\") Pessoa[key] = value;\r\n      }); \r\n    } else if (name == \"Nome\") {\r\n      Object.keys(Pessoa).forEach((key) => {\r\n        if (key === \"Nome\") Pessoa[key] = value;\r\n      }); \r\n    } else if (name == \"Email\") {\r\n      Object.keys(Pessoa).forEach((key) => {\r\n        if (key === \"Email\") Pessoa[key] = value;\r\n      }); \r\n    } else if (name == \"Telefone\") {\r\n      Object.keys(Pessoa).forEach((key) => {\r\n        if (key === \"Telefone\") Pessoa[key] = value;\r\n      }); \r\n    } else if (name == \"DataNascimento\") {\r\n      Object.keys(Pessoa).forEach((key) => {\r\n        if (key === \"DataNascimento\") Pessoa[key] = value;\r\n      }); \r\n    }    \r\n    setValues({ ...values, Endereco, Pessoa});\r\n  };\r\n\r\n  const funcUsarDadosEmpresa = (e) => {\r\n    const { name, checked } = e.target;\r\n    const newPessoa = values;\r\n    \r\n    newPessoa.Pessoa = {\r\n      Nome: values.RazaoSocial,\r\n      CPF: values.CNPJ_CPF,\r\n      Telefone: values.Telefone,    \r\n    };\r\n    setValues({...values, Pessoa: newPessoa});\r\n\r\n    setValues({ ...values, [name]: e.target.checked });\r\n    console.log(\r\n      \"handleCheckChange \" +\r\n        \">>name: \" +\r\n        e.target.name +\r\n        \" >>value: \" +\r\n        e.target.value +\r\n        \" >>checked: \" +\r\n        e.target.checked\r\n    );\r\n    console.log(values);\r\n  };\r\n\r\n  function handleSubmit(e) {\r\n    console.log(editarEmpresaUrl);\r\n    //limpar pessoa/usuario da empresa\r\n    if (values.Id != 0) {\r\n      const valuesToSubmit = values;\r\n      //valuesToSubmit.Pessoa = [];\r\n      setValues({ ...values, valuesToSubmit });\r\n    }\r\n\r\n    alert(\"Sucess: \\n\\n\" + JSON.stringify(values, null, 4));\r\n    console.log(values);\r\n\r\n    const response = fetch(`${ url }/api/empresa/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: 'Bearer '+token,\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(values),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (response === \"Empresa cadastrada com sucesso\" || response === \"Empresa atualizada\") {\r\n          setMensagem({ ...values, title: \"Sucesso!\", text: response })\r\n          setOpen(true);\r\n         } \r\n        else {\r\n          setMensagem({ ...values, title: \"Erro!\", text: \"Erro ao cadastrar empresa\" })\r\n          setOpen(true);\r\n        }\r\n      });\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <div className={classes.titulo}>\r\n            <h1>Cadastro de Empresa</h1>\r\n          </div>\r\n          <form>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"TipoEmpresa\"\r\n                  name=\"TipoEmpresa\"\r\n                  label=\"Tipo\"\r\n                  select\r\n                  fullWidth\r\n                  value={values.TipoEmpresa}\r\n                  onChange={handleChange}\r\n                >\r\n                  <MenuItem value=\"1\">Física</MenuItem>\r\n                  <MenuItem value=\"2\">Jurídica</MenuItem>\r\n                </TextField>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"RazaoSocial\"\r\n                  name=\"RazaoSocial\"\r\n                  label=\"Nome\"\r\n                  fullWidth\r\n                  onChange={handleChange}\r\n                  value={values.RazaoSocial}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"CNPJ_CPF\"\r\n                  name=\"CNPJ_CPF\"\r\n                  label={\r\n                    values.TipoEmpresa == \"1\"\r\n                      ? \"CPF\"\r\n                      : values.TipoEmpresa == \"2\"\r\n                      ? \"CNPJ\"\r\n                      : \"CNPJ OU CPF\"\r\n                  }\r\n                  fullWidth\r\n                  onChange={(e) => {handleChange(cpfMask(e))}}\r\n                  value={values.CNPJ_CPF}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"Telefone\"\r\n                  name=\"Telefone\"\r\n                  label=\"Telefone\"\r\n                  fullWidth\r\n                  onChange={(e) => { handleChange(phoneMask(e)) }}\r\n                  value={values.Telefone}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"Endereco.Logradouro\"\r\n                  name=\"Logradouro\"\r\n                  onChange={handlePessoa}\r\n                  value={values.Endereco.Logradouro}\r\n                  label=\"Logradouro\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={1}>\r\n                <TextField\r\n                  id=\"Endereco.Numero\"\r\n                  name=\"Numero\"\r\n                  label=\"Nº\"\r\n                  onChange={(e) => { handlePessoa(onlyNumbersMax5(e)) }}\r\n                  value={values.Endereco.Numero}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={3}>\r\n                <TextField\r\n                  id=\"Endereco.Complemento\"\r\n                  name=\"Complemento\"\r\n                  label=\"Complemento\"\r\n                  onChange={handlePessoa}\r\n                  value={values.Endereco.Complemento}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Endereco.Cidade\"\r\n                  name=\"Cidade\"\r\n                  label=\"Cidade\"\r\n                  onChange={handlePessoa}\r\n                  value={values.Endereco.Cidade}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Endereco.Bairro\"\r\n                  name=\"Bairro\"\r\n                  onChange={handlePessoa}\r\n                  value={values.Endereco.Bairro}\r\n                  label=\"Bairro\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Endereco.Estado\"\r\n                  name=\"Estado\"\r\n                  label=\"Estado\"\r\n                  onChange={handlePessoa}\r\n                  value={values.Endereco.Estado}\r\n                  fullWidth\r\n                  select\r\n                >\r\n                  <MenuItem value=\"AC\">Acre</MenuItem>\r\n                  <MenuItem value=\"AL\">Alagoas</MenuItem>\r\n                  <MenuItem value=\"AP\">Amapá</MenuItem>\r\n                  <MenuItem value=\"AM\">Amazonas</MenuItem>\r\n                  <MenuItem value=\"BA\">Bahia</MenuItem>\r\n                  <MenuItem value=\"CE\">Ceará</MenuItem>\r\n                  <MenuItem value=\"DF\">Distrito Federal</MenuItem>\r\n                  <MenuItem value=\"ES\">Espírito Santo</MenuItem>\r\n                  <MenuItem value=\"GO\">Goiás</MenuItem>\r\n                  <MenuItem value=\"MA\">Maranhão</MenuItem>\r\n                  <MenuItem value=\"MT\">Mato Grosso</MenuItem>\r\n                  <MenuItem value=\"MS\">Mato Grosso do Sul</MenuItem>\r\n                  <MenuItem value=\"MG\">Minas Gerais</MenuItem>\r\n                  <MenuItem value=\"PA\">Pará</MenuItem>\r\n                  <MenuItem value=\"PB\">Paraíba</MenuItem>\r\n                  <MenuItem value=\"PR\">Paraná</MenuItem>\r\n                  <MenuItem value=\"PE\">Pernambuco</MenuItem>\r\n                  <MenuItem value=\"PI\">Piauí</MenuItem>\r\n                  <MenuItem value=\"RJ\">Rio de Janeiro</MenuItem>\r\n                  <MenuItem value=\"RN\">Rio Grande do Norte</MenuItem>\r\n                  <MenuItem value=\"RS\">Rio Grande do Sul</MenuItem>\r\n                  <MenuItem value=\"RO\">Rondônia</MenuItem>\r\n                  <MenuItem value=\"RR\">Roraima</MenuItem>\r\n                  <MenuItem value=\"SC\">Santa Catarina</MenuItem>\r\n                  <MenuItem value=\"SP\">São Paulo</MenuItem>\r\n                  <MenuItem value=\"SE\">Sergipe</MenuItem>\r\n                  <MenuItem value=\"TO\">Tocantins</MenuItem>\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Endereco.CEP\"\r\n                  name=\"CEP\"\r\n                  label=\"CEP\"\r\n                  onChange={(e) => { handlePessoa(cepMask(e)) }}\r\n                  value={values.Endereco.CEP}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <br></br>\r\n                <div className={classes.subtitulo}>\r\n                  <h4>Dados Usuário</h4>\r\n                  <Divider />\r\n                </div>\r\n                <Grid item xs={12} sm={4}>\r\n                  <FormLabel>Usar dados da empresa?</FormLabel>\r\n\r\n                  <Switch\r\n                    color=\"primary\"\r\n                    name=\"UsarDados\"\r\n                    value={values.UsarDados}\r\n                    checked={values.UsarDados}\r\n                    disabled={disableFields}\r\n                    onChange={funcUsarDadosEmpresa}\r\n                    inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"Pessoa.Nome\"\r\n                  name=\"Nome\"\r\n                  label=\"Nome\"\r\n                  fullWidth\r\n                  disabled={disableFields}\r\n                  onChange={(e) => { handlePessoa(onlyLetters(e)) }}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={\r\n                    values.UsarDados ? values.RazaoSocial : values.Pessoa.Nome\r\n                  }\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"Pessoa.CPF\"\r\n                  name=\"CPF\"\r\n                  label=\"CPF\"\r\n                  fullWidth\r\n                  disabled={disableFields}\r\n                  onChange={(e) => { handlePessoa(cpfMask(e)) }}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={\r\n                    values.UsarDados ? values.CNPJ_CPF : values.Pessoa.CPF\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={3}>\r\n                <TextField\r\n                  id=\"Pessoa.DataNascimento\"\r\n                  name=\"DataNascimento\"\r\n                  label=\"Data Nascimento\"\r\n                  type=\"date\"\r\n                  onChange={handlePessoa}\r\n                  disabled={disableFields}\r\n                  value={values.Pessoa.DataNascimento}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"Pessoa.Email\"\r\n                  name=\"Email\"\r\n                  label=\"E-mail\"\r\n                  disabled={disableFields}\r\n                  fullWidth\r\n                  onChange={handlePessoa}\r\n                  value={values.Pessoa.Email}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Pessoa.Telefone\"\r\n                  name=\"Telefone\"\r\n                  label=\"Telefone\"\r\n                  disabled={disableFields}\r\n                  fullWidth\r\n                  onChange={(e) => { handlePessoa(phoneMask(e)) }}\r\n                  value={\r\n                    values.UsarDados ? values.Telefone : values.Pessoa.Telefone\r\n                  }\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <div className={classes.buttons}>\r\n              {editando\r\n              ? false\r\n              : <Button\r\n              variant=\"contained\"\r\n              color=\"inherit\"\r\n              className={classes.button}\r\n            >\r\n              Limpar\r\n            </Button>}\r\n             \r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n                className={classes.button}\r\n              >\r\n                {editando ? \"Atualizar\" : \"Cadastrar\"}\r\n              </Button>\r\n            </div>\r\n          </form>\r\n          <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{mensagem.title}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {mensagem.text}\r\n            </DialogContentText>\r\n          </DialogContent>          \r\n\r\n          {(mensagem.text == \"Empresa cadastrada com sucesso\" || mensagem.text == \"Empresa atualizada\") ?     \r\n            <Button onClick={() => { handleClose(); history.push(\"/empresas\"); }}>Ok</Button>\r\n             : <Button onClick={handleClose}>Ok</Button>} \r\n          \r\n        </Dialog>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CadastroEmpresa;\r\n","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Financeiro\\CadastroFinanceiro.jsx",["554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  MenuItem,\r\n  Switch,\r\n  FormLabel,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Dialog,\r\n  Tooltip,\r\n  Collapse,\r\n  InputAdornment    \r\n} from \"@material-ui/core\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useHistory } from \"react-router\";\r\nimport et from \"date-fns/esm/locale/et/index.js\";\r\nimport { parseJSON } from \"date-fns\";\r\nimport { format } from \"date-fns\";\r\nimport { currencyMask, onlyLetters } from \"../../utils/mask\";\r\nimport { setDayOfYear } from \"date-fns/esm\";\r\nimport { url } from \"../../../src/variaveis\";\r\n\r\nfunction CadastroFinanceiro() {\r\n  const classes = useStyles();\r\n  var CurrencyFormat = require(\"react-currency-format\");\r\n  const { token, userLogged } = useContext(StoreContext);\r\n\r\n  const urlAlunos = `${ url }/api/alunoPorEmpresa/${userLogged.empresaId}`;\r\n \r\n  \r\n  const responseAluno = useFetch(urlAlunos,\"get\",token);\r\n  const [todos, setTodos] = useState(false);\r\n  const [loading,setLoading] = useState(false);\r\n  const [tipoReceber, setTipoDoc] = useState(true);\r\n  const history = useHistory();\r\n\r\n  const editarFinanceiro = window.location.pathname.split(\"/\");\r\n  var editarFinanceiroUrl = \"\";\r\n  var editando = false;\r\n  if (editarFinanceiro[2] != null) {\r\n    editarFinanceiroUrl = `${ url }/api/cadastroFinanceiro/${editarFinanceiro[2]}`;\r\n    editando = true;\r\n  }\r\n  const responseEditarFinanceiro = useFetch(editarFinanceiroUrl,\"get\",token);\r\n\r\n  const initialValues = {\r\n    Id: 0,\r\n    AlunoId: 0,\r\n    AlunoNome: \"\",\r\n    PessoaNome: \"\",\r\n    DataVencimento: \"\",\r\n    qtdProvisionar: 0,\r\n    Valor: \"\",\r\n    FormaPagamento: \"\",\r\n    Situacao: 1,\r\n    EmpresaId: userLogged.empresaId,\r\n    todosAlunos: false,\r\n    Tipo: \"\",\r\n  };\r\n\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  const alertas = {\r\n    text: \"\",\r\n    title: \"\"\r\n  }\r\n\r\n  const [mensagem, setMensagem] = useState(alertas);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const validadorForm = () => {\r\n    if (values.AlunoNome == \"\" && values.PessoaNome == \"\" && todos == false) {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário selecionar um aluno ou informar uma pessoa\" });\r\n      setOpen(true);\r\n    } else if (values.Valor == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar valor\" });\r\n      setOpen(true);\r\n    } else if (values.FormaPagamento == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar valor\" });\r\n      setOpen(true);\r\n    } else if (values.DataVencimento == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar data de vencimento\" });\r\n      setOpen(true);\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  const getDialogActions = (e) => {       \r\n    if (e === \"Atenção!\"){\r\n      return (\r\n        <DialogActions>\r\n              <Button onClick={() =>{ setTodos(false); handleClose()}}>Não</Button>\r\n              <Button onClick={handleClose} autoFocus>Sim</Button>\r\n            </DialogActions>\r\n      )\r\n    } \r\n    else if(e === \"Sucesso!\") {\r\n      return (\r\n        <DialogActions>\r\n      <Button onClick={() => { handleClose(); history.push(\"/financeiros\"); }}>Ok</Button>\r\n      </DialogActions>\r\n      )\r\n      \r\n    } else {\r\n      return (\r\n          <DialogActions>\r\n          <Button onClick={handleClose}>Ok</Button>\r\n      </DialogActions>\r\n      )    \r\n    }\r\n  }\r\n\r\n  useEffect(\r\n    function () {\r\n      if (todos) {\r\n        setValues({ ...values, AlunoNome: \"\", qtdProvisionar: 0, todosAlunos: true })\r\n      }\r\n      if (!todos) {\r\n        setValues({ ...values, todosAlunos: false })\r\n      }\r\n    },\r\n    [todos]\r\n  )\r\n\r\n  useEffect(\r\n    function () {\r\n      console.log(responseEditarFinanceiro.data);\r\n      if (responseEditarFinanceiro.data != null) {\r\n        setValues((prevState) => ({\r\n          Id: responseEditarFinanceiro.data.id,\r\n          AlunoId: responseEditarFinanceiro.data.alunoId,\r\n          AlunoNome: responseEditarFinanceiro.data.nomeAluno,\r\n          PessoaNome: responseEditarFinanceiro.data.pessoaNome,\r\n          DataVencimento: format(\r\n            new Date(responseEditarFinanceiro.data.dataVencimento),\r\n            \"yyyy-MM-dd\"\r\n          ),\r\n          Valor: responseEditarFinanceiro.data.valor,\r\n          FormaPagamento: responseEditarFinanceiro.data.formaPagamento,\r\n          Situacao: responseEditarFinanceiro.data.situacao,\r\n          todosAlunos: false,\r\n          Tipo: responseEditarFinanceiro.data.tipo,\r\n          EmpresaId: responseEditarFinanceiro.data.empresaId,\r\n        }));\r\n      }\r\n    },\r\n    [responseEditarFinanceiro]\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    console.log(e.target);\r\n    const { name, value } = e.target;\r\n    if (name == \"AlunoNome\") {\r\n      setValues({ ...values, [name]: e.target.value, AlunoId: e.target.value })\r\n    } else if (name == \"Tipo\" && value != 1) {\r\n      setTipoDoc(false);\r\n      setValues({ ...values, [name]: e.target.value });\r\n    } else if (name == \"Tipo\" && value != 2) {\r\n      setTipoDoc(true);\r\n      setValues({ ...values, [name]: e.target.value });\r\n    }\r\n    else {\r\n      setValues({ ...values, [name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  const handleCheckChange = () => {\r\n    setTodos(!todos);\r\n    if (!todos) {\r\n      setTodos(!todos);\r\n      setValues({ ...values, AlunoId: 0, AlunoNome: \"\" });\r\n      setMensagem({ ...values, title: \"Atenção!\", text: \"Essa ação irá gerar um CRE (contas a receber) para cada aluno. Deseja continuar?\" })\r\n      setOpen(true);\r\n    } else {\r\n      setTodos(!todos);\r\n    }\r\n\r\n  };\r\n\r\n  function showAlunos(alunos) {\r\n    console.log(responseAluno.data);\r\n    return responseAluno.data.map((aluno) => (\r\n      <MenuItem value={aluno.id}>{aluno.nome}</MenuItem>\r\n    ));\r\n  }\r\n\r\n  const handleClickOpen = () => {\r\n    if (validadorForm()) {\r\n      handleSubmit();\r\n    } else {\r\n      console.log(\"form inválido\");\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleSubmit(e) {  \r\n    setLoading(true);  \r\n    \r\n    const response = fetch(`${ url }/api/financeiro/cadastrar`, {\r\n      Authorization: 'Bearer '+token,    \r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(values),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (response != null && response.errors == null) {\r\n          setMensagem({ ...values, title: \"Sucesso!\", text: response })\r\n          setOpen(true);          \r\n        } else {\r\n          setMensagem({ ...values, title: \"Erro!\", text: \"Erro ao gerar documento(s)\" })\r\n          setOpen(true);\r\n        }\r\n      })\r\n      .then(() => {\r\n        setLoading(false);\r\n      })\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <div className={classes.titulo}>\r\n            <h1>Cadastro de Financeiro</h1>\r\n          </div>\r\n          <form onSubmit={handleSubmit}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={3}>\r\n                <TextField\r\n                  id=\"Tipo\"\r\n                  name=\"Tipo\"\r\n                  label=\"Tipo\"\r\n                  onChange={handleChange}\r\n                  value={values.Tipo}\r\n                  fullWidth\r\n                  select\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                >\r\n                  <MenuItem value=\"1\">Receber</MenuItem>\r\n                  <MenuItem value=\"2\">Pagar</MenuItem>\r\n\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12} sm={3}>\r\n                <Collapse in={tipoReceber ? true : false}>\r\n                  <TextField\r\n                    id=\"AlunoNome\"\r\n                    name=\"AlunoNome\"\r\n                    label=\"Aluno\"\r\n                    onChange={handleChange}\r\n                    value={values.AlunoId}\r\n                    inputProps={{\r\n                      \"data-id\": `${values.AlunoId}`,\r\n                    }}\r\n                    disabled={todos ? true : false}\r\n                    fullWidth\r\n                    select                    \r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  >\r\n                    {responseAluno.data ? showAlunos(responseAluno.data) : false}\r\n                  </TextField>\r\n                </Collapse>\r\n                <Collapse in={tipoReceber ? false : true}>\r\n                  <TextField\r\n                    id=\"PessoaNome\"\r\n                    name=\"PessoaNome\"\r\n                    label=\"Pessoa\"\r\n                    onChange={(e) => handleChange(onlyLetters(e))}\r\n                    value={values.PessoaNome}\r\n                    fullWidth\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  >\r\n                  </TextField>\r\n                </Collapse>\r\n\r\n              </Grid>\r\n              {(editando)\r\n                ? false\r\n                : <Grid item xs={12} sm={2}>\r\n                  <FormLabel>Todos</FormLabel>\r\n                  <Switch\r\n                    color=\"primary\"\r\n                    name=\"todos\"\r\n                    value={todos}\r\n                    checked={todos}\r\n                    disabled={values.Tipo == 2 ? true : false}\r\n                    onChange={handleCheckChange}\r\n                    inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>}\r\n\r\n              <Grid item xs={3}>\r\n                <TextField\r\n                  id=\"DataVencimento\"\r\n                  name=\"DataVencimento\"\r\n                  type=\"date\"\r\n                  label=\"Vencimento\"\r\n                  value={values.DataVencimento}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={3}>\r\n                <TextField\r\n                  id=\"Valor\"\r\n                  name=\"Valor\"\r\n                  label=\"Valor\"\r\n                  value={values.Valor}\r\n                  onChange={(e) => handleChange(currencyMask(e))}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                    startAdornment: <InputAdornment position=\"start\">R$</InputAdornment>,\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <TextField\r\n                  id=\"FormaPagamento\"\r\n                  name=\"FormaPagamento\"\r\n                  label=\"Forma de Pagamento\"\r\n                  value={values.FormaPagamento}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  select\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                >\r\n                  <MenuItem value=\"boleto\">Boleto</MenuItem>\r\n                  <MenuItem value=\"pix\">PIX</MenuItem>\r\n                  <MenuItem value=\"dinheiro\">Dinheiro</MenuItem>\r\n                  <MenuItem value=\"cartão\">Cartão</MenuItem>\r\n                </TextField>\r\n              </Grid>\r\n              {(editando)\r\n                ? false\r\n                : <Grid item xs={2}>\r\n                  <Tooltip\r\n                    title=\"Não pode ser usado para todos alunos\"\r\n                    placement=\"top-end\"\r\n                  >\r\n                    <TextField\r\n                      id=\"qtdProvisionar\"\r\n                      name=\"qtdProvisionar\"\r\n                      label=\"Provisionar\"\r\n                      onChange={handleChange}\r\n                      value={values.qtdProvisionar}\r\n                      fullWidth\r\n                      disabled={todos ? true : false}\r\n                      select\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                    >\r\n                      <MenuItem selected value=\"0\">0</MenuItem>\r\n                      <MenuItem value=\"1\">1</MenuItem>\r\n                      <MenuItem value=\"2\">2</MenuItem>\r\n                      <MenuItem value=\"3\">3</MenuItem>\r\n                      <MenuItem value=\"4\">4</MenuItem>\r\n                      <MenuItem value=\"5\">5</MenuItem>\r\n                      <MenuItem value=\"6\">6</MenuItem>\r\n                      <MenuItem value=\"7\">7</MenuItem>\r\n                      <MenuItem value=\"8\">8</MenuItem>\r\n                      <MenuItem value=\"9\">9</MenuItem>\r\n                      <MenuItem value=\"10\">10</MenuItem>\r\n                      <MenuItem value=\"11\">11</MenuItem>\r\n                      <MenuItem value=\"12\">12</MenuItem>\r\n                    </TextField>\r\n                  </Tooltip>\r\n                </Grid>}\r\n            </Grid>\r\n            <div className={classes.buttons}>\r\n              {editando\r\n                ? false\r\n                : <Button\r\n                  variant=\"contained\"\r\n                  color=\"inherit\"\r\n                  className={classes.button}\r\n                >\r\n                  Limpar\r\n                </Button>}\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n                className={classes.button}\r\n                disabled={loading}\r\n              >\r\n                {editando ? \"Atualizar\" : \"Cadastrar\"}\r\n              </Button>\r\n            </div>\r\n          </form>\r\n          \r\n        </Paper>\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{mensagem.title}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {mensagem.text}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n            {getDialogActions(mensagem.title)}\r\n        </Dialog>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CadastroFinanceiro;\r\n","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Materia\\CadastroMateria.jsx",["572","573","574","575","576","577","578"],"import { Button, Grid, Paper, TextField,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,  \r\n  Dialog,\r\n  } from \"@material-ui/core\";\r\nimport { url } from \"../../../src/variaveis\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction CadastroMateria() {\r\n  const { token, userLogged } = useContext(StoreContext);  \r\n  const [open, setOpen] = useState(false);\r\n  const history = useHistory();\r\n      //montar URL para editar matéria\r\n      var editando = false;\r\n      var editarMateriaUrl = \"\";    \r\n      const editarMateriaId = window.location.pathname.split(\"/\");\r\n      if (editarMateriaId[2] != null){\r\n        editarMateriaUrl =  `${url}/api/materia/${editarMateriaId[2]}`;  \r\n        editando = true;    \r\n      }\r\n  \r\n      const materiaResponse = useFetch(editarMateriaUrl,\"get\",token);\r\n      const [loading, setLoading] = useState(true);  \r\n\r\n  const initialValues = {\r\n    Id: 0,\r\n    Nome: \"\",\r\n    EmpresaId: userLogged.empresaId,\r\n  };\r\n\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  const alertas = {\r\n    text: \"\",\r\n    title: \"\"\r\n  }\r\n\r\n  const [mensagem, setMensagem] = useState(alertas);\r\n\r\n  const handleClickOpen = () => {      \r\n    if (validadorForm()) {\r\n      handleSubmit();      \r\n    } else {\r\n      console.log(\"form inválido\");\r\n    }\r\n  };\r\n\r\n  const validadorForm = () => {\r\n    if(values.Nome == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar nome da matéria\" });\r\n      setOpen(true);      \r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(\r\n    function(){\r\n      if (materiaResponse.data != null){\r\n        setValues((prevState) => ({\r\n          Id:  materiaResponse.data.id,\r\n          Nome: materiaResponse.data.nome,\r\n          EmpresaId: materiaResponse.data.empresaId,\r\n        }));\r\n      };\r\n    },\r\n    [materiaResponse]\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: e.target.value });\r\n  };\r\n\r\n  function handleSubmit(e) {\r\n    alert(\"Sucess: \\n\\n\" + JSON.stringify(values, null, 4));\r\n    console.log(values);    \r\n\r\n    const response = fetch(`${url}/api/materia/`, {          \r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: 'Bearer '+token,\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(values),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (response === \"Matéria cadastrada\" || response === \"Matéria atualizada\") {\r\n          setMensagem({ ...values, title: \"Sucesso!\", text: response })\r\n          setOpen(true);\r\n         } \r\n        else {\r\n          setMensagem({ ...values, title: \"Erro!\", text: \"Erro ao cadastrar matéria\" })\r\n          setOpen(true);\r\n        }\r\n      });\r\n  }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <div className={classes.titulo}>\r\n            <h1>Cadastro de Matéria</h1>\r\n          </div>\r\n          <form >\r\n              <Grid container spacing={3}>\r\n                  <Grid item xs={12}>\r\n                      <TextField \r\n                         id=\"Nome\"\r\n                         name=\"Nome\"\r\n                         label=\"Nome\"\r\n                         fullWidth\r\n                         onChange={handleChange}\r\n                         value={values.Nome}\r\n                      />\r\n                  </Grid>\r\n              </Grid>\r\n              <div className={classes.buttons}>\r\n              {editando\r\n              ? false\r\n              : <Button\r\n              variant=\"contained\"\r\n              color=\"inherit\"\r\n              className={classes.button}\r\n            >\r\n              Limpar\r\n            </Button>}\r\n             \r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n                className={classes.button}\r\n              >\r\n                {editando ? \"Atualizar\" : \"Cadastrar\"}\r\n              </Button>\r\n            </div>\r\n          </form>        \r\n        </Paper>\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{mensagem.title}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {mensagem.text}\r\n            </DialogContentText>\r\n          </DialogContent>          \r\n\r\n          {(mensagem.text == \"Matéria cadastrada\" || mensagem.text == \"Matéria atualizada\") ?     \r\n            <Button onClick={() => { handleClose(); history.push(\"/materias\"); }}>Ok</Button>\r\n             : <Button onClick={handleClose}>Ok</Button>} \r\n          \r\n        </Dialog>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CadastroMateria;\r\n","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Financeiro\\Financeiros.jsx",["579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Button, Checkbox, Dialog, DialogContent, DialogContentText, DialogTitle, Grid, MenuItem, TextField, TablePagination, Table } from \"@material-ui/core\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\nimport \"./Financeiros.css\";\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { onlyLetters, currencyMask, currencyMaskList } from \"../../utils/mask\";\r\nimport { url } from \"../../../src/variaveis\";\r\n\r\nconst Financeiros = () => {\r\n  const { token, userLogged } = useContext(StoreContext);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const response = useFetch(`${ url }/api/financeiroPorEmpresa/${userLogged.empresaId}`,\"get\",token);\r\n  const [listaFinanceiros, setListaFinanceiros] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setListaFinanceiros(response.data);    \r\n  }, [response])\r\n\r\n  var CurrencyFormat = require('react-currency-format');\r\n\r\n  const initialValues = {\r\n    Id: 0,\r\n    AlunoId: 0,\r\n    NomeAluno: \"\",\r\n    DataVencimento: \"\",\r\n    Valor: 0,\r\n    FormaPagamento: \"\",\r\n    Situacao: 0,\r\n    EmpresaId: 0,\r\n  }\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  const filtros = {\r\n    VencimentoInicio: \"\",\r\n    VencimentoFim: \"\",\r\n    Pessoa: \"\",\r\n    Tipo: \"\",\r\n    Situacao: \"\",\r\n    EmpresaId: userLogged.empresaId\r\n  }\r\n\r\n  const alertas = {\r\n    text: \"\",\r\n    title: \"\"\r\n  }\r\n\r\n  const [mensagem, setMensagem] = useState(alertas);\r\n\r\n  const handleClickOpen = () => {\r\n    if (validadorForm()) {\r\n      handlePesquisar();\r\n    }\r\n  };\r\n\r\n  const validadorForm = () => {\r\n    if (filtroValues.VencimentoInicio == \"\" && filtroValues.VencimentoFim == \"\" && filtroValues.Pessoa == \"\"\r\n      && filtroValues.Tipo == \"\" && filtroValues.Situacao == \"\") {\r\n      setMensagem({ ...values, title: \"Erro!\", text: \"Informe algum filtro para pesquisar\" })\r\n      setOpen(true);\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [filtroValues, setFiltroValues] = useState(filtros);\r\n  const [itemSelecionado, setItemSelecionado] = useState([]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFiltroValues({ ...filtroValues, [name]: value });\r\n  }\r\n\r\n  const handleCheckChange = (e) => {    \r\n    const { name, checked } = e.target;\r\n\r\n    var itens = [...itemSelecionado]; //matérias que tem atualmente\r\n\r\n    if(checked){\r\n      itens.push(name);      \r\n    }\r\n    else{      \r\n      itens = itens.filter((n) => n != name);\r\n    }\r\n    setItemSelecionado(itens);\r\n  };\r\n  \r\n  function liquidar() {    \r\n    const response = fetch(`${ url }/api/financeiro/liquidar`, {  \r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: 'Bearer  '+token,  \r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(itemSelecionado),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (response != null) {\r\n          setMensagem({ ...values, title: \"Sucesso!\", text: \"Documentos liquidados.\" });\r\n          setOpen(true);\r\n        } else {\r\n          setMensagem({ ...values, title: \"Erro!\", text: \"Não foi possível liquidar os documentos selecionados.\" });\r\n          setOpen(true);\r\n        }\r\n      });\r\n  }\r\n\r\n  const show = () => {\r\n    console.log(listaFinanceiros);\r\n  }\r\n\r\n  function handlePesquisar(e) {\r\n    const response = fetch(`${ url }/api/financeiro/buscar`, {  \r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: 'Bearer  '+token,  \r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(filtroValues),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (response != null) {\r\n          setListaFinanceiros(response);\r\n        } else {\r\n          setMensagem({ ...values, title: \"Erro!\", text: \"Nenhum documento encontrado com o filtro utilizado\" });\r\n          setOpen(true);\r\n        }\r\n      });\r\n  }\r\n\r\n  function editarFinanceiro(id) {\r\n    history.push(`/cadastroFinanceiro/${id}`)\r\n  }\r\n\r\n  function novoFinanceiro() {\r\n    history.push(\"/cadastroFinanceiro\")\r\n  }\r\n\r\n  function showFinanceiros(financeiros) {\r\n    if (financeiros != null) {\r\n      return (\r\n        console.log(financeiros),\r\n        financeiros.map((financeiro) => (\r\n          // <tr onClick={() => editarFinanceiro(financeiro.id)}>\r\n          <tr>\r\n            {financeiro.situacao == 1 ? \r\n            (\r\n              <td id=\"checkbox\">\r\n            \r\n              <Checkbox\r\n              name={financeiro.id}\r\n              onClick={handleCheckChange}\r\n              size=\"small\"\r\n              />\r\n              </td> \r\n            ) : <td></td>}             \r\n            \r\n            <td key={financeiro.id}>{financeiro.id}</td>\r\n            <td key=\"tipo\">{financeiro.tipo === 1 ? \"Receber\" : \"Pagar\"}</td>\r\n            <td key=\"pessoaNome\">{financeiro.pessoaNome}</td>\r\n            <td key=\"formaPagamento\">{financeiro.formaPagamento}</td>\r\n            <td key=\"dataVencimento\">{format(new Date(financeiro.dataVencimento), 'dd/MM/yyy')}</td>\r\n            <td key=\"valor\">{currencyMaskList(parseFloat(financeiro.valor).toFixed(2))}</td>\r\n            <td key=\"situacao\">{financeiro.situacao == 1 ? \"Em aberto\" : \"Liquidado\"}</td>\r\n          </tr>\r\n        ))\r\n      )\r\n    }\r\n    return false\r\n  }\r\n\r\n  return (    \r\n    <div className=\"lista-financeiros\">\r\n      <h1>Financeiro</h1>\r\n\r\n      <div className=\"btn-novo\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={novoFinanceiro}\r\n          className=\"btn-novo\"\r\n        >\r\n          Novo\r\n        </Button>\r\n      </div>\r\n      <div className=\"filtro-financeiros\">\r\n        <Grid container>\r\n          <Grid item xs={12} sm={2}>\r\n            <TextField\r\n              id=\"VencimentoInicio\"\r\n              name=\"VencimentoInicio\"\r\n              type=\"date\"\r\n              label=\"Vencimento Inicio\"\r\n              value={filtroValues.VencimentoInicio}\r\n              onChange={handleChange}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <TextField\r\n              id=\"VencimentoFim\"\r\n              name=\"VencimentoFim\"\r\n              type=\"date\"\r\n              label=\"Vencimento Fim\"\r\n              value={filtroValues.VencimentoFim}\r\n              onChange={handleChange}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <TextField\r\n              id=\"Pessoa\"\r\n              name=\"Pessoa\"\r\n              label=\"Pessoa\"\r\n              value={filtroValues.Pessoa}\r\n              onChange={(e) => (handleChange(onlyLetters(e)))}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            >\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <TextField\r\n              id=\"Tipo\"\r\n              name=\"Tipo\"\r\n              label=\"Tipo\"\r\n              select\r\n              value={filtroValues.Tipo}\r\n              onChange={handleChange}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            >\r\n              <MenuItem value=\"1\">CRE</MenuItem>\r\n              <MenuItem value=\"2\">CPA</MenuItem>\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <TextField\r\n              id=\"Situacao\"\r\n              name=\"Situacao\"\r\n              label=\"Situação\"\r\n              select\r\n              fullWidth\r\n              value={filtroValues.Situacao}\r\n              onChange={handleChange}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            >\r\n              <MenuItem value=\"0\">Todos</MenuItem>\r\n              <MenuItem value=\"1\">Abertos</MenuItem>\r\n              <MenuItem value=\"2\">Liquidados</MenuItem>\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={12} sm={1}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className=\"btn-pesquisar\"\r\n              disableElevation={true}\r\n              size=\"small\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Pesquisar\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n\r\n      <table id=\"financeiros\">\r\n        <tbody>\r\n          <tr>\r\n            <th></th>\r\n            <th>Id</th>\r\n            <th>Tipo</th>\r\n            <th>Pessoa</th>\r\n            <th>FOP</th>\r\n            <th>Vencimento</th>\r\n            <th>Valor</th>\r\n            <th>Situação</th>\r\n          </tr>\r\n          {listaFinanceiros ?\r\n            showFinanceiros(listaFinanceiros)\r\n            : false}\r\n            \r\n        </tbody>  \r\n              \r\n      </table>\r\n      \r\n      \r\n      <div className={`btn-liquidar ${classes.button}`}>              \r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={liquidar}\r\n                className={classes.button}                \r\n              >\r\n                Liquidar\r\n              </Button>\r\n      </div>     \r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{mensagem.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {mensagem.text}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <Button onClick={() => { handleClose(); window.location.reload(); }}>Ok</Button>\r\n      </Dialog>\r\n    </div>   \r\n    \r\n  );\r\n}\r\n\r\nexport default Financeiros;\r\n","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\utils\\storage.js",[],"C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\utils\\mask.jsx",["597"],"import React from \"react\";\r\n\r\nexport const currencyMask = (e) => {\r\n    let value = e.target.value;\r\n    value = value.replace(/\\D/g, \"\");\r\n    value = value.replace(/(\\d)(\\d{2})$/, \"$1,$2\");\r\n    //quando tem . o backend nao está aceitando converter para decimal\r\n    //value = value.replace(/(?=(\\d{3})+(\\D))\\B/g, \".\")\r\n    e.target.value = value;\r\n    return e;\r\n}\r\n\r\nexport const currencyMaskList = (e) => {\r\n    let value = e;    \r\n    value = value.replace('.', \",\");\r\n    value = value.replace(/(?=(\\d{3})+(\\D))\\B/g, \".\") \r\n    e = value;\r\n    return e;\r\n}\r\n\r\nexport const onlyLetters = (e) => {\r\n    e.target.maxLength = 100;\r\n    let value = e.target.value;\r\n    value = value.replace(/[^a-z\\s]+/i, '');       \r\n    e.target.value = value;\r\n    return e;\r\n}\r\n\r\nexport const cpfMask = (e) => {\r\n    e.target.maxLength = 14; \r\n    let value = e.target.value;     \r\n    value = value.replace(/\\D/g, \"\");\r\n    value = value.replace(/(\\d)(\\d{2})$/, \"$1-$2\");\r\n    value = value.replace(/(?=(\\d{3})+(\\D))\\B/g, \".\")\r\n    e.target.value = value;\r\n    return e;\r\n}\r\n\r\nexport const phoneMask = (e) => {\r\n    let value = e.target.value; \r\n    value = value.replace(/\\D/g,\"\");\r\n    value = value.replace(/^0/,\"\");\r\n    if (value.length > 10) {\r\n        // 11+ digits. Format as 5+4.\r\n        value = value.replace(/^(\\d\\d)(\\d{5})(\\d{4}).*/,\"($1) $2-$3\");\r\n    }\r\n    else if (value.length > 5) {\r\n        // 6..10 digits. Format as 4+4\r\n        value = value.replace(/^(\\d\\d)(\\d{4})(\\d{0,4}).*/,\"($1) $2-$3\");\r\n    }\r\n    else if (value.length > 2) {\r\n        // 3..5 digits. Add (0XX..)\r\n        value = value.replace(/^(\\d\\d)(\\d{0,5})/,\"($1) $2\");\r\n    }\r\n    else {\r\n        // 0..2 digits. Just add (0XX\r\n        value = value.replace(/^(\\d*)/, \"($1\");\r\n    }\r\n    e.target.value = value;\r\n    return e;               \r\n    \r\n}\r\n\r\nexport const onlyNumbersMax5 = (e) => {\r\n    e.target.maxLength = 5;\r\n    let value = e.target.value;\r\n    value = value.replace(/\\D/g, \"\"); \r\n    e.target.value = value;\r\n    return e;\r\n}\r\n\r\nexport const onlyNumbersMax2 = (e) => {\r\n    e.target.maxLength = 2;\r\n    let value = e.target.value;\r\n    value = value.replace(/\\D/g, \"\"); \r\n    e.target.value = value;\r\n    return e;\r\n}\r\n\r\nexport const horarioMask = (e) => {\r\n    e.target.maxLength = 5;\r\n    let value = e.target.value;\r\n    value = value.replace(/\\D/g, \"\"); \r\n    value = value.replace(/(\\d)(\\d{2})$/, \"$1:$2\");\r\n    e.target.value = value;\r\n    return e;\r\n}\r\n\r\nexport const cepMask = (e) => {\r\n    e.target.maxLength = 9; \r\n    let value = e.target.value;     \r\n    value = value.replace(/\\D/g, \"\");\r\n    value = value.replace(/(\\d)(\\d{3})$/, \"$1-$2\");    \r\n    e.target.value = value;\r\n    return e;\r\n}\r\n\r\n","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Usuario\\CadastroUsuario.jsx",["598","599","600","601","602","603","604","605","606","607","608"],"import { \r\n    Grid, MenuItem, Paper, TextField, Button,  DialogTitle,\r\n    DialogContent,\r\n    DialogContentText,  \r\n    Dialog,\r\n} from \"@material-ui/core\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport { url } from \"../../../src/variaveis\";\r\n\r\nfunction CadastroUsuario() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const history = useHistory();\r\n    const { token, userLogged } = useContext(StoreContext);\r\n\r\n    var editando = false;\r\n    var editarUsuarioUrl = \"\";\r\n    const editarUsuarioId = window.location.pathname.split(\"/\");\r\n    if (editarUsuarioId[2] != null) {\r\n        editarUsuarioUrl = `${ url }/api/usuarioPorId/${editarUsuarioId[2]}`;\r\n        editando = true;\r\n    }\r\n\r\n    const listaEmpresas = useFetch(`${ url }/api/empresa`,\"get\",token);\r\n    var listaPessoas = \"\";  \r\n\r\n    const initialValues = {\r\n        Id: 0,\r\n        TipoUsuario: \"\",\r\n        EmpresaId: \"\",\r\n        PessoaId: \"\",\r\n        Login: \"\",\r\n        Senha: \"\",\r\n        EmpresaNome: \"\",\r\n        PessoaNome: \"\",\r\n        Ativo: false          \r\n    };\r\n\r\n    const[values,setValues] = useState(initialValues);\r\n    const [responsePessoas,setResponse] = useState({\r\n        data: null,\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => {        \r\n      const responsePessoas = fetch(`${ url }/api/pessoasPorEmpresa/${userLogged.EmpresaId}`, {          \r\n      //const responsePessoas = fetch(`https://localhost:44389/api/pessoasPorEmpresa/${values.EmpresaId}`, {          \r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: 'Bearer '+token,\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        }})\r\n        .then(resp => resp.json())\r\n        .then(json => setResponse({\r\n                data: json,\r\n                loading: false\r\n            }));                              \r\n    }, [values.EmpresaId]);\r\n\r\n    useEffect( () => {\r\n      console.log(responsePessoas.data);\r\n    },[responsePessoas])\r\n\r\n  const responseEditarUsuario = useFetch(editarUsuarioUrl);\r\n    \r\n  useEffect(\r\n    function() {\r\n      if(responseEditarUsuario.data != null){\r\n        setValues((prevState) => ({\r\n          Id: responseEditarUsuario.data.id,\r\n          TipoUsuario: responseEditarUsuario.data.tipoUsuario,\r\n          EmpresaId: responseEditarUsuario.data.empresaId,\r\n          PessoaId: responseEditarUsuario.data.pessoaId,\r\n          Login: responseEditarUsuario.data.login,          \r\n          EmpresaNome: responseEditarUsuario.data.empresaNome,\r\n          PessoaNome: responseEditarUsuario.data.pessoaNome,\r\n          Ativo: responseEditarUsuario.data.ativo, \r\n        }))\r\n      }\r\n    },[responseEditarUsuario]\r\n  );\r\n\r\n    const showPessoas = () => {\r\n        return  responsePessoas.data ? \r\n         (\r\n            responsePessoas.data.map((pessoa) => (\r\n                 <MenuItem value={pessoa.id}>\r\n                     {pessoa.nome}\r\n                </MenuItem>\r\n             ))\r\n         ) : false\r\n     };\r\n\r\n    const showEmpresas = () => {\r\n        console.log(listaEmpresas);\r\n       return  listaEmpresas.data ? \r\n        (\r\n            listaEmpresas.data.map((empresa) => (\r\n                <MenuItem value={empresa.id}>\r\n                    {empresa.razaoSocial}\r\n               </MenuItem>\r\n            ))\r\n        ) : false\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n        setValues({...values, [name]: e.target.value});\r\n        console.log({name, value});\r\n    };\r\n\r\n    const alertas = {\r\n        text: \"\",\r\n        title: \"\"\r\n      }\r\n    const [mensagem, setMensagem] = useState(alertas);\r\n\r\n  const handleClickOpen = () => {      \r\n    if (validadorForm()) {\r\n      handleSubmit();      \r\n    } else {\r\n      console.log(\"form inválido\");\r\n    }\r\n  };\r\n\r\n  const validadorForm = () => {\r\n    if(values.TipoUsuario == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar tipo de usuário\" });\r\n      setOpen(true);      \r\n    } else if (values.EmpresaId == \"\"){\r\n        setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário selecionar empresa do usuário\" });\r\n      setOpen(true);\r\n    } else if (values.PessoaId == \"\"){\r\n        setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário selecionar pessoa do usuário\" });\r\n      setOpen(true);\r\n    } else if (values.Login == \"\"){\r\n        setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar login do usuário\" });\r\n      setOpen(true);\r\n    } else if (values.Senha == \"\"){\r\n        setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar senha do usuário\" });\r\n      setOpen(true);\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleSubmit(e) {\r\n    alert(\"Sucess: \\n\\n\" + JSON.stringify(values, null, 4));\r\n    console.log(values);    \r\n\r\n    const response = fetch(`${ url }/api/usuario/`, {\r\n      //const response = fetch(\"https://localhost:44389/api/usuario/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(values),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (response === \"Usuário cadastrado com sucesso\" || response === \"Usuário atualizada\") {\r\n          setMensagem({ ...values, title: \"Sucesso!\", text: response })\r\n          setOpen(true);\r\n         } \r\n        else {\r\n          setMensagem({ ...values, title: \"Erro!\", text: \"Erro ao cadastrar usuário\" })\r\n          setOpen(true);\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <main className={classes.layout}>\r\n                <Paper className={classes.paper}>\r\n                    <div className={classes.titulo}>\r\n                        <h1>Cadastro de Usuários</h1>\r\n                    </div>\r\n                    <form>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={12} sm={2}>\r\n                                <TextField\r\n                                    id=\"TipoUsuario\"\r\n                                    name=\"TipoUsuario\"\r\n                                    label=\"Tipo\"\r\n                                    select\r\n                                    onChange={handleChange}\r\n                                    fullWidth\r\n                                    value={values.TipoUsuario}\r\n                                >\r\n                                    <MenuItem value=\"1\">Admin</MenuItem>\r\n                                    <MenuItem value=\"2\">Cliente</MenuItem>\r\n                                </TextField>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    id=\"EmpresaId\"\r\n                                    name=\"EmpresaId\"\r\n                                    label=\"Empresa\"\r\n                                    fullWidth\r\n                                    value={values.EmpresaId}\r\n                                    onChange={handleChange}                                    \r\n                                    select                                   \r\n                                >\r\n                                     {listaEmpresas.data ? showEmpresas() : false}\r\n                                    </TextField>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    id=\"PessoaId\"\r\n                                    name=\"PessoaId\"\r\n                                    label=\"Pessoa\"\r\n                                    fullWidth\r\n                                    value={values.PessoaId}\r\n                                    onChange={handleChange}\r\n                                    select                                    \r\n                                >\r\n                                {showPessoas()}\r\n                            \t</TextField>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <TextField\r\n                                    id=\"Login\"\r\n                                    name=\"Login\"\r\n                                    label=\"Login\"\r\n                                    disabled={editando}\r\n                                    fullWidth\r\n                                    value={values.Login}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </Grid>\r\n                            {editando ?\r\n                            \"\"\r\n                            : (\r\n                                <Grid item xs={12} sm={4}>\r\n                                <TextField\r\n                                    id=\"Senha\"\r\n                                    name=\"Senha\"\r\n                                    label=\"Senha\"\r\n                                    type=\"password\"\r\n                                    value={values.Senha}\r\n                                    onChange={handleChange}                                   \r\n                                />\r\n                            </Grid>\r\n                            )}\r\n\r\n                            {editando ?\r\n                            (\r\n                                <Grid item xs={12} sm={4}>\r\n                                <TextField\r\n                                    id=\"Ativo\"\r\n                                    name=\"Ativo\"\r\n                                    label=\"Situação\"                                  \r\n                                    value={values.Ativo}\r\n                                    onChange={handleChange}\r\n                                    select                                   \r\n                                >\r\n                                  <MenuItem value={true}>Ativo</MenuItem>\r\n                                  <MenuItem value={false}>Inativo</MenuItem>\r\n                                </TextField>                               \r\n                            </Grid>\r\n                            )\r\n                          : \"\"}\r\n                           \r\n                        </Grid>\r\n\r\n                        <div className={classes.buttons}>\r\n                            {editando\r\n                                ? false\r\n                                : <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"inherit\"\r\n                                    className={classes.button}\r\n                                >\r\n                                    Limpar\r\n                                </Button>}\r\n\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={handleClickOpen}\r\n                                className={classes.button}\r\n                            >\r\n                                {editando ? \"Atualizar\" : \"Cadastrar\"}\r\n                            </Button>\r\n                        </div>\r\n                    </form>\r\n                </Paper>\r\n                <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{mensagem.title}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {mensagem.text}\r\n            </DialogContentText>\r\n          </DialogContent>          \r\n\r\n          {(mensagem.text == \"Usuário cadastrado com sucesso\" || mensagem.text == \"Usuário atualizado com sucesso\") ?     \r\n            <Button onClick={() => { handleClose(); history.push(\"/usuarios\"); }}>Ok</Button>\r\n             : <Button onClick={handleClose}>Ok</Button>} \r\n          \r\n        </Dialog>\r\n            </main>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default CadastroUsuario;","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Usuario\\Usuarios.jsx",["609","610","611","612","613","614","615","616","617"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Button, Grid, MenuItem, Paper, TextField } from \"@material-ui/core\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\nimport \"./Usuarios.css\";\r\nimport { url } from \"../../../src/variaveis\";\r\n\r\n\r\nconst Usuarios = () => {\r\n  const { token, userLogged } = useContext(StoreContext);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\nconsole.log(token);\r\nconsole.log(userLogged);\r\n\r\n  const response = useFetch(`${ url }/api/usuariosPorEmpresa/${userLogged.empresaId}`,\"get\",token);\r\n  \r\n  const initialValues = {\r\n    TipoUsuario: \"\",\r\n    EmpresaId: \"\",\r\n    PessoaId: \"\",\r\n    Login: \"\",\r\n    Senha: \"\",\r\n    showPassword: false,\r\n  };\r\n\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  function editarUsuario(id) {\r\n    history.push(`/cadastroUsuario/${id}`)\r\n  }\r\n\r\n  function novoUsuario() {\r\n    history.push(\"/cadastroUsuario\")\r\n  }\r\n\r\n  function showUsuarios(usuarios) {\r\n    console.log(usuarios);\r\n    return (\r\n      usuarios.map((usuario) => (\r\n        <tr onClick={() => editarUsuario(usuario.id)}>\r\n          <td key={usuario.id}>{usuario.id}</td>\r\n          <td key={usuario.empresaNome}>{usuario.empresaNome}</td>\r\n          <td key={usuario.pessoaNome}>{usuario.pessoaNome}</td>\r\n          <td key={usuario.login}>{usuario.login}</td>\r\n          <td key={usuario.tipoUsuario}>{usuario.tipoUsuario === 1 ? \"Administrador\" : \"Cliente\"}</td>\r\n          <td key={usuario.ativo}>{usuario.ativo === true ? \"Ativo\" : \"Inativo\"}</td>\r\n        </tr>\r\n      ))\r\n    )\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"lista-usuarios\">\r\n      <h1>Usuários</h1>\r\n\r\n      <div className=\"btn-novo\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={novoUsuario}\r\n          className=\"btn-novo\"\r\n        >\r\n          Novo\r\n        </Button>\r\n      </div>\r\n\r\n\r\n      <table id=\"financeiros\">\r\n        <tbody>\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>Empresa</th>\r\n            <th>Pessoa</th>\r\n            <th>Login</th>\r\n            <th>Tipo</th>\r\n            <th>Status</th>\r\n          </tr>\r\n          {response.data ?\r\n            showUsuarios(response.data)\r\n            : false}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Usuarios;\r\n","C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Home\\Home.jsx",[],"C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Contratos\\CadastroContrato.jsx",["618","619","620"],"C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\variaveis.js",[],"C:\\Users\\User\\source\\repos\\raphaelfogaca\\MeuAlunoFront\\MeuAlunoReact\\src\\views\\Contratos\\Contratos.jsx",["621","622","623","624","625"],"import React, { useContext } from \"react\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Button } from \"@material-ui/core\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport { url } from \"../../../src/variaveis\";\r\nimport CadastroContrato from \"../Contratos/CadastroContrato\";\r\n\r\nfunction Contratos() {\r\n  const { token, userLogged } = useContext(StoreContext);\r\n\r\n  const response = useFetch(`${ url }/api/materiaPorEmpresa/${userLogged.empresaId}`,\"get\",token);\r\n\r\n  const history = useHistory();\r\n\r\n  const classes = useStyles();\r\n\r\n  function novaMateria(){\r\n    history.push(\"/cadastroMateria\")\r\n  }\r\n\r\n  function editarMateria(id){\r\n    history.push(`/cadastroMateria/${id}`)\r\n  }\r\n\r\n  return (         \r\n        <div className=\"lista-materias\">\r\n          <h1>Contrato Modelo</h1>         \r\n          <CadastroContrato />\r\n          \r\n        </div>     \r\n    \r\n  );\r\n}\r\n\r\nexport default Contratos;\r\n",{"ruleId":"626","replacedBy":"627"},{"ruleId":"628","replacedBy":"629"},{"ruleId":"630","severity":1,"message":"631","line":2,"column":8,"nodeType":"632","messageId":"633","endLine":2,"endColumn":12},{"ruleId":"630","severity":1,"message":"634","line":5,"column":8,"nodeType":"632","messageId":"633","endLine":5,"endColumn":16},{"ruleId":"630","severity":1,"message":"635","line":10,"column":5,"nodeType":"632","messageId":"633","endLine":10,"endColumn":9},{"ruleId":"630","severity":1,"message":"636","line":13,"column":8,"nodeType":"632","messageId":"633","endLine":13,"endColumn":13},{"ruleId":"630","severity":1,"message":"637","line":23,"column":10,"nodeType":"632","messageId":"633","endLine":23,"endColumn":15},{"ruleId":"630","severity":1,"message":"638","line":37,"column":11,"nodeType":"632","messageId":"633","endLine":37,"endColumn":19},{"ruleId":"630","severity":1,"message":"639","line":48,"column":25,"nodeType":"632","messageId":"633","endLine":48,"endColumn":30},{"ruleId":"640","severity":1,"message":"641","line":51,"column":10,"nodeType":"642","messageId":"643","endLine":52,"endColumn":32},{"ruleId":"630","severity":1,"message":"644","line":3,"column":3,"nodeType":"632","messageId":"633","endLine":3,"endColumn":9},{"ruleId":"630","severity":1,"message":"645","line":4,"column":3,"nodeType":"632","messageId":"633","endLine":4,"endColumn":8},{"ruleId":"630","severity":1,"message":"646","line":5,"column":3,"nodeType":"632","messageId":"633","endLine":5,"endColumn":7},{"ruleId":"630","severity":1,"message":"647","line":6,"column":3,"nodeType":"632","messageId":"633","endLine":6,"endColumn":12},{"ruleId":"630","severity":1,"message":"648","line":7,"column":3,"nodeType":"632","messageId":"633","endLine":7,"endColumn":13},{"ruleId":"630","severity":1,"message":"649","line":8,"column":3,"nodeType":"632","messageId":"633","endLine":8,"endColumn":19},{"ruleId":"630","severity":1,"message":"650","line":13,"column":8,"nodeType":"632","messageId":"633","endLine":13,"endColumn":17},{"ruleId":"630","severity":1,"message":"651","line":15,"column":8,"nodeType":"632","messageId":"633","endLine":15,"endColumn":25},{"ruleId":"630","severity":1,"message":"652","line":20,"column":3,"nodeType":"632","messageId":"633","endLine":20,"endColumn":14},{"ruleId":"630","severity":1,"message":"653","line":21,"column":3,"nodeType":"632","messageId":"633","endLine":21,"endColumn":12},{"ruleId":"630","severity":1,"message":"654","line":23,"column":3,"nodeType":"632","messageId":"633","endLine":23,"endColumn":13},{"ruleId":"630","severity":1,"message":"655","line":24,"column":3,"nodeType":"632","messageId":"633","endLine":24,"endColumn":15},{"ruleId":"630","severity":1,"message":"656","line":28,"column":3,"nodeType":"632","messageId":"633","endLine":28,"endColumn":9},{"ruleId":"630","severity":1,"message":"657","line":30,"column":3,"nodeType":"632","messageId":"633","endLine":30,"endColumn":13},{"ruleId":"630","severity":1,"message":"658","line":31,"column":3,"nodeType":"632","messageId":"633","endLine":31,"endColumn":13},{"ruleId":"630","severity":1,"message":"659","line":34,"column":10,"nodeType":"632","messageId":"633","endLine":34,"endColumn":16},{"ruleId":"630","severity":1,"message":"660","line":35,"column":10,"nodeType":"632","messageId":"633","endLine":35,"endColumn":26},{"ruleId":"630","severity":1,"message":"661","line":55,"column":10,"nodeType":"632","messageId":"633","endLine":55,"endColumn":17},{"ruleId":"630","severity":1,"message":"662","line":56,"column":10,"nodeType":"632","messageId":"633","endLine":56,"endColumn":17},{"ruleId":"630","severity":1,"message":"663","line":56,"column":18,"nodeType":"632","messageId":"633","endLine":56,"endColumn":28},{"ruleId":"630","severity":1,"message":"664","line":125,"column":19,"nodeType":"632","messageId":"633","endLine":125,"endColumn":24},{"ruleId":"665","severity":1,"message":"666","line":133,"column":14,"nodeType":"667","messageId":"668","endLine":133,"endColumn":16},{"ruleId":"665","severity":1,"message":"666","line":137,"column":21,"nodeType":"667","messageId":"668","endLine":137,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":141,"column":21,"nodeType":"667","messageId":"668","endLine":141,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":145,"column":21,"nodeType":"667","messageId":"668","endLine":145,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":149,"column":21,"nodeType":"667","messageId":"668","endLine":149,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":153,"column":21,"nodeType":"667","messageId":"668","endLine":153,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":157,"column":21,"nodeType":"667","messageId":"668","endLine":157,"endColumn":23},{"ruleId":"630","severity":1,"message":"669","line":167,"column":13,"nodeType":"632","messageId":"633","endLine":167,"endColumn":17},{"ruleId":"630","severity":1,"message":"670","line":174,"column":11,"nodeType":"632","messageId":"633","endLine":174,"endColumn":16},{"ruleId":"630","severity":1,"message":"671","line":178,"column":9,"nodeType":"632","messageId":"633","endLine":178,"endColumn":18},{"ruleId":"665","severity":1,"message":"672","line":183,"column":63,"nodeType":"667","messageId":"668","endLine":183,"endColumn":65},{"ruleId":"665","severity":1,"message":"666","line":201,"column":28,"nodeType":"667","messageId":"668","endLine":201,"endColumn":30},{"ruleId":"630","severity":1,"message":"638","line":212,"column":11,"nodeType":"632","messageId":"633","endLine":212,"endColumn":19},{"ruleId":"665","severity":1,"message":"666","line":222,"column":22,"nodeType":"667","messageId":"668","endLine":222,"endColumn":24},{"ruleId":"630","severity":1,"message":"673","line":2,"column":13,"nodeType":"632","messageId":"633","endLine":2,"endColumn":20},{"ruleId":"630","severity":1,"message":"674","line":4,"column":13,"nodeType":"632","messageId":"633","endLine":4,"endColumn":20},{"ruleId":"630","severity":1,"message":"675","line":3,"column":27,"nodeType":"632","messageId":"633","endLine":3,"endColumn":33},{"ruleId":"630","severity":1,"message":"635","line":3,"column":50,"nodeType":"632","messageId":"633","endLine":3,"endColumn":54},{"ruleId":"630","severity":1,"message":"676","line":7,"column":8,"nodeType":"632","messageId":"633","endLine":7,"endColumn":13},{"ruleId":"630","severity":1,"message":"675","line":2,"column":27,"nodeType":"632","messageId":"633","endLine":2,"endColumn":33},{"ruleId":"630","severity":1,"message":"656","line":2,"column":35,"nodeType":"632","messageId":"633","endLine":2,"endColumn":41},{"ruleId":"630","severity":1,"message":"677","line":2,"column":43,"nodeType":"632","messageId":"633","endLine":2,"endColumn":48},{"ruleId":"630","severity":1,"message":"673","line":3,"column":13,"nodeType":"632","messageId":"633","endLine":3,"endColumn":20},{"ruleId":"630","severity":1,"message":"678","line":4,"column":13,"nodeType":"632","messageId":"633","endLine":4,"endColumn":20},{"ruleId":"630","severity":1,"message":"679","line":10,"column":7,"nodeType":"632","messageId":"633","endLine":10,"endColumn":18},{"ruleId":"680","severity":1,"message":"681","line":9,"column":15,"nodeType":"682","endLine":16,"endColumn":6},{"ruleId":"680","severity":1,"message":"683","line":16,"column":7,"nodeType":"684","endLine":16,"endColumn":19,"suggestions":"685"},{"ruleId":"630","severity":1,"message":"686","line":13,"column":9,"nodeType":"632","messageId":"633","endLine":13,"endColumn":15},{"ruleId":"630","severity":1,"message":"644","line":2,"column":10,"nodeType":"632","messageId":"633","endLine":2,"endColumn":16},{"ruleId":"630","severity":1,"message":"645","line":2,"column":18,"nodeType":"632","messageId":"633","endLine":2,"endColumn":23},{"ruleId":"630","severity":1,"message":"646","line":2,"column":25,"nodeType":"632","messageId":"633","endLine":2,"endColumn":29},{"ruleId":"630","severity":1,"message":"647","line":2,"column":31,"nodeType":"632","messageId":"633","endLine":2,"endColumn":40},{"ruleId":"630","severity":1,"message":"648","line":2,"column":42,"nodeType":"632","messageId":"633","endLine":2,"endColumn":52},{"ruleId":"630","severity":1,"message":"687","line":5,"column":8,"nodeType":"632","messageId":"633","endLine":5,"endColumn":16},{"ruleId":"630","severity":1,"message":"650","line":6,"column":8,"nodeType":"632","messageId":"633","endLine":6,"endColumn":17},{"ruleId":"630","severity":1,"message":"688","line":7,"column":8,"nodeType":"632","messageId":"633","endLine":7,"endColumn":24},{"ruleId":"630","severity":1,"message":"651","line":8,"column":8,"nodeType":"632","messageId":"633","endLine":8,"endColumn":25},{"ruleId":"630","severity":1,"message":"654","line":16,"column":3,"nodeType":"632","messageId":"633","endLine":16,"endColumn":13},{"ruleId":"630","severity":1,"message":"655","line":17,"column":3,"nodeType":"632","messageId":"633","endLine":17,"endColumn":15},{"ruleId":"630","severity":1,"message":"657","line":23,"column":3,"nodeType":"632","messageId":"633","endLine":23,"endColumn":13},{"ruleId":"630","severity":1,"message":"658","line":24,"column":3,"nodeType":"632","messageId":"633","endLine":24,"endColumn":13},{"ruleId":"630","severity":1,"message":"659","line":27,"column":10,"nodeType":"632","messageId":"633","endLine":27,"endColumn":16},{"ruleId":"630","severity":1,"message":"661","line":43,"column":10,"nodeType":"632","messageId":"633","endLine":43,"endColumn":17},{"ruleId":"630","severity":1,"message":"689","line":43,"column":19,"nodeType":"632","messageId":"633","endLine":43,"endColumn":29},{"ruleId":"680","severity":1,"message":"690","line":82,"column":5,"nodeType":"684","endLine":82,"endColumn":22,"suggestions":"691"},{"ruleId":"680","severity":1,"message":"692","line":103,"column":5,"nodeType":"684","endLine":103,"endColumn":22,"suggestions":"693"},{"ruleId":"630","severity":1,"message":"664","line":107,"column":19,"nodeType":"632","messageId":"633","endLine":107,"endColumn":24},{"ruleId":"630","severity":1,"message":"662","line":121,"column":18,"nodeType":"632","messageId":"633","endLine":121,"endColumn":25},{"ruleId":"630","severity":1,"message":"670","line":135,"column":26,"nodeType":"632","messageId":"633","endLine":135,"endColumn":31},{"ruleId":"630","severity":1,"message":"694","line":135,"column":33,"nodeType":"632","messageId":"633","endLine":135,"endColumn":39},{"ruleId":"630","severity":1,"message":"638","line":162,"column":11,"nodeType":"632","messageId":"633","endLine":162,"endColumn":19},{"ruleId":"665","severity":1,"message":"666","line":173,"column":20,"nodeType":"667","messageId":"668","endLine":173,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":174,"column":20,"nodeType":"667","messageId":"668","endLine":174,"endColumn":22},{"ruleId":"630","severity":1,"message":"637","line":9,"column":11,"nodeType":"632","messageId":"633","endLine":9,"endColumn":16},{"ruleId":"630","severity":1,"message":"695","line":18,"column":9,"nodeType":"632","messageId":"633","endLine":18,"endColumn":16},{"ruleId":"630","severity":1,"message":"696","line":2,"column":29,"nodeType":"632","messageId":"633","endLine":2,"endColumn":37},{"ruleId":"630","severity":1,"message":"697","line":9,"column":11,"nodeType":"632","messageId":"633","endLine":9,"endColumn":14},{"ruleId":"630","severity":1,"message":"661","line":19,"column":12,"nodeType":"632","messageId":"633","endLine":19,"endColumn":19},{"ruleId":"630","severity":1,"message":"689","line":19,"column":21,"nodeType":"632","messageId":"633","endLine":19,"endColumn":31},{"ruleId":"630","severity":1,"message":"664","line":49,"column":23,"nodeType":"632","messageId":"633","endLine":49,"endColumn":28},{"ruleId":"630","severity":1,"message":"638","line":58,"column":15,"nodeType":"632","messageId":"633","endLine":58,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":69,"column":22,"nodeType":"667","messageId":"668","endLine":69,"endColumn":24},{"ruleId":"665","severity":1,"message":"666","line":70,"column":22,"nodeType":"667","messageId":"668","endLine":70,"endColumn":24},{"ruleId":"630","severity":1,"message":"677","line":6,"column":22,"nodeType":"632","messageId":"633","endLine":6,"endColumn":27},{"ruleId":"630","severity":1,"message":"698","line":18,"column":12,"nodeType":"632","messageId":"633","endLine":18,"endColumn":25},{"ruleId":"630","severity":1,"message":"661","line":23,"column":14,"nodeType":"632","messageId":"633","endLine":23,"endColumn":21},{"ruleId":"630","severity":1,"message":"689","line":23,"column":23,"nodeType":"632","messageId":"633","endLine":23,"endColumn":33},{"ruleId":"630","severity":1,"message":"664","line":47,"column":19,"nodeType":"632","messageId":"633","endLine":47,"endColumn":24},{"ruleId":"630","severity":1,"message":"638","line":56,"column":11,"nodeType":"632","messageId":"633","endLine":56,"endColumn":19},{"ruleId":"665","severity":1,"message":"666","line":68,"column":20,"nodeType":"667","messageId":"668","endLine":68,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":69,"column":20,"nodeType":"667","messageId":"668","endLine":69,"endColumn":22},{"ruleId":"630","severity":1,"message":"699","line":1,"column":27,"nodeType":"632","messageId":"633","endLine":1,"endColumn":37},{"ruleId":"630","severity":1,"message":"700","line":2,"column":8,"nodeType":"632","messageId":"633","endLine":2,"endColumn":20},{"ruleId":"630","severity":1,"message":"701","line":8,"column":3,"nodeType":"632","messageId":"633","endLine":8,"endColumn":9},{"ruleId":"630","severity":1,"message":"661","line":26,"column":10,"nodeType":"632","messageId":"633","endLine":26,"endColumn":17},{"ruleId":"630","severity":1,"message":"689","line":26,"column":19,"nodeType":"632","messageId":"633","endLine":26,"endColumn":29},{"ruleId":"665","severity":1,"message":"666","line":110,"column":14,"nodeType":"667","messageId":"668","endLine":110,"endColumn":16},{"ruleId":"665","severity":1,"message":"666","line":114,"column":21,"nodeType":"667","messageId":"668","endLine":114,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":118,"column":21,"nodeType":"667","messageId":"668","endLine":118,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":122,"column":21,"nodeType":"667","messageId":"668","endLine":122,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":126,"column":21,"nodeType":"667","messageId":"668","endLine":126,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":130,"column":21,"nodeType":"667","messageId":"668","endLine":130,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":134,"column":21,"nodeType":"667","messageId":"668","endLine":134,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":138,"column":21,"nodeType":"667","messageId":"668","endLine":138,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":140,"column":21,"nodeType":"667","messageId":"668","endLine":140,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":142,"column":21,"nodeType":"667","messageId":"668","endLine":142,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":144,"column":21,"nodeType":"667","messageId":"668","endLine":144,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":146,"column":21,"nodeType":"667","messageId":"668","endLine":146,"endColumn":23},{"ruleId":"630","severity":1,"message":"662","line":154,"column":19,"nodeType":"632","messageId":"633","endLine":154,"endColumn":26},{"ruleId":"665","severity":1,"message":"672","line":180,"column":19,"nodeType":"667","messageId":"668","endLine":180,"endColumn":21},{"ruleId":"630","severity":1,"message":"638","line":190,"column":11,"nodeType":"632","messageId":"633","endLine":190,"endColumn":19},{"ruleId":"665","severity":1,"message":"666","line":202,"column":20,"nodeType":"667","messageId":"668","endLine":202,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":203,"column":20,"nodeType":"667","messageId":"668","endLine":203,"endColumn":22},{"ruleId":"665","severity":1,"message":"666","line":257,"column":40,"nodeType":"667","messageId":"668","endLine":257,"endColumn":42},{"ruleId":"665","severity":1,"message":"666","line":259,"column":44,"nodeType":"667","messageId":"668","endLine":259,"endColumn":46},{"ruleId":"630","severity":1,"message":"702","line":1,"column":27,"nodeType":"632","messageId":"633","endLine":1,"endColumn":36},{"ruleId":"630","severity":1,"message":"703","line":9,"column":8,"nodeType":"632","messageId":"633","endLine":9,"endColumn":22},{"ruleId":"630","severity":1,"message":"704","line":33,"column":10,"nodeType":"632","messageId":"633","endLine":33,"endColumn":16},{"ruleId":"630","severity":1,"message":"705","line":33,"column":17,"nodeType":"632","messageId":"633","endLine":33,"endColumn":26},{"ruleId":"630","severity":1,"message":"706","line":21,"column":10,"nodeType":"632","messageId":"633","endLine":21,"endColumn":20},{"ruleId":"630","severity":1,"message":"707","line":22,"column":8,"nodeType":"632","messageId":"633","endLine":22,"endColumn":10},{"ruleId":"630","severity":1,"message":"708","line":23,"column":10,"nodeType":"632","messageId":"633","endLine":23,"endColumn":19},{"ruleId":"630","severity":1,"message":"703","line":25,"column":8,"nodeType":"632","messageId":"633","endLine":25,"endColumn":22},{"ruleId":"630","severity":1,"message":"709","line":29,"column":7,"nodeType":"632","messageId":"633","endLine":29,"endColumn":21},{"ruleId":"630","severity":1,"message":"637","line":33,"column":11,"nodeType":"632","messageId":"633","endLine":33,"endColumn":16},{"ruleId":"680","severity":1,"message":"692","line":67,"column":5,"nodeType":"684","endLine":67,"endColumn":12,"suggestions":"710"},{"ruleId":"665","severity":1,"message":"666","line":95,"column":15,"nodeType":"667","messageId":"668","endLine":95,"endColumn":17},{"ruleId":"665","severity":1,"message":"666","line":98,"column":21,"nodeType":"667","messageId":"668","endLine":98,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":102,"column":21,"nodeType":"667","messageId":"668","endLine":102,"endColumn":23},{"ruleId":"665","severity":1,"message":"672","line":102,"column":40,"nodeType":"667","messageId":"668","endLine":102,"endColumn":42},{"ruleId":"665","severity":1,"message":"666","line":105,"column":21,"nodeType":"667","messageId":"668","endLine":105,"endColumn":23},{"ruleId":"665","severity":1,"message":"672","line":105,"column":40,"nodeType":"667","messageId":"668","endLine":105,"endColumn":42},{"ruleId":"665","severity":1,"message":"666","line":140,"column":15,"nodeType":"667","messageId":"668","endLine":140,"endColumn":17},{"ruleId":"630","severity":1,"message":"638","line":155,"column":11,"nodeType":"632","messageId":"633","endLine":155,"endColumn":19},{"ruleId":"665","severity":1,"message":"666","line":165,"column":22,"nodeType":"667","messageId":"668","endLine":165,"endColumn":24},{"ruleId":"665","severity":1,"message":"666","line":245,"column":41,"nodeType":"667","messageId":"668","endLine":245,"endColumn":43},{"ruleId":"626","replacedBy":"711"},{"ruleId":"628","replacedBy":"712"},{"ruleId":"630","severity":1,"message":"631","line":2,"column":8,"nodeType":"632","messageId":"633","endLine":2,"endColumn":12},{"ruleId":"630","severity":1,"message":"634","line":5,"column":8,"nodeType":"632","messageId":"633","endLine":5,"endColumn":16},{"ruleId":"630","severity":1,"message":"635","line":10,"column":5,"nodeType":"632","messageId":"633","endLine":10,"endColumn":9},{"ruleId":"630","severity":1,"message":"636","line":13,"column":8,"nodeType":"632","messageId":"633","endLine":13,"endColumn":13},{"ruleId":"630","severity":1,"message":"637","line":18,"column":10,"nodeType":"632","messageId":"633","endLine":18,"endColumn":15},{"ruleId":"630","severity":1,"message":"638","line":31,"column":11,"nodeType":"632","messageId":"633","endLine":31,"endColumn":19},{"ruleId":"630","severity":1,"message":"664","line":184,"column":19,"nodeType":"632","messageId":"633","endLine":184,"endColumn":24},{"ruleId":"630","severity":1,"message":"669","line":226,"column":13,"nodeType":"632","messageId":"633","endLine":226,"endColumn":17},{"ruleId":"630","severity":1,"message":"670","line":233,"column":11,"nodeType":"632","messageId":"633","endLine":233,"endColumn":16},{"ruleId":"630","severity":1,"message":"671","line":237,"column":9,"nodeType":"632","messageId":"633","endLine":237,"endColumn":18},{"ruleId":"665","severity":1,"message":"672","line":242,"column":63,"nodeType":"667","messageId":"668","endLine":242,"endColumn":65},{"ruleId":"665","severity":1,"message":"666","line":260,"column":28,"nodeType":"667","messageId":"668","endLine":260,"endColumn":30},{"ruleId":"630","severity":1,"message":"638","line":270,"column":11,"nodeType":"632","messageId":"633","endLine":270,"endColumn":19},{"ruleId":"665","severity":1,"message":"666","line":609,"column":27,"nodeType":"667","messageId":"668","endLine":609,"endColumn":29},{"ruleId":"630","severity":1,"message":"673","line":2,"column":13,"nodeType":"632","messageId":"633","endLine":2,"endColumn":20},{"ruleId":"630","severity":1,"message":"674","line":4,"column":13,"nodeType":"632","messageId":"633","endLine":4,"endColumn":20},{"ruleId":"630","severity":1,"message":"679","line":9,"column":7,"nodeType":"632","messageId":"633","endLine":9,"endColumn":18},{"ruleId":"630","severity":1,"message":"637","line":10,"column":9,"nodeType":"632","messageId":"633","endLine":10,"endColumn":14},{"ruleId":"665","severity":1,"message":"666","line":12,"column":28,"nodeType":"667","messageId":"668","endLine":12,"endColumn":30},{"ruleId":"630","severity":1,"message":"699","line":1,"column":31,"nodeType":"632","messageId":"633","endLine":1,"endColumn":41},{"ruleId":"630","severity":1,"message":"713","line":11,"column":11,"nodeType":"632","messageId":"633","endLine":11,"endColumn":18},{"ruleId":"630","severity":1,"message":"714","line":13,"column":14,"nodeType":"632","messageId":"633","endLine":13,"endColumn":26},{"ruleId":"680","severity":1,"message":"681","line":20,"column":15,"nodeType":"682","endLine":35,"endColumn":6},{"ruleId":"680","severity":1,"message":"715","line":35,"column":7,"nodeType":"684","endLine":35,"endColumn":19,"suggestions":"716"},{"ruleId":"630","severity":1,"message":"717","line":3,"column":3,"nodeType":"632","messageId":"633","endLine":3,"endColumn":8},{"ruleId":"630","severity":1,"message":"718","line":4,"column":3,"nodeType":"632","messageId":"633","endLine":4,"endColumn":12},{"ruleId":"630","severity":1,"message":"719","line":5,"column":3,"nodeType":"632","messageId":"633","endLine":5,"endColumn":9},{"ruleId":"630","severity":1,"message":"720","line":6,"column":3,"nodeType":"632","messageId":"633","endLine":6,"endColumn":6},{"ruleId":"630","severity":1,"message":"721","line":7,"column":3,"nodeType":"632","messageId":"633","endLine":7,"endColumn":10},{"ruleId":"630","severity":1,"message":"657","line":8,"column":3,"nodeType":"632","messageId":"633","endLine":8,"endColumn":13},{"ruleId":"630","severity":1,"message":"654","line":11,"column":3,"nodeType":"632","messageId":"633","endLine":11,"endColumn":13},{"ruleId":"630","severity":1,"message":"695","line":22,"column":9,"nodeType":"632","messageId":"633","endLine":22,"endColumn":16},{"ruleId":"630","severity":1,"message":"669","line":34,"column":15,"nodeType":"632","messageId":"633","endLine":34,"endColumn":19},{"ruleId":"665","severity":1,"message":"666","line":36,"column":16,"nodeType":"667","messageId":"668","endLine":36,"endColumn":18},{"ruleId":"630","severity":1,"message":"722","line":1,"column":50,"nodeType":"632","messageId":"633","endLine":1,"endColumn":59},{"ruleId":"630","severity":1,"message":"644","line":2,"column":10,"nodeType":"632","messageId":"633","endLine":2,"endColumn":16},{"ruleId":"630","severity":1,"message":"645","line":2,"column":18,"nodeType":"632","messageId":"633","endLine":2,"endColumn":23},{"ruleId":"630","severity":1,"message":"646","line":2,"column":25,"nodeType":"632","messageId":"633","endLine":2,"endColumn":29},{"ruleId":"630","severity":1,"message":"647","line":2,"column":31,"nodeType":"632","messageId":"633","endLine":2,"endColumn":40},{"ruleId":"630","severity":1,"message":"648","line":2,"column":42,"nodeType":"632","messageId":"633","endLine":2,"endColumn":52},{"ruleId":"630","severity":1,"message":"687","line":6,"column":8,"nodeType":"632","messageId":"633","endLine":6,"endColumn":16},{"ruleId":"630","severity":1,"message":"650","line":7,"column":8,"nodeType":"632","messageId":"633","endLine":7,"endColumn":17},{"ruleId":"630","severity":1,"message":"688","line":8,"column":8,"nodeType":"632","messageId":"633","endLine":8,"endColumn":24},{"ruleId":"630","severity":1,"message":"651","line":9,"column":8,"nodeType":"632","messageId":"633","endLine":9,"endColumn":25},{"ruleId":"630","severity":1,"message":"723","line":10,"column":8,"nodeType":"632","messageId":"633","endLine":10,"endColumn":17},{"ruleId":"630","severity":1,"message":"724","line":10,"column":21,"nodeType":"632","messageId":"633","endLine":10,"endColumn":38},{"ruleId":"630","severity":1,"message":"725","line":10,"column":40,"nodeType":"632","messageId":"633","endLine":10,"endColumn":58},{"ruleId":"630","severity":1,"message":"654","line":18,"column":3,"nodeType":"632","messageId":"633","endLine":18,"endColumn":13},{"ruleId":"630","severity":1,"message":"655","line":19,"column":3,"nodeType":"632","messageId":"633","endLine":19,"endColumn":15},{"ruleId":"630","severity":1,"message":"657","line":25,"column":3,"nodeType":"632","messageId":"633","endLine":25,"endColumn":13},{"ruleId":"630","severity":1,"message":"658","line":26,"column":3,"nodeType":"632","messageId":"633","endLine":26,"endColumn":13},{"ruleId":"630","severity":1,"message":"726","line":30,"column":3,"nodeType":"632","messageId":"633","endLine":30,"endColumn":16},{"ruleId":"630","severity":1,"message":"727","line":32,"column":3,"nodeType":"632","messageId":"633","endLine":32,"endColumn":10},{"ruleId":"630","severity":1,"message":"659","line":35,"column":10,"nodeType":"632","messageId":"633","endLine":35,"endColumn":16},{"ruleId":"630","severity":1,"message":"728","line":36,"column":24,"nodeType":"632","messageId":"633","endLine":36,"endColumn":35},{"ruleId":"665","severity":1,"message":"666","line":76,"column":77,"nodeType":"667","messageId":"668","endLine":76,"endColumn":79},{"ruleId":"665","severity":1,"message":"666","line":89,"column":26,"nodeType":"667","messageId":"668","endLine":89,"endColumn":28},{"ruleId":"665","severity":1,"message":"666","line":92,"column":29,"nodeType":"667","messageId":"668","endLine":92,"endColumn":31},{"ruleId":"665","severity":1,"message":"666","line":95,"column":32,"nodeType":"667","messageId":"668","endLine":95,"endColumn":34},{"ruleId":"665","severity":1,"message":"666","line":98,"column":47,"nodeType":"667","messageId":"668","endLine":98,"endColumn":49},{"ruleId":"665","severity":1,"message":"666","line":104,"column":79,"nodeType":"667","messageId":"668","endLine":104,"endColumn":81},{"ruleId":"665","severity":1,"message":"666","line":109,"column":34,"nodeType":"667","messageId":"668","endLine":109,"endColumn":36},{"ruleId":"665","severity":1,"message":"666","line":109,"column":63,"nodeType":"667","messageId":"668","endLine":109,"endColumn":65},{"ruleId":"665","severity":1,"message":"666","line":109,"column":90,"nodeType":"667","messageId":"668","endLine":109,"endColumn":92},{"ruleId":"665","severity":1,"message":"666","line":110,"column":29,"nodeType":"667","messageId":"668","endLine":110,"endColumn":31},{"ruleId":"665","severity":1,"message":"666","line":114,"column":30,"nodeType":"667","messageId":"668","endLine":114,"endColumn":32},{"ruleId":"630","severity":1,"message":"729","line":135,"column":9,"nodeType":"632","messageId":"633","endLine":135,"endColumn":16},{"ruleId":"680","severity":1,"message":"692","line":187,"column":3,"nodeType":"684","endLine":187,"endColumn":20,"suggestions":"730"},{"ruleId":"630","severity":1,"message":"664","line":191,"column":17,"nodeType":"632","messageId":"633","endLine":191,"endColumn":22},{"ruleId":"630","severity":1,"message":"662","line":196,"column":17,"nodeType":"632","messageId":"633","endLine":196,"endColumn":24},{"ruleId":"630","severity":1,"message":"670","line":201,"column":24,"nodeType":"632","messageId":"633","endLine":201,"endColumn":29},{"ruleId":"630","severity":1,"message":"694","line":201,"column":31,"nodeType":"632","messageId":"633","endLine":201,"endColumn":37},{"ruleId":"630","severity":1,"message":"638","line":215,"column":9,"nodeType":"632","messageId":"633","endLine":215,"endColumn":17},{"ruleId":"665","severity":1,"message":"666","line":412,"column":25,"nodeType":"667","messageId":"668","endLine":412,"endColumn":27},{"ruleId":"665","severity":1,"message":"666","line":412,"column":66,"nodeType":"667","messageId":"668","endLine":412,"endColumn":68},{"ruleId":"630","severity":1,"message":"696","line":2,"column":29,"nodeType":"632","messageId":"633","endLine":2,"endColumn":37},{"ruleId":"630","severity":1,"message":"726","line":10,"column":3,"nodeType":"632","messageId":"633","endLine":10,"endColumn":16},{"ruleId":"630","severity":1,"message":"727","line":12,"column":3,"nodeType":"632","messageId":"633","endLine":12,"endColumn":10},{"ruleId":"630","severity":1,"message":"661","line":33,"column":12,"nodeType":"632","messageId":"633","endLine":33,"endColumn":19},{"ruleId":"630","severity":1,"message":"689","line":33,"column":21,"nodeType":"632","messageId":"633","endLine":33,"endColumn":31},{"ruleId":"665","severity":1,"message":"666","line":60,"column":19,"nodeType":"667","messageId":"668","endLine":60,"endColumn":21},{"ruleId":"665","severity":1,"message":"666","line":63,"column":33,"nodeType":"667","messageId":"668","endLine":63,"endColumn":35},{"ruleId":"665","severity":1,"message":"666","line":66,"column":30,"nodeType":"667","messageId":"668","endLine":66,"endColumn":32},{"ruleId":"665","severity":1,"message":"666","line":69,"column":28,"nodeType":"667","messageId":"668","endLine":69,"endColumn":30},{"ruleId":"630","severity":1,"message":"664","line":100,"column":23,"nodeType":"632","messageId":"633","endLine":100,"endColumn":28},{"ruleId":"630","severity":1,"message":"638","line":108,"column":15,"nodeType":"632","messageId":"633","endLine":108,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":213,"column":27,"nodeType":"667","messageId":"668","endLine":213,"endColumn":29},{"ruleId":"665","severity":1,"message":"666","line":213,"column":65,"nodeType":"667","messageId":"668","endLine":213,"endColumn":67},{"ruleId":"630","severity":1,"message":"695","line":17,"column":9,"nodeType":"632","messageId":"633","endLine":17,"endColumn":16},{"ruleId":"630","severity":1,"message":"701","line":9,"column":3,"nodeType":"632","messageId":"633","endLine":9,"endColumn":9},{"ruleId":"630","severity":1,"message":"726","line":16,"column":3,"nodeType":"632","messageId":"633","endLine":16,"endColumn":16},{"ruleId":"630","severity":1,"message":"727","line":18,"column":3,"nodeType":"632","messageId":"633","endLine":18,"endColumn":10},{"ruleId":"630","severity":1,"message":"731","line":25,"column":28,"nodeType":"632","messageId":"633","endLine":25,"endColumn":40},{"ruleId":"630","severity":1,"message":"661","line":40,"column":10,"nodeType":"632","messageId":"633","endLine":40,"endColumn":17},{"ruleId":"630","severity":1,"message":"689","line":40,"column":19,"nodeType":"632","messageId":"633","endLine":40,"endColumn":29},{"ruleId":"630","severity":1,"message":"732","line":44,"column":9,"nodeType":"632","messageId":"633","endLine":44,"endColumn":15},{"ruleId":"665","severity":1,"message":"666","line":92,"column":27,"nodeType":"667","messageId":"668","endLine":92,"endColumn":29},{"ruleId":"665","severity":1,"message":"666","line":95,"column":34,"nodeType":"667","messageId":"668","endLine":95,"endColumn":36},{"ruleId":"665","severity":1,"message":"666","line":98,"column":31,"nodeType":"667","messageId":"668","endLine":98,"endColumn":33},{"ruleId":"665","severity":1,"message":"666","line":101,"column":31,"nodeType":"667","messageId":"668","endLine":101,"endColumn":33},{"ruleId":"665","severity":1,"message":"666","line":104,"column":42,"nodeType":"667","messageId":"668","endLine":104,"endColumn":44},{"ruleId":"665","severity":1,"message":"666","line":107,"column":38,"nodeType":"667","messageId":"668","endLine":107,"endColumn":40},{"ruleId":"665","severity":1,"message":"666","line":110,"column":38,"nodeType":"667","messageId":"668","endLine":110,"endColumn":40},{"ruleId":"665","severity":1,"message":"666","line":113,"column":38,"nodeType":"667","messageId":"668","endLine":113,"endColumn":40},{"ruleId":"665","severity":1,"message":"666","line":116,"column":38,"nodeType":"667","messageId":"668","endLine":116,"endColumn":40},{"ruleId":"665","severity":1,"message":"666","line":119,"column":35,"nodeType":"667","messageId":"668","endLine":119,"endColumn":37},{"ruleId":"665","severity":1,"message":"666","line":122,"column":34,"nodeType":"667","messageId":"668","endLine":122,"endColumn":36},{"ruleId":"665","severity":1,"message":"666","line":125,"column":33,"nodeType":"667","messageId":"668","endLine":125,"endColumn":35},{"ruleId":"665","severity":1,"message":"666","line":128,"column":44,"nodeType":"667","messageId":"668","endLine":128,"endColumn":46},{"ruleId":"665","severity":1,"message":"666","line":131,"column":35,"nodeType":"667","messageId":"668","endLine":131,"endColumn":37},{"ruleId":"665","severity":1,"message":"666","line":134,"column":38,"nodeType":"667","messageId":"668","endLine":134,"endColumn":40},{"ruleId":"665","severity":1,"message":"666","line":197,"column":14,"nodeType":"667","messageId":"668","endLine":197,"endColumn":16},{"ruleId":"665","severity":1,"message":"666","line":201,"column":21,"nodeType":"667","messageId":"668","endLine":201,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":205,"column":21,"nodeType":"667","messageId":"668","endLine":205,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":209,"column":21,"nodeType":"667","messageId":"668","endLine":209,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":213,"column":21,"nodeType":"667","messageId":"668","endLine":213,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":217,"column":21,"nodeType":"667","messageId":"668","endLine":217,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":221,"column":21,"nodeType":"667","messageId":"668","endLine":221,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":225,"column":21,"nodeType":"667","messageId":"668","endLine":225,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":229,"column":21,"nodeType":"667","messageId":"668","endLine":229,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":233,"column":21,"nodeType":"667","messageId":"668","endLine":233,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":237,"column":21,"nodeType":"667","messageId":"668","endLine":237,"endColumn":23},{"ruleId":"665","severity":1,"message":"666","line":241,"column":21,"nodeType":"667","messageId":"668","endLine":241,"endColumn":23},{"ruleId":"630","severity":1,"message":"662","line":250,"column":19,"nodeType":"632","messageId":"633","endLine":250,"endColumn":26},{"ruleId":"665","severity":1,"message":"672","line":276,"column":19,"nodeType":"667","messageId":"668","endLine":276,"endColumn":21},{"ruleId":"630","severity":1,"message":"638","line":285,"column":11,"nodeType":"632","messageId":"633","endLine":285,"endColumn":19},{"ruleId":"665","severity":1,"message":"666","line":351,"column":40,"nodeType":"667","messageId":"668","endLine":351,"endColumn":42},{"ruleId":"665","severity":1,"message":"666","line":353,"column":44,"nodeType":"667","messageId":"668","endLine":353,"endColumn":46},{"ruleId":"665","severity":1,"message":"666","line":616,"column":27,"nodeType":"667","messageId":"668","endLine":616,"endColumn":29},{"ruleId":"665","severity":1,"message":"666","line":616,"column":80,"nodeType":"667","messageId":"668","endLine":616,"endColumn":82},{"ruleId":"630","severity":1,"message":"707","line":23,"column":8,"nodeType":"632","messageId":"633","endLine":23,"endColumn":10},{"ruleId":"630","severity":1,"message":"708","line":24,"column":10,"nodeType":"632","messageId":"633","endLine":24,"endColumn":19},{"ruleId":"630","severity":1,"message":"733","line":27,"column":10,"nodeType":"632","messageId":"633","endLine":27,"endColumn":22},{"ruleId":"630","severity":1,"message":"709","line":32,"column":7,"nodeType":"632","messageId":"633","endLine":32,"endColumn":21},{"ruleId":"665","severity":1,"message":"666","line":80,"column":26,"nodeType":"667","messageId":"668","endLine":80,"endColumn":28},{"ruleId":"665","severity":1,"message":"666","line":80,"column":53,"nodeType":"667","messageId":"668","endLine":80,"endColumn":55},{"ruleId":"665","severity":1,"message":"666","line":80,"column":68,"nodeType":"667","messageId":"668","endLine":80,"endColumn":70},{"ruleId":"665","severity":1,"message":"666","line":83,"column":29,"nodeType":"667","messageId":"668","endLine":83,"endColumn":31},{"ruleId":"665","severity":1,"message":"666","line":86,"column":38,"nodeType":"667","messageId":"668","endLine":86,"endColumn":40},{"ruleId":"665","severity":1,"message":"666","line":89,"column":38,"nodeType":"667","messageId":"668","endLine":89,"endColumn":40},{"ruleId":"680","severity":1,"message":"692","line":131,"column":5,"nodeType":"684","endLine":131,"endColumn":12,"suggestions":"734"},{"ruleId":"665","severity":1,"message":"666","line":162,"column":14,"nodeType":"667","messageId":"668","endLine":162,"endColumn":16},{"ruleId":"665","severity":1,"message":"666","line":164,"column":21,"nodeType":"667","messageId":"668","endLine":164,"endColumn":23},{"ruleId":"665","severity":1,"message":"672","line":164,"column":40,"nodeType":"667","messageId":"668","endLine":164,"endColumn":42},{"ruleId":"665","severity":1,"message":"666","line":167,"column":21,"nodeType":"667","messageId":"668","endLine":167,"endColumn":23},{"ruleId":"665","severity":1,"message":"672","line":167,"column":40,"nodeType":"667","messageId":"668","endLine":167,"endColumn":42},{"ruleId":"630","severity":1,"message":"638","line":211,"column":11,"nodeType":"632","messageId":"633","endLine":211,"endColumn":19},{"ruleId":"665","severity":1,"message":"666","line":308,"column":43,"nodeType":"667","messageId":"668","endLine":308,"endColumn":45},{"ruleId":"630","severity":1,"message":"661","line":28,"column":14,"nodeType":"632","messageId":"633","endLine":28,"endColumn":21},{"ruleId":"630","severity":1,"message":"689","line":28,"column":23,"nodeType":"632","messageId":"633","endLine":28,"endColumn":33},{"ruleId":"665","severity":1,"message":"666","line":54,"column":20,"nodeType":"667","messageId":"668","endLine":54,"endColumn":22},{"ruleId":"630","severity":1,"message":"664","line":80,"column":19,"nodeType":"632","messageId":"633","endLine":80,"endColumn":24},{"ruleId":"630","severity":1,"message":"638","line":88,"column":11,"nodeType":"632","messageId":"633","endLine":88,"endColumn":19},{"ruleId":"665","severity":1,"message":"666","line":166,"column":27,"nodeType":"667","messageId":"668","endLine":166,"endColumn":29},{"ruleId":"665","severity":1,"message":"666","line":166,"column":68,"nodeType":"667","messageId":"668","endLine":166,"endColumn":70},{"ruleId":"630","severity":1,"message":"735","line":2,"column":110,"nodeType":"632","messageId":"633","endLine":2,"endColumn":125},{"ruleId":"630","severity":1,"message":"736","line":2,"column":127,"nodeType":"632","messageId":"633","endLine":2,"endColumn":132},{"ruleId":"630","severity":1,"message":"703","line":9,"column":8,"nodeType":"632","messageId":"633","endLine":9,"endColumn":22},{"ruleId":"630","severity":1,"message":"731","line":10,"column":23,"nodeType":"632","messageId":"633","endLine":10,"endColumn":35},{"ruleId":"630","severity":1,"message":"709","line":26,"column":7,"nodeType":"632","messageId":"633","endLine":26,"endColumn":21},{"ruleId":"630","severity":1,"message":"705","line":38,"column":18,"nodeType":"632","messageId":"633","endLine":38,"endColumn":27},{"ruleId":"665","severity":1,"message":"666","line":63,"column":39,"nodeType":"667","messageId":"668","endLine":63,"endColumn":41},{"ruleId":"665","severity":1,"message":"666","line":63,"column":75,"nodeType":"667","messageId":"668","endLine":63,"endColumn":77},{"ruleId":"665","severity":1,"message":"666","line":63,"column":104,"nodeType":"667","messageId":"668","endLine":63,"endColumn":106},{"ruleId":"665","severity":1,"message":"666","line":64,"column":28,"nodeType":"667","messageId":"668","endLine":64,"endColumn":30},{"ruleId":"665","severity":1,"message":"666","line":64,"column":59,"nodeType":"667","messageId":"668","endLine":64,"endColumn":61},{"ruleId":"665","severity":1,"message":"672","line":92,"column":37,"nodeType":"667","messageId":"668","endLine":92,"endColumn":39},{"ruleId":"630","severity":1,"message":"638","line":98,"column":11,"nodeType":"632","messageId":"633","endLine":98,"endColumn":19},{"ruleId":"630","severity":1,"message":"737","line":119,"column":9,"nodeType":"632","messageId":"633","endLine":119,"endColumn":13},{"ruleId":"630","severity":1,"message":"638","line":124,"column":11,"nodeType":"632","messageId":"633","endLine":124,"endColumn":19},{"ruleId":"630","severity":1,"message":"738","line":144,"column":12,"nodeType":"632","messageId":"633","endLine":144,"endColumn":28},{"ruleId":"665","severity":1,"message":"666","line":159,"column":34,"nodeType":"667","messageId":"668","endLine":159,"endColumn":36},{"ruleId":"665","severity":1,"message":"666","line":177,"column":53,"nodeType":"667","messageId":"668","endLine":177,"endColumn":55},{"ruleId":"630","severity":1,"message":"739","line":1,"column":8,"nodeType":"632","messageId":"633","endLine":1,"endColumn":13},{"ruleId":"630","severity":1,"message":"740","line":31,"column":9,"nodeType":"632","messageId":"633","endLine":31,"endColumn":21},{"ruleId":"630","severity":1,"message":"741","line":52,"column":13,"nodeType":"632","messageId":"633","endLine":52,"endColumn":28},{"ruleId":"680","severity":1,"message":"742","line":65,"column":8,"nodeType":"684","endLine":65,"endColumn":26,"suggestions":"743"},{"ruleId":"665","severity":1,"message":"666","line":134,"column":27,"nodeType":"667","messageId":"668","endLine":134,"endColumn":29},{"ruleId":"665","severity":1,"message":"666","line":137,"column":33,"nodeType":"667","messageId":"668","endLine":137,"endColumn":35},{"ruleId":"665","severity":1,"message":"666","line":140,"column":32,"nodeType":"667","messageId":"668","endLine":140,"endColumn":34},{"ruleId":"665","severity":1,"message":"666","line":143,"column":29,"nodeType":"667","messageId":"668","endLine":143,"endColumn":31},{"ruleId":"665","severity":1,"message":"666","line":146,"column":29,"nodeType":"667","messageId":"668","endLine":146,"endColumn":31},{"ruleId":"630","severity":1,"message":"638","line":162,"column":11,"nodeType":"632","messageId":"633","endLine":162,"endColumn":19},{"ruleId":"665","severity":1,"message":"666","line":321,"column":27,"nodeType":"667","messageId":"668","endLine":321,"endColumn":29},{"ruleId":"665","severity":1,"message":"666","line":321,"column":80,"nodeType":"667","messageId":"668","endLine":321,"endColumn":82},{"ruleId":"630","severity":1,"message":"702","line":1,"column":27,"nodeType":"632","messageId":"633","endLine":1,"endColumn":36},{"ruleId":"630","severity":1,"message":"744","line":2,"column":18,"nodeType":"632","messageId":"633","endLine":2,"endColumn":22},{"ruleId":"630","severity":1,"message":"634","line":2,"column":24,"nodeType":"632","messageId":"633","endLine":2,"endColumn":32},{"ruleId":"630","severity":1,"message":"717","line":2,"column":34,"nodeType":"632","messageId":"633","endLine":2,"endColumn":39},{"ruleId":"630","severity":1,"message":"718","line":2,"column":41,"nodeType":"632","messageId":"633","endLine":2,"endColumn":50},{"ruleId":"630","severity":1,"message":"745","line":7,"column":10,"nodeType":"632","messageId":"633","endLine":7,"endColumn":16},{"ruleId":"630","severity":1,"message":"695","line":14,"column":9,"nodeType":"632","messageId":"633","endLine":14,"endColumn":16},{"ruleId":"630","severity":1,"message":"704","line":30,"column":10,"nodeType":"632","messageId":"633","endLine":30,"endColumn":16},{"ruleId":"630","severity":1,"message":"705","line":30,"column":18,"nodeType":"632","messageId":"633","endLine":30,"endColumn":27},{"ruleId":"630","severity":1,"message":"717","line":1,"column":16,"nodeType":"632","messageId":"633","endLine":1,"endColumn":21},{"ruleId":"630","severity":1,"message":"706","line":6,"column":10,"nodeType":"632","messageId":"633","endLine":6,"endColumn":20},{"ruleId":"630","severity":1,"message":"638","line":58,"column":15,"nodeType":"632","messageId":"633","endLine":58,"endColumn":23},{"ruleId":"630","severity":1,"message":"746","line":5,"column":10,"nodeType":"632","messageId":"633","endLine":5,"endColumn":16},{"ruleId":"630","severity":1,"message":"638","line":13,"column":9,"nodeType":"632","messageId":"633","endLine":13,"endColumn":17},{"ruleId":"630","severity":1,"message":"695","line":17,"column":9,"nodeType":"632","messageId":"633","endLine":17,"endColumn":16},{"ruleId":"630","severity":1,"message":"747","line":19,"column":12,"nodeType":"632","messageId":"633","endLine":19,"endColumn":23},{"ruleId":"630","severity":1,"message":"748","line":23,"column":12,"nodeType":"632","messageId":"633","endLine":23,"endColumn":25},"no-native-reassign",["749"],"no-negated-in-lhs",["750"],"no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'MenuItem' is defined but never used.","'Link' is defined but never used.","'Aluno' is defined but never used.","'token' is assigned a value but never used.","'response' is assigned a value but never used.","'error' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'Formik' is defined but never used.","'Field' is defined but never used.","'Form' is defined but never used.","'useFormik' is defined but never used.","'FieldArray' is defined but never used.","'getActiveElement' is defined but never used.","'FormGroup' is defined but never used.","'ScopedCssBaseline' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'InputLabel' is defined but never used.","'ListItemText' is defined but never used.","'Switch' is defined but never used.","'Typography' is defined but never used.","'withStyles' is defined but never used.","'purple' is defined but never used.","'findAllByAltText' is defined but never used.","'loading' is assigned a value but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","'value' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'name' is assigned a value but never used.","'index' is assigned a value but never used.","'newValues' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'FaIcons' is defined but never used.","'IoIcons' is defined but never used.","'Router' is defined but never used.","'Login' is defined but never used.","'Route' is defined but never used.","'AiIcons' is defined but never used.","'showSidebar' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","FunctionExpression","React Hook useEffect has missing dependencies: 'body' and 'headers'. Either include them or remove the dependency array.","ArrayExpression",["751"],"'method' is assigned a value but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'setLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array.",["752"],"React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["753"],"'select' is assigned a value but never used.","'classes' is assigned a value but never used.","'useState' is defined but never used.","'url' is assigned a value but never used.","'listaMaterias' is defined but never used.","'useContext' is defined but never used.","'StoreContext' is defined but never used.","'Select' is defined but never used.","'useEffect' is defined but never used.","'CurrencyFormat' is defined but never used.","'values' is assigned a value but never used.","'setValues' is assigned a value but never used.","'useHistory' is defined but never used.","'et' is defined but never used.","'parseJSON' is defined but never used.","'CurrencyFormat' is assigned a value but never used.",["754"],["749"],["750"],"'history' is assigned a value but never used.","'handleErrors' is defined but never used.","React Hook useEffect has missing dependencies: 'body' and 'token'. Either include them or remove the dependency array.",["755"],"'Paper' is defined but never used.","'TextField' is defined but never used.","'AppBar' is defined but never used.","'Box' is defined but never used.","'Toolbar' is defined but never used.","'Component' is defined but never used.","'lifecycle' is defined but never used.","'componentDidMount' is defined but never used.","'componentDidUpdate' is defined but never used.","'DialogActions' is defined but never used.","'Tooltip' is defined but never used.","'onlyLetters' is defined but never used.","'methods' is assigned a value but never used.",["756"],"'currencyMask' is defined but never used.","'person' is assigned a value but never used.","'setDayOfYear' is defined but never used.",["757"],"'TablePagination' is defined but never used.","'Table' is defined but never used.","'show' is assigned a value but never used.","'editarFinanceiro' is defined but never used.","'React' is defined but never used.","'listaPessoas' is assigned a value but never used.","'responsePessoas' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'token' and 'userLogged.EmpresaId'. Either include them or remove the dependency array.",["758"],"'Grid' is defined but never used.","'format' is defined but never used.","'Button' is defined but never used.","'novaMateria' is defined but never used.","'editarMateria' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"759","fix":"760"},{"desc":"761","fix":"762"},{"desc":"763","fix":"764"},{"desc":"765","fix":"766"},{"desc":"767","fix":"768"},{"desc":"763","fix":"769"},{"desc":"765","fix":"770"},{"desc":"771","fix":"772"},"Update the dependencies array to be: [url, method, headers, body]",{"range":"773","text":"774"},"Update the dependencies array to be: [servicoResponse, values]",{"range":"775","text":"776"},"Update the dependencies array to be: [values, values.QtdAulas]",{"range":"777","text":"778"},"Update the dependencies array to be: [todos, values]",{"range":"779","text":"780"},"Update the dependencies array to be: [url, method, token, body]",{"range":"781","text":"782"},{"range":"783","text":"778"},{"range":"784","text":"780"},"Update the dependencies array to be: [token, userLogged.EmpresaId, values.EmpresaId]",{"range":"785","text":"786"},[465,477],"[url, method, headers, body]",[2442,2459],"[servicoResponse, values]",[3082,3099],"[values, values.QtdAulas]",[1865,1872],"[todos, values]",[894,906],"[url, method, token, body]",[5913,5930],[3871,3878],[2119,2137],"[token, userLogged.EmpresaId, values.EmpresaId]"]