[{"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\index.js":"1","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\App.jsx":"2","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\contexts\\Provider.jsx":"3","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Usuario\\Login.jsx":"4","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\components\\Routes\\Private\\Private.jsx":"5","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Aluno\\CadastroAluno.jsx":"6","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\components\\content\\Content.jsx":"7","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\components\\menu\\Menu.jsx":"8","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\components\\menu\\MenuItem.jsx":"9","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\contexts\\StoreContext.js":"10","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\utils\\useStorage.js":"11","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\variaveis.js":"12","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\hooks\\useFetch.js":"13","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Styles\\useStyles.js":"14","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\utils\\mask.jsx":"15","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\components\\content\\Header.jsx":"16","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\utils\\loader.jsx":"17","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Aluno\\Alunos.jsx":"18","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Usuario\\Usuarios.jsx":"19","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Usuario\\CadastroUsuario.jsx":"20","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Servico\\CadastroServico.jsx":"21","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Servico\\Servicos.jsx":"22","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Materia\\CadastroMateria.jsx":"23","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Materia\\Materias.jsx":"24","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Aula\\Aulas.jsx":"25","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Aula\\CadastroAula.jsx":"26","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Empresa\\Empresa.jsx":"27","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Financeiro\\Financeiros.jsx":"28","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Empresa\\CadastroEmpresa.jsx":"29","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Financeiro\\CadastroFinanceiro.jsx":"30","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Home\\Home.jsx":"31","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Contratos\\Contratos.jsx":"32","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Contratos\\CadastroContrato.jsx":"33","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\utils\\storage.js":"34","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Usuario\\CriarSenha.jsx":"35","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Usuario\\RecuperarSenha.jsx":"36"},{"size":422,"mtime":1652141421412,"results":"37","hashOfConfig":"38"},{"size":1057,"mtime":1668660211056,"results":"39","hashOfConfig":"38"},{"size":507,"mtime":1651896113612,"results":"40","hashOfConfig":"38"},{"size":6018,"mtime":1669950018307,"results":"41","hashOfConfig":"38"},{"size":1014,"mtime":1668458965660,"results":"42","hashOfConfig":"38"},{"size":23376,"mtime":1669593734310,"results":"43","hashOfConfig":"38"},{"size":2620,"mtime":1668458971015,"results":"44","hashOfConfig":"38"},{"size":1691,"mtime":1667271437782,"results":"45","hashOfConfig":"38"},{"size":2259,"mtime":1667571995743,"results":"46","hashOfConfig":"38"},{"size":154,"mtime":1651896113612,"results":"47","hashOfConfig":"38"},{"size":446,"mtime":1651896113614,"results":"48","hashOfConfig":"38"},{"size":117,"mtime":1669589367317,"results":"49","hashOfConfig":"38"},{"size":931,"mtime":1651896113612,"results":"50","hashOfConfig":"38"},{"size":1163,"mtime":1651896113620,"results":"51","hashOfConfig":"38"},{"size":4143,"mtime":1667871605261,"results":"52","hashOfConfig":"38"},{"size":2036,"mtime":1664027448719,"results":"53","hashOfConfig":"38"},{"size":467,"mtime":1667963546308,"results":"54","hashOfConfig":"38"},{"size":2355,"mtime":1669170346602,"results":"55","hashOfConfig":"38"},{"size":2465,"mtime":1669174401663,"results":"56","hashOfConfig":"38"},{"size":10675,"mtime":1669951289438,"results":"57","hashOfConfig":"38"},{"size":13480,"mtime":1669593714242,"results":"58","hashOfConfig":"38"},{"size":2090,"mtime":1669170621575,"results":"59","hashOfConfig":"38"},{"size":5419,"mtime":1669593680512,"results":"60","hashOfConfig":"38"},{"size":1897,"mtime":1669171139961,"results":"61","hashOfConfig":"38"},{"size":1781,"mtime":1669170392375,"results":"62","hashOfConfig":"38"},{"size":7678,"mtime":1669952032254,"results":"63","hashOfConfig":"38"},{"size":1836,"mtime":1669171110946,"results":"64","hashOfConfig":"38"},{"size":13702,"mtime":1669953732074,"results":"65","hashOfConfig":"38"},{"size":22418,"mtime":1669593668360,"results":"66","hashOfConfig":"38"},{"size":15343,"mtime":1669952722898,"results":"67","hashOfConfig":"38"},{"size":153,"mtime":1668660215355,"results":"68","hashOfConfig":"38"},{"size":926,"mtime":1669167607508,"results":"69","hashOfConfig":"38"},{"size":8758,"mtime":1669593809858,"results":"70","hashOfConfig":"38"},{"size":740,"mtime":1651896113613,"results":"71","hashOfConfig":"38"},{"size":5112,"mtime":1669870679913,"results":"72","hashOfConfig":"38"},{"size":3960,"mtime":1669870671965,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"nmndyg",{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"76"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"76"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"76"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"76"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"76"},"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\index.js",[],["166","167"],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\App.jsx",["168","169","170"],"import React from 'react'\r\nimport Menu from '../components/menu/Menu'\r\nimport Content from '../components/content/Content'\r\nimport './App.css'\r\nimport MenuItem from '../components/menu/MenuItem'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport Login from '../views/Usuario/Login'\r\nimport CriarSenha from \"../views/Usuario/CriarSenha\";\r\nimport RecuperarSenha from \"../views/Usuario/RecuperarSenha\";\r\nimport RoutesPrivate from '../components/Routes/Private/Private'\r\nimport StoreProvider from '../contexts/Provider'\r\n\r\nconst App = props => (   \r\n    <div>\r\n      <StoreProvider>\r\n     <Router>\r\n       <Switch>\r\n       <Route path=\"/login\" component={Login}/>\r\n       <Route path=\"/criarSenha\" component={CriarSenha} />    \r\n       <Route path=\"/recuperarSenha\" component={RecuperarSenha} />         \r\n       <RoutesPrivate path=\"/\" component={Content}/>             \r\n       </Switch>  \r\n     </Router>       \r\n     </StoreProvider>       \r\n    </div>  \r\n\r\n    \r\n    \r\n)\r\n\r\nexport default App\r\n","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\contexts\\Provider.jsx",[],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Usuario\\Login.jsx",["171","172","173","174","175","176"],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\components\\Routes\\Private\\Private.jsx",[],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Aluno\\CadastroAluno.jsx",["177","178","179","180","181","182","183","184","185"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { cepMask, cpfMask, onlyLetters, onlyNumbersMax5, phoneMask, dateFormat, dayNumber } from \"../../utils/mask\";\r\nimport { url } from \"../../../src/variaveis\";\r\nimport Loader from \"../../utils/loader\";\r\n\r\nimport {\r\n  Button,\r\n  Divider,\r\n  Grid,  \r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  TextField,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  Dialog,\r\n  CircularProgress\r\n\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport { format } from 'date-fns';\r\nimport { useHistory } from \"react-router\";\r\n\r\n\r\nfunction CadastroAluno() {\r\n  const { token, userLogged } = useContext(StoreContext);\r\n\r\n  const materiasUrl = `${ url }/api/v1/materias/empresa/${userLogged.empresaId}`;\r\n  const materiasResponse = useFetch(materiasUrl,\"get\",token);\r\n  const servicosUrl = `${ url }/api/v1/servicos/empresa/${userLogged.empresaId}`;\r\n  const servicosResponse = useFetch(servicosUrl,\"get\",token);\r\n  \r\n  const gerarContrato = () => {\r\n    fetch(`${ url }/api/v1/empresas/gerarContratoPDF/${userLogged.empresaId},${values.Id}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: 'Bearer '+token,\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      }\r\n    })\r\n  };  \r\n\r\n  const editarAlunoId = window.location.pathname.split(\"/\");\r\n  var editarAlunoUrl = \"\";\r\n\r\n  if (editarAlunoId[2] != null) {\r\n    editarAlunoUrl = `${ url }/api/v1/alunos/${editarAlunoId[2]}`;\r\n  }\r\n\r\n  const history = useHistory();\r\n\r\n  const alunoResponse = useFetch(editarAlunoUrl,\"get\",token);\r\n  const [open, setOpen] = useState(false);\r\n  \r\n  const initialValues = {\r\n    Id: 0,\r\n    Nome: \"\",\r\n    DataNascimento: \"\",\r\n    Serie: \"\",\r\n    NomeResponsavel: \"\",\r\n    CPFResponsavel: \"\",\r\n    TelefoneResponsavel: \"\",\r\n    EmailResponsavel: \"\",\r\n    Escola: \"\",\r\n    Endereco: {\r\n      Logradouro: \"\",\r\n      Numero: \"\",\r\n      Complemento: \"\",\r\n      Bairro: \"\",\r\n      Cidade: \"\",\r\n      Estado: \"\",\r\n      CEP: \"\",\r\n    },\r\n    EmpresaId: userLogged.empresaId,\r\n    ServicoId: \"\",\r\n    MateriaAlunos: [],\r\n    DiaVencimento: 1\r\n  };\r\n\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  const alertas = {\r\n    text: \"\",\r\n    title: \"\"\r\n  }\r\n\r\n  const [mensagem, setMensagem] = useState(alertas);\r\n\r\n  const handleClickOpen = () => {      \r\n    if (validadorForm()) {\r\n      handleSubmit();      \r\n    } else {\r\n      console.log(\"form inválido\");\r\n    }\r\n  };\r\n\r\n  const validadorForm = () => {\r\n    if(values.Nome ===\"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar nome do aluno\" });\r\n      setOpen(true);      \r\n    } else if(values.DataNascimento ===\"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar data de nascimento do aluno\" });\r\n      setOpen(true); \r\n    } else if(values.Serie ===\"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar a série do aluno\" });\r\n      setOpen(true); \r\n    } else if(values.Escola ===\"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o nome da escola do aluno\" });\r\n      setOpen(true); \r\n    } else if(values.NomeResponsavel ===\"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o nome do responsável pelo aluno\" });\r\n      setOpen(true); \r\n    \r\n    // else if(values.CPFResponsavel ===\"\"){\r\n    //   setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o CPF do responsável pelo aluno\" });\r\n    //   setOpen(true); \r\n    // \r\n\r\n    // } else if(values.TelefoneResponsavel ===\"\"){\r\n    //   setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o telefone do responsável pelo aluno\" });\r\n    //   setOpen(true); \r\n\r\n    } else if(values.Endereco.Logradouro ===\"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o logradouro do endereço\" });\r\n      setOpen(true); \r\n    } else if(values.Endereco.Numero ===\"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o número do endereço\" });\r\n      setOpen(true); \r\n    } else if(values.Endereco.Cidade ===\"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar a cidade do endereço\" });\r\n      setOpen(true); \r\n    } else if(values.Endereco.Bairro ===\"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o bairro do endereço\" });\r\n      setOpen(true); \r\n    } else if(values.Endereco.Estado ===\"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o estado do endereço\" });\r\n      setOpen(true); \r\n    } else if(values.Endereco.CEP ===\"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o CEP do endereço\" });\r\n      setOpen(true); \r\n    } else if(values.MateriaAlunos.length === 0){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário selecionar pelo menos uma matéria\" });\r\n      setOpen(true); \r\n    } else if(values.ServicoId ===\"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário selecionar o serviço contratado\" });\r\n      setOpen(true); \r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(\r\n    function () {\r\n      if (alunoResponse.data != null) {        \r\n\r\n        var materias = []\r\n        alunoResponse.data.materiaAlunos.map((materia => (\r\n          materias.push({ MateriaId: materia.materiaId })\r\n        )))\r\n\r\n        setValues((prevState) => ({\r\n          Id: alunoResponse.data.id,\r\n          Nome: alunoResponse.data.nome,\r\n          DataNascimento: format(new Date(alunoResponse.data.dataNascimento), 'yyyy-MM-dd'),\r\n          Serie: alunoResponse.data.serie,\r\n          Escola: alunoResponse.data.escola,\r\n          NomeResponsavel: alunoResponse.data.nomeResponsavel,\r\n          CPFResponsavel: alunoResponse.data.cpfResponsavel,\r\n          TelefoneResponsavel: alunoResponse.data.telefoneResponsavel,\r\n          EmailResponsavel: alunoResponse.data.emailResponsavel,\r\n          Endereco: {\r\n            Logradouro: alunoResponse.data.endereco.logradouro,\r\n            Numero: alunoResponse.data.endereco.numero,\r\n            Complemento: alunoResponse.data.endereco.complemento,\r\n            Bairro: alunoResponse.data.endereco.bairro,\r\n            Cidade: alunoResponse.data.endereco.cidade,\r\n            Estado: alunoResponse.data.endereco.estado,\r\n            CEP: alunoResponse.data.endereco.cep,\r\n          },\r\n          ServicoId: alunoResponse.data.servicoId,\r\n          EmpresaId: alunoResponse.data.empresaId,\r\n          MateriaAlunos: materias,\r\n          DiaVencimento: alunoResponse.data.diaVencimento\r\n        }));\r\n      }\r\n    },\r\n    [alunoResponse]\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: e.target.value });\r\n  };\r\n\r\n  const handleEndereco = (e) => {\r\n    const { name, value } = e.target;\r\n    const Endereco = { ...values.Endereco };\r\n\r\n    if (name === \"Logradouro\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Logradouro\") Endereco[key] = value;\r\n      });\r\n    } else if (name === \"Numero\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Numero\") Endereco[key] = value;\r\n      });\r\n    } else if (name === \"Complemento\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Complemento\") Endereco[key] = value;\r\n      });\r\n    } else if (name === \"Bairro\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Bairro\") Endereco[key] = value;\r\n      });\r\n    } else if (name === \"Cidade\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Cidade\") Endereco[key] = value;\r\n      });\r\n    } else if (name === \"Estado\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Estado\") Endereco[key] = value;\r\n      });\r\n    } else if (name === \"CEP\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"CEP\") Endereco[key] = value;\r\n      });\r\n    }\r\n\r\n    setValues({ ...values, Endereco });\r\n  };\r\n\r\n  const handleMateria = (e) => {\r\n    const { name, value, checked } = e.target;\r\n\r\n    var MateriaAlunos = [...values.MateriaAlunos]; //matérias que tem atualmente\r\n    const materiaIdIndex = value.search(\"id\");\r\n    const index = value.substring(6, materiaIdIndex - 1);\r\n    const materiaId = value.substring(materiaIdIndex + 3);\r\n    var newValues = \"\";\r\n\r\n    //se desmarcar checkbox da matéria\r\n    if (checked === false) {\r\n      //se encontrar materiaId no array, faz filter e tira\r\n      MateriaAlunos = MateriaAlunos.filter((n) => n.MateriaId != materiaId);\r\n      setValues({ ...values, MateriaAlunos });\r\n    }\r\n\r\n    //se marcar checkbox da matéria\r\n    if (checked === true) {\r\n      //adiciona materia no array\r\n      MateriaAlunos.push({ MateriaId: materiaId });\r\n      setValues({ ...values, MateriaAlunos });\r\n    }\r\n  };\r\n\r\n  function checkMateria(id) {\r\n    var checkMateria = [...values.MateriaAlunos]\r\n    var matIds = []\r\n    checkMateria.map((mat, i) => (\r\n      matIds.push(Object.values(mat))\r\n    ))\r\n    if (matIds.find(e => e == id)) {\r\n      return true\r\n    } else\r\n      return false\r\n  }\r\n\r\n  function handleSubmit(e) {  \r\n    document.getElementById(\"div-loading\").style.display = \"block\";\r\n \r\n    const response = fetch(`${ url }/api/v1/alunos/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: 'Bearer '+token,\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(values),\r\n    })\r\n    \r\n    .then( async (response) => {\r\n      if(response.ok){\r\n        let data = await response.json();\r\n        setMensagem({ ...values, title: \"Sucesso!\", text: data })\r\n        setOpen(true);\r\n      }else{\r\n        let data = await response.json();\r\n        setMensagem({ ...values, title: \"Erro!\", text: data })\r\n        setOpen(true);\r\n      }\r\n    })\r\n    .catch((err) => {\r\n        console.log(err);\r\n    })\r\n    document.getElementById(\"div-loading\").style.display = \"none\";   \r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <div className={classes.titulo}>\r\n            <h1>Cadastro de Aluno</h1>\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <div className={classes.subtitulo}>\r\n                  <h4>Dados do Aluno</h4>\r\n                  <Divider />\r\n                </div>\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"Nome\"\r\n                  name=\"Nome\"\r\n                  label=\"Nome Aluno\"\r\n                  required={true}\r\n                  fullWidth\r\n                  onChange={(e) => { handleChange(onlyLetters(e)) }}\r\n                  value={values.Nome}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={3}>\r\n                <TextField\r\n                  id=\"DataNascimento\"\r\n                  name=\"DataNascimento\"\r\n                  label=\"Data Nascimento\"\r\n                  type=\"date\"\r\n                  required={true}\r\n                  \r\n                  onChange={(e) => { handleChange(dateFormat(e)) }}\r\n                  value={values.DataNascimento}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Serie\"\r\n                  name=\"Serie\"\r\n                  label=\"Serie\"\r\n                  \r\n                  onChange={handleChange}\r\n                  value={values.Serie}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={3}>\r\n                <TextField\r\n                  id=\"Escola\"\r\n                  name=\"Escola\"\r\n                  label=\"Escola\"\r\n                  \r\n                  onChange={(e) => { handleChange(onlyLetters(e)) }}\r\n                  value={values.Escola}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"NomeResponsavel\"\r\n                  name=\"NomeResponsavel\"\r\n                  label=\"Nome Responsável\"\r\n                  required={true}\r\n                  fullWidth\r\n                  onChange={(e) => { handleChange(onlyLetters(e)) }}\r\n                  value={values.NomeResponsavel}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"CPFResponsavel\"\r\n                  name=\"CPFResponsavel\"\r\n                  label=\"CPF\"\r\n                  \r\n                  onChange={(e) => { handleChange(cpfMask(e)) }}\r\n                  value={values.CPFResponsavel}\r\n                  fullWidth\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"TelefoneResponsavel\"\r\n                  name=\"TelefoneResponsavel\"\r\n                  label=\"Telefone\"\r\n                  \r\n                  onChange={(e) => { handleChange(phoneMask(e)) }}\r\n                  value={values.TelefoneResponsavel}\r\n                  fullWidth\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </Grid>              \r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"EmailResponsavel\"\r\n                  name=\"EmailResponsavel\"\r\n                  label=\"E-mail\"\r\n                  onChange={handleChange}\r\n                  \r\n                  value={values.EmailResponsavel}\r\n                  fullWidth\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <div className={classes.subtitulo}>\r\n                  <h4>Endereço</h4>\r\n                  <Divider />\r\n                </div>\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"Endereco.Logradouro\"\r\n                  name=\"Logradouro\"\r\n                  required={true}\r\n                  onChange={handleEndereco}\r\n                  value={values.Endereco.Logradouro}\r\n                  label=\"Logradouro\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={1}>\r\n                <TextField\r\n                  id=\"Endereco.Numero\"\r\n                  name=\"Numero\"\r\n                  label=\"Nº\"                  \r\n                  onChange={(e) => { handleEndereco(onlyNumbersMax5(e)) }}\r\n                  value={values.Endereco.Numero}\r\n                  fullWidth\r\n                  required={true}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={3}>\r\n                <TextField\r\n                  id=\"Endereco.Complemento\"\r\n                  name=\"Complemento\"\r\n                  label=\"Complemento\"\r\n                  onChange={handleEndereco}\r\n                  value={values.Endereco.Complemento}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Endereco.Cidade\"\r\n                  name=\"Cidade\"\r\n                  label=\"Cidade\"\r\n                  required={true}\r\n                  onChange={handleEndereco}\r\n                  value={values.Endereco.Cidade}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Endereco.Bairro\"\r\n                  name=\"Bairro\"\r\n                  required={true}\r\n                  onChange={handleEndereco}\r\n                  value={values.Endereco.Bairro}\r\n                  label=\"Bairro\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Endereco.Estado\"\r\n                  name=\"Estado\"\r\n                  label=\"Estado\"\r\n                  required={true}\r\n                  onChange={handleEndereco}\r\n                  value={values.Endereco.Estado}\r\n                  fullWidth\r\n                  select\r\n                >\r\n                  <MenuItem value=\"AC\">Acre</MenuItem>\r\n                  <MenuItem value=\"AL\">Alagoas</MenuItem>\r\n                  <MenuItem value=\"AP\">Amapá</MenuItem>\r\n                  <MenuItem value=\"AM\">Amazonas</MenuItem>\r\n                  <MenuItem value=\"BA\">Bahia</MenuItem>\r\n                  <MenuItem value=\"CE\">Ceará</MenuItem>\r\n                  <MenuItem value=\"DF\">Distrito Federal</MenuItem>\r\n                  <MenuItem value=\"ES\">Espírito Santo</MenuItem>\r\n                  <MenuItem value=\"GO\">Goiás</MenuItem>\r\n                  <MenuItem value=\"MA\">Maranhão</MenuItem>\r\n                  <MenuItem value=\"MT\">Mato Grosso</MenuItem>\r\n                  <MenuItem value=\"MS\">Mato Grosso do Sul</MenuItem>\r\n                  <MenuItem value=\"MG\">Minas Gerais</MenuItem>\r\n                  <MenuItem value=\"PA\">Pará</MenuItem>\r\n                  <MenuItem value=\"PB\">Paraíba</MenuItem>\r\n                  <MenuItem value=\"PR\">Paraná</MenuItem>\r\n                  <MenuItem value=\"PE\">Pernambuco</MenuItem>\r\n                  <MenuItem value=\"PI\">Piauí</MenuItem>\r\n                  <MenuItem value=\"RJ\">Rio de Janeiro</MenuItem>\r\n                  <MenuItem value=\"RN\">Rio Grande do Norte</MenuItem>\r\n                  <MenuItem value=\"RS\">Rio Grande do Sul</MenuItem>\r\n                  <MenuItem value=\"RO\">Rondônia</MenuItem>\r\n                  <MenuItem value=\"RR\">Roraima</MenuItem>\r\n                  <MenuItem value=\"SC\">Santa Catarina</MenuItem>\r\n                  <MenuItem value=\"SP\">São Paulo</MenuItem>\r\n                  <MenuItem value=\"SE\">Sergipe</MenuItem>\r\n                  <MenuItem value=\"TO\">Tocantins</MenuItem>\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Endereco.CEP\"\r\n                  name=\"CEP\"\r\n                  label=\"CEP\"\r\n                  \r\n                  onChange={(e) => { handleEndereco(cepMask(e)) } }\r\n                  value={values.Endereco.CEP}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <div className={classes.subtitulo}>\r\n                  <h4>Matérias</h4>\r\n                  <Divider />\r\n                </div>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>                \r\n                {\r\n                  materiasResponse.data ?\r\n                    (\r\n                      materiasResponse.data.map((mat, j) => (\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              name={`MateriaAlunos${[]}.MateriaId`}\r\n                              onChange={handleMateria}                              \r\n                              value={`index:${j},id:${mat.id}`}\r\n                              checked={checkMateria(mat.id)}\r\n                            />\r\n                          }\r\n                          label={mat.nome}\r\n                        />\r\n                      ))) : false\r\n                }\r\n                \r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <div className={classes.subtitulo}>\r\n                  <h4>Serviço Contratado</h4>\r\n                  <Divider />\r\n                </div>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <Select\r\n                  id=\"Servico\"\r\n                  label=\"Servico Contratado\"\r\n                  onChange={handleChange}\r\n                  name=\"ServicoId\"\r\n                  \r\n                  value={values.ServicoId}\r\n\r\n                >\r\n                  {servicosResponse.data ? (\r\n\r\n                    servicosResponse.data.map((serv) => (\r\n                      <MenuItem value={serv.id}>\r\n                        {serv.descricao + \" - Valor: R$\" + serv.valor}\r\n                      </MenuItem>\r\n                    ))) : false\r\n                  }\r\n                </Select>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <TextField\r\n                  id=\"DiaVencimento\"\r\n                  name=\"DiaVencimento\"\r\n                  label=\"Dia Vencimento\"                  \r\n                  onChange={(e) => { handleChange(dayNumber(e)) }}\r\n                  value={values.DiaVencimento}\r\n                  type=\"text\"\r\n                  fullWidth \r\n                  inputProps={{  maxLength: 2, inputMode: 'numeric', pattern: '[0-9]*'  }}               \r\n                  InputLabelProps={{\r\n                    shrink: true                    \r\n                  }}\r\n                  \r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <div classname={classes.buttons}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"inherit\"\r\n                className={classes.button}\r\n              >\r\n                Limpar\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"                \r\n                onClick={handleClickOpen}\r\n                className={classes.button}\r\n              >\r\n                Cadastrar\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"                \r\n                onClick={gerarContrato}\r\n                className={classes.button}\r\n              >\r\n                Contrato\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </Paper>\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{mensagem.title}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {mensagem.text}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          {(mensagem.text == \"Aluno cadastrado\") ?     \r\n          <Button onClick={() => { handleClose(); history.push(\"/alunos\"); }}>Ok</Button>\r\n           : <Button onClick={handleClose}>Ok</Button>}          \r\n        </Dialog>        \r\n      </main>\r\n     <Loader/>   \r\n    </React.Fragment>\r\n   \r\n  );\r\n}\r\n\r\nexport default CadastroAluno;\r\n","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\components\\content\\Content.jsx",[],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\components\\menu\\Menu.jsx",["186","187","188"],"import React ,{useState, useContext} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MenuItemAdmin, MenuItemCliente } from './MenuItem';\r\nimport StoreContext from '../../contexts/StoreContext';\r\n\r\n\r\nconst Menu = (props) => {\r\nconst [sidebar,setSidebar] = useState(false);\r\nconst showSidebar = () => setSidebar(!sidebar);\r\nconst { token, userLogged } = useContext(StoreContext);\r\n if(userLogged.tipoUsuario == 1){\r\n    return (   \r\n        <>    \r\n       \r\n        <nav className=\"nav-menu\">\r\n            <ul className=\"nav-menu-items\">\r\n                {MenuItemAdmin.map((item,index) => {\r\n                    return (\r\n                        <li key={index} className={item.cName}>\r\n                            <Link to={item.path}>\r\n                                {item.icon}\r\n                                <span>{item.title}</span>\r\n                            </Link>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </nav>    \r\n        </>   \r\n        ) \r\n }else {\r\n    return (   \r\n        <>    \r\n       \r\n        <nav className=\"nav-menu\">\r\n            <ul className=\"nav-menu-items\">\r\n                {MenuItemCliente.map((item,index) => {\r\n                    return (\r\n                        <li key={index} className={item.cName}>\r\n                            <Link to={item.path}>\r\n                                {item.icon}\r\n                                <span>{item.title}</span>\r\n                            </Link>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </nav>    \r\n        </>   \r\n        ) \r\n }\r\n\r\n\r\n}\r\n\r\nexport default Menu;\r\n","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\components\\menu\\MenuItem.jsx",["189","190"],"import React from 'react'\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as IoIcons from 'react-icons/io';\r\n\r\nexport const MenuItemAdmin = [\r\n    {\r\n        title: 'Home',\r\n        path: '/',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Empresas',\r\n        path: '/empresas',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Aulas',\r\n        path: '/aulas',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Serviços',\r\n        path: '/servicos',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Matérias',\r\n        path: '/materias',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Alunos',\r\n        path: '/alunos',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Financeiro',\r\n        path: '/financeiros',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Usuários',\r\n        path: '/usuarios',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Contratos',\r\n        path: '/contratos',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    }  \r\n]\r\n\r\nexport const MenuItemCliente = [\r\n    {\r\n        title: 'Home',\r\n        path: '/',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },  \r\n    {\r\n        title: 'Matérias',\r\n        path: '/materias',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },  \r\n    {\r\n        title: 'Aulas',\r\n        path: '/aulas',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Serviços',\r\n        path: '/servicos',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },    \r\n    {\r\n        title: 'Alunos',\r\n        path: '/alunos',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Financeiro',\r\n        path: '/financeiros',\r\n        icon: <AiIcons.AiFillHome/>,\r\n        cName: 'nav-text'\r\n    }     \r\n]","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\contexts\\StoreContext.js",[],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\utils\\useStorage.js",[],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\variaveis.js",[],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\hooks\\useFetch.js",["191","192","193","194","195"],"import { useEffect, useState, useContext } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nexport const useFetch = (url,method, token, body) => {\r\n    const [response,setResponse] = useState({\r\n        data: null,\r\n        loading: true\r\n    })\r\n\r\n    const history = useHistory();\r\n\r\n    function handleErrors(response) {\r\n        if (!response.ok) {\r\n            throw Error(response.statusText);\r\n        }\r\n        return response;\r\n    }\r\n\r\n    useEffect(async function(){\r\n        await fetch(url, { \r\n            method: method, \r\n            headers: new Headers\r\n            ({\r\n                'Authorization': 'Bearer ' + token            \r\n            }),\r\n            body: body       \r\n    })\r\n        \r\n        .then(resp => resp.json())\r\n        .then(json => setResponse({\r\n                data: json,\r\n                loading: false\r\n            }));\r\n    },[url,method])\r\n    return response\r\n}","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Styles\\useStyles.js",[],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\utils\\mask.jsx",["196"],"import React from \"react\";\r\n\r\nexport const currencyMask = (e) => {\r\n    let value;\r\n    if(e.target != null)\r\n    value = e.target.value;\r\n    else \r\n    value = e;\r\n    value = value.replace(/\\D/g, \"\");\r\n    value = value.replace(/(\\d)(\\d{2})$/, \"$1,$2\");\r\n    //quando tem . o backend nao está aceitando converter para decimal\r\n    value = value.replace(/(?=(\\d{3})+(\\D))\\B/g, \".\")\r\n\r\n    if(e.target != null){\r\n        e.target.value = value;\r\n        return e;\r\n    }   \r\n    else {\r\n        return value;\r\n    }  \r\n}\r\n\r\nexport const currencyMaskList = (e) => {\r\n    let value = e;    \r\n    value = value.replace('.', \",\");\r\n    value = value.replace(/(?=(\\d{3})+(\\D))\\B/g, \".\") \r\n    e = value;\r\n    return e;\r\n}\r\n\r\nexport const onlyLetters = (e) => {\r\n    e.target.maxLength = 100;\r\n    let value = e.target.value;\r\n    value = value.replace(/[^A-Za-záàâãéèêíïóôõöúçñÁÀÂÃÉÈÍÏÓÔÕÖÚÇÑ'\\s]+$/g, '');       \r\n    e.target.value = value;\r\n    return e;\r\n}\r\n\r\nexport const cpfMask = (e) => {\r\n    e.target.maxLength = 14; \r\n    let value = e.target.value;     \r\n    value = value.replace(/\\D/g, \"\");\r\n    value = value.replace(/(\\d)(\\d{2})$/, \"$1-$2\");\r\n    value = value.replace(/(?=(\\d{3})+(\\D))\\B/g, \".\")\r\n    e.target.value = value;\r\n    return e;\r\n}\r\n\r\nexport const cnpjMask = (e) => {\r\n    e.target.maxLength = 18; \r\n    let value = e.target.value;     \r\n    value = value.replace(/\\D/g, \"\");\r\n    value = value.replace(/^(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/, \"$1.$2.$3/$4-$5\");\r\n    e.target.value = value;\r\n    return e;\r\n}\r\n\r\nexport const phoneMask = (e) => {\r\n    let value = e.target.value; \r\n    value = value.replace(/\\D/g,\"\");\r\n    value = value.replace(/^0/,\"\");\r\n    if (value.length > 10) {\r\n        // 11+ digits. Format as 5+4.\r\n        value = value.replace(/^(\\d\\d)(\\d{5})(\\d{4}).*/,\"($1) $2-$3\");\r\n    }\r\n    else if (value.length > 5) {\r\n        // 6..10 digits. Format as 4+4\r\n        value = value.replace(/^(\\d\\d)(\\d{4})(\\d{0,4}).*/,\"($1) $2-$3\");\r\n    }\r\n    else if (value.length > 2) {\r\n        // 3..5 digits. Add (0XX..)\r\n        value = value.replace(/^(\\d\\d)(\\d{0,5})/,\"($1) $2\");\r\n    }\r\n    else {\r\n        // 0..2 digits. Just add (0XX\r\n        value = value.replace(/^(\\d*)/, \"($1\");\r\n    }\r\n    e.target.value = value;\r\n    return e;               \r\n    \r\n}\r\n\r\nexport const onlyNumbersMax5 = (e) => {\r\n    e.target.maxLength = 5;\r\n    let value = e.target.value;\r\n    value = value.replace(/\\D/g, \"\"); \r\n    e.target.value = value;\r\n    return e;\r\n}\r\n\r\nexport const onlyNumbersMax2 = (e) => {\r\n    e.target.maxLength = 2;\r\n    let value = e.target.value;\r\n    value = value.replace(/\\D/g, \"\"); \r\n    e.target.value = value;\r\n    return e;\r\n}\r\n\r\nexport const dayNumber = (e) => {\r\n    e.target.maxLength = 2;\r\n    let value = e.target.value;\r\n    value = value.replace(/\\D/g, \"\"); \r\n    if(value > 31)\r\n        value = 31;\r\n    e.target.value = value;\r\n    return e;\r\n}\r\n\r\nexport const onlyNumbers = (e) => {    \r\n    let value = e.target.value;\r\n    value = value.replace(/\\D/g, \"\"); \r\n    e.target.value = value;\r\n    return e;\r\n}\r\n\r\nexport const horarioMask = (e) => {\r\n    e.target.maxLength = 5;\r\n    let value = e.target.value;\r\n    value = value.replace(/\\D/g, \"\"); \r\n    value = value.replace(/(\\d)(\\d{2})$/, \"$1:$2\");\r\n    e.target.value = value;\r\n    return e;\r\n}\r\n\r\nexport const cepMask = (e) => {\r\n    e.target.maxLength = 9; \r\n    let value = e.target.value;     \r\n    value = value.replace(/\\D/g, \"\");\r\n    value = value.replace(/(\\d)(\\d{3})$/, \"$1-$2\");    \r\n    e.target.value = value;\r\n    return e;\r\n}\r\n\r\nexport const getCurrentDate = (separator) => {\r\n    let newDate = new Date()\r\n    let date = newDate.getDate();\r\n    let month = newDate.getMonth() + 1;\r\n    let year = newDate.getFullYear();    \r\n    return `${year}${separator}${month<10?`0${month}`:`${month}`}${separator}${date}`\r\n}\r\n\r\nexport const dateFormat = (e) => {\r\n    var date = e.target.value.split(\"-\");\r\n    var year = date[0];\r\n    var month = date[1];\r\n    var day = date[2];    \r\n    year = year.substring(0,4);\r\n    e.target.value = `${year}-${month}-${day}`;  \r\n    return e;\r\n}\r\n\r\n","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\components\\content\\Header.jsx",["197","198","199","200","201","202","203","204","205","206","207"],"import {\r\n  MenuItem,\r\n  Paper,\r\n  TextField,\r\n  AppBar,\r\n  Box,\r\n  Toolbar,\r\n  Typography,\r\n  Select,\r\n  FormControl,\r\n  InputLabel\r\n} from \"@material-ui/core\";\r\nimport React, { useContext } from \"react\";\r\nimport StoreContext from '../../contexts/StoreContext';\r\nimport useStyles from \"../../views/Styles/useStyles\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Header = () => {\r\n  const { token, setToken } = useContext(StoreContext);\r\n  const { userLogged, setUserLogged } = useContext(StoreContext);\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  // useEffect(() => {\r\n  // },[userLogged])\r\n\r\n  if (token != null) {\r\n\r\n    const showEmpresas = () => {\r\n      return userLogged.empresa.map((emp) => (\r\n        <MenuItem value={emp.id}>{emp.razaoSocial}</MenuItem>\r\n      ));\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n      const { name, value } = e.target;\r\n      var newEmpresa = userLogged.empresa.filter((emp) => (\r\n        emp.id == value\r\n      ))     \r\n      setUserLogged({ ...userLogged, empresaId: newEmpresa[0].id, empresaNome: newEmpresa[0].razaoSocial })\r\n      history.push('/');      \r\n    }\r\n\r\n    return (\r\n      <div className=\"Header\" >\r\n\r\n        <label>Empresa</label>\r\n        <FormControl sx={{ m: 1, minWidth: 120 }} variant=\"standard\">\r\n          <Select\r\n            className=\"header-select\"\r\n            labelId=\"empresaNome\"\r\n            id=\"empresaNome\"\r\n            name=\"empresaNome\"\r\n            onChange={handleChange}\r\n            label=\"Empresa\"\r\n            value={userLogged.empresaId}            \r\n          >\r\n            {userLogged.empresa.length > 0\r\n              ? showEmpresas()\r\n              : false}\r\n          </Select>\r\n        </FormControl>\r\n\r\n\r\n        <label>Olá </label>\r\n        <strong>{userLogged.pessoaNome}</strong>\r\n\r\n        <button type=\"button\" onClick={() => setToken(null)}>Sair</button>\r\n      </div>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <></>\r\n    )\r\n  }\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\utils\\loader.jsx",["208"],"import * as React from 'react';\r\nimport { Box, CircularProgress } from \"@material-ui/core\";\r\n\r\nexport default function Loader() {\r\n  return (\r\n    //   <div className=\"Geral\" style={{display: \"block\"}}>\r\n    // <Box>\r\n    //   <CircularProgress />\r\n    // </Box>\r\n    // </div>\r\n    <div id=\"div-loading\">\r\n    <div id=\"loading-icon\">\r\n    <CircularProgress\r\n    sx={{ color: '#fff' }} />\r\n    <h4 id=\"loading-text\">Aguarde...</h4>\r\n    </div>\r\n  \r\n  </div> \r\n  );\r\n}","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Aluno\\Alunos.jsx",[],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Usuario\\Usuarios.jsx",["209","210","211","212","213","214","215","216","217"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Button, Grid, MenuItem, Paper, TextField } from \"@material-ui/core\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\nimport \"./Usuarios.css\";\r\nimport { url } from \"../../../src/variaveis\";\r\n\r\n\r\nconst Usuarios = () => {\r\n  const { token, userLogged } = useContext(StoreContext);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const response = useFetch(`${ url }/api/v1/usuarios/empresa/${userLogged.empresaId}`,\"get\",token);\r\n  \r\n  const initialValues = {\r\n    TipoUsuario: \"\",\r\n    EmpresaId: \"\",\r\n    PessoaId: \"\",\r\n    Login: \"\",\r\n    Senha: \"\",\r\n    showPassword: false,\r\n  };\r\n\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  function editarUsuario(id) {\r\n    history.push(`/cadastroUsuario/${id}`)\r\n  }\r\n\r\n  function novoUsuario() {\r\n    history.push(\"/cadastroUsuario\")\r\n  }\r\n\r\n  function showUsuarios(usuarios) {\r\n    return (\r\n      usuarios.map((usuario) => (\r\n        <tr onClick={() => editarUsuario(usuario.id)}>\r\n          <td key={usuario.id}>{usuario.id}</td>\r\n          <td key={usuario.empresaNome}>{usuario.empresaNome}</td>\r\n          <td key={usuario.pessoaNome}>{usuario.pessoaNome}</td>\r\n          <td key={usuario.login}>{usuario.login}</td>\r\n          <td key={usuario.tipoUsuario}>{usuario.tipoUsuario === 1 ? \"Administrador\" : \"Cliente\"}</td>\r\n          <td key={usuario.ativo}>{usuario.ativo === true ? \"Ativo\" : \"Inativo\"}</td>\r\n        </tr>\r\n      ))\r\n    )\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"lista-usuarios\">\r\n      <h1>Usuários</h1>\r\n\r\n      <div className=\"btn-novo\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={novoUsuario}\r\n          className=\"btn-novo\"\r\n        >\r\n          Novo\r\n        </Button>\r\n      </div>\r\n\r\n\r\n      <table id=\"financeiros\">\r\n        <tbody>\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>Empresa</th>\r\n            <th>Pessoa</th>\r\n            <th>Login</th>\r\n            <th>Tipo</th>\r\n            <th>Status</th>\r\n          </tr>\r\n          {response.data ?\r\n            showUsuarios(response.data)\r\n            : false}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Usuarios;\r\n","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Usuario\\CadastroUsuario.jsx",["218","219","220","221","222","223","224","225","226"],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Servico\\CadastroServico.jsx",["227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267"],"import React, { useContext, useState, useEffect, Component } from \"react\";\r\nimport { Formik, Field, Form, useFormik, FieldArray } from \"formik\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useHistory } from \"react-router\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport ScopedCssBaseline from \"@material-ui/core/ScopedCssBaseline\";\r\nimport lifecycle, { componentDidMount, componentDidUpdate } from 'react-pure-lifecycle';\r\nimport Loader from \"../../utils/loader\";\r\n\r\nimport {\r\n  Button,\r\n  Divider,\r\n  FormControl,\r\n  FormLabel,\r\n  Grid,\r\n  InputLabel,\r\n  ListItemText,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n  withStyles,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Dialog,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport { purple } from \"@material-ui/core/colors\";\r\nimport { currencyMask, onlyLetters, currencyMaskList } from \"../../utils/mask\";\r\nimport { url } from \"../../../src/variaveis\";\r\n\r\nfunction CadastroServico() {\r\n  const { token, userLogged } = useContext(StoreContext);\r\n  const aulasResponse = useFetch(`${ url }/api/v1/aulas/empresa/${userLogged.empresaId}`,\"get\",token);\r\n  const history = useHistory();\r\n  const editarServicoId = window.location.pathname.split(\"/\");\r\n  var editarServicoUrl = \"\";\r\n\r\n  if (editarServicoId[2] != null) {\r\n    editarServicoUrl = `${ url }/api/v1/servicos/${editarServicoId[2]}`;\r\n  }\r\n\r\n  const servicoResponse = useFetch(editarServicoUrl,\"get\",token);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const initialValues = {\r\n    Id: 0,\r\n    Descricao: \"\",\r\n    Valor: \"\",\r\n    Fidelidade: false,\r\n    TipoMulta: 0,\r\n    ValorMulta: \"\",\r\n    EmpresaId: userLogged.empresaId,\r\n    QtdAulas: \"\",\r\n    ServicosAulas: [],\r\n  };\r\n\r\n  const [values, setValues] = useState(initialValues);\r\n  const alertas = {\r\n    text: \"\",\r\n    title: \"\"\r\n  }\r\n  const [mensagem, setMensagem] = useState(alertas);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const validadorServicosAulas = () => {\r\n    var validador = false;    \r\n    for (var i = 0; i < values.QtdAulas; i++) {      \r\n      if (values.ServicosAulas[i] != null && values.ServicosAulas[i].AulaId == \"\") {\r\n        validador = false;\r\n      }\r\n      else {\r\n        validador = true;\r\n      }\r\n    }    return validador;\r\n  }\r\n\r\n  const validadorForm = () => {\r\n    if (values.Descricao == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário selecionar uma descrição\" });\r\n      setOpen(true);\r\n    } else if (values.Valor == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar valor\" });\r\n      setOpen(true);\r\n    } else if (values.QtdAulas == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar quantidade de aulas\" });\r\n      setOpen(true);\r\n    } else if (values.ServicosAulas[0].AulaId == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário selecionar pelo menos uma aula\" });\r\n      setOpen(true);\r\n    } else if (values.QtdAulas > 0 && !validadorServicosAulas()) {\r\n      for (var i = 0; i <= values.QtdAulas; i++) {\r\n        if (values.ServicosAulas[i] != null && values.ServicosAulas[i].AulaId == \"\") {\r\n          setMensagem({ ...values, title: \"Alerta!\", text: \"Falta selecionar aula do serviço\" });\r\n          setOpen(true);\r\n        }\r\n      }  \r\n    } else if (values.Fidelidade == true && (values.TipoMulta == \"\" || values.ValorMulta == \"\")){\r\n        if(values.TipoMulta == \"\"){\r\n          setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar tipo de multa quando tem fidelidade\" });\r\n          setOpen(true);\r\n        }\r\n        if(values.ValorMulta == \"\"){\r\n          setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar valor de multa quando tem fidelidade\" });\r\n          setOpen(true);\r\n        } \r\n    }  else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  const handleClickOpen = () => {\r\n    if (validadorForm())  {        \r\n        handleSubmit();\r\n      }\r\n      else {\r\n        console.log(\"form invalido\");\r\n      }      \r\n    }     \r\n       \r\n  \r\n  const methods = {\r\n    componentDidUpdate(isFormValid) {\r\n      return true;\r\n    }\r\n  };\r\n\r\nconst handleClose = () => {\r\n  setOpen(false);\r\n};\r\n\r\nuseEffect(\r\n  function () {\r\n    if (servicoResponse.data != null) {\r\n      var servicos = [];\r\n      servicoResponse.data.servicosAulas.map((servico) =>\r\n        servicos.push({ AulaId: servico.aulaId })\r\n      );\r\n\r\n      setValues((prevState) => ({\r\n        Id: servicoResponse.data.id,\r\n        Descricao: servicoResponse.data.descricao,\r\n        Valor: currencyMaskList(parseFloat(servicoResponse.data.valor).toFixed(2)),\r\n        TipoMulta: servicoResponse.data.tipoMulta,\r\n        Fidelidade: servicoResponse.data.fidelidade,\r\n        EmpresaId: servicoResponse.data.empresaId,\r\n        ValorMulta: servicoResponse.data.valorMulta,\r\n        ServicosAulas: servicos,\r\n        QtdAulas: servicoResponse.data.qtdAulas,\r\n      }));\r\n    }\r\n  },\r\n  [servicoResponse]\r\n);\r\n\r\nuseEffect(\r\n  function () {\r\n    if (values.QtdAulas > 0) {\r\n      const ServicosAulas = [...values.ServicosAulas];\r\n      const QtdAulas = values.QtdAulas || 0;\r\n      const previousNumber = ServicosAulas.length || 0;\r\n      if (previousNumber < QtdAulas) {\r\n        for (let i = previousNumber; i < QtdAulas; i++) {\r\n          ServicosAulas.push({ AulaId: \"\" });\r\n        }\r\n      } else {\r\n        for (let i = previousNumber; i >= QtdAulas; i--) {\r\n          ServicosAulas.splice(i, 1);\r\n        }\r\n      }\r\n      setValues({ ...values, ServicosAulas });\r\n    }\r\n  },\r\n  [values.QtdAulas]\r\n);\r\n\r\nconst handleChange = (e) => {  \r\n  var { name, value } = e.target;  \r\n  setValues({ ...values, [name]: value });\r\n};\r\n\r\nconst handleCheckChange = (e) => {\r\n  const { name, checked } = e.target;\r\n  setValues({ ...values, [name]: e.target.checked });\r\n};\r\n\r\nconst handleChangeAula = (e) => {\r\n  const { name, value, index, select } = e.target;\r\n  const AulaIdIndex = name.substring(13, 14);\r\n  var ServicosAulas = [...values.ServicosAulas]; //servicos que tem atualmente\r\n  ServicosAulas.splice(AulaIdIndex, 1, { AulaId: value }); //preencher item selecionado\r\n  setValues({ ...values, ServicosAulas });\r\n};\r\n\r\n\r\nconst tratarDecimal = (e) => {\r\n  if(e == 0)\r\n  return 0\r\n  else\r\n  return e.replace(\".\",\"\").replace(\",\",\".\");\r\n}\r\n\r\nfunction handleSubmit(e) {\r\n  setLoading(true);\r\n  var dados = values;\r\n  dados.Valor = tratarDecimal(values.Valor);\r\n  dados.ValorMulta = tratarDecimal(values.ValorMulta);\r\n  document.getElementById(\"div-loading\").style.display = \"block\";\r\n\r\n  const response = fetch(`${ url }/api/v1/servicos`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: 'Bearer  '+token,\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(dados),\r\n  })\r\n  .then( async (response) => {\r\n    if(response.ok){\r\n      let data = await response.json();\r\n      setMensagem({ ...values, title: \"Sucesso!\", text: data })\r\n      setOpen(true);\r\n    }else{\r\n      let data = await response.json();\r\n      setMensagem({ ...values, title: \"Erro!\", text: data })\r\n      setOpen(true);\r\n    }\r\n  })\r\n  .catch((err) => {\r\n      console.log(err);\r\n  })\r\n  document.getElementById(\"div-loading\").style.display = \"none\";   \r\n}\r\n\r\nconst classes = useStyles();\r\n\r\nreturn (\r\n  <React.Fragment>\r\n    <main className={classes.layout}>\r\n      <Paper className={classes.paper}>\r\n        <form>\r\n          <div className={classes.titulo}>\r\n            <h1>Cadastro de Serviço</h1>\r\n          </div>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <div className={classes.subtitulo}>\r\n                <h4>Dados do Serviço</h4>\r\n                <Divider />\r\n              </div>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={10}>\r\n              <TextField\r\n                id=\"Descricao\"\r\n                name=\"Descricao\"\r\n                label=\"Descrição\"\r\n                value={values.Descricao}\r\n                onChange={handleChange}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={2}>\r\n              <TextField              \r\n                id=\"Valor\"\r\n                name=\"Valor\"\r\n                label=\"Valor\"                \r\n                fullWidth\r\n                value={values.Valor}\r\n                onChange={(e) => handleChange(currencyMask(e))}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={2}>\r\n              <FormLabel>Fidelidade</FormLabel>\r\n\r\n              <Switch\r\n                color=\"primary\"\r\n                name=\"Fidelidade\"\r\n                value={values.Fidelidade}\r\n                checked={values.Fidelidade}\r\n                onChange={handleCheckChange}\r\n                inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n              { values.Fidelidade ? \r\n              (\r\n                <> \r\n                <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"TipoMulta\"\r\n                  name=\"TipoMulta\"\r\n                  label=\"Tipo de Multa\"\r\n                  fullWidth\r\n                  value={values.TipoMulta}\r\n                  onChange={handleChange}\r\n                  select\r\n                >\r\n                  <MenuItem value=\"1\">Percentual</MenuItem>\r\n                  <MenuItem value=\"2\">Fixo</MenuItem>\r\n                </TextField>\r\n              </Grid>\r\n               <Grid item xs={12} sm={2}>\r\n               <TextField\r\n                 id=\"ValorMulta\"\r\n                 name=\"ValorMulta\"\r\n                 label=\"Valor Multa\"\r\n                 value={values.ValorMulta}\r\n                 onChange={(e) => handleChange(currencyMask(e))}\r\n                 fullWidth\r\n               />\r\n             </Grid> \r\n             </>             \r\n              )\r\n            : false }\r\n          \r\n\r\n           \r\n\r\n            <Grid item xs={12} sm={2}>\r\n              <TextField\r\n                id=\"QtdAulas\"\r\n                name=\"QtdAulas\"\r\n                label=\"Qtd. Aulas\"\r\n                fullWidth\r\n                select\r\n                value={values.QtdAulas}\r\n                onChange={handleChange}\r\n              >\r\n                {[1, 2, 3, 4, 5, 6, 7].map((i) => (\r\n                  <MenuItem value={i}>{i}</MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <div className={classes.subtitulo}>\r\n                <h4>Aulas do Serviço</h4>\r\n                <Divider />\r\n              </div>\r\n            </Grid>\r\n\r\n            {values.ServicosAulas.map((ServicosAula, j) => (\r\n              <Grid item xs={12} sm={3}>\r\n                <FormControl className={classes.formControl}>\r\n                  <div>\r\n                    <h5 className=\"card-title\">Aula {j + 1}</h5>\r\n                    <Select\r\n                      onChange={handleChangeAula}\r\n                      name={`ServicosAulas${[j]}.AulaId`}\r\n                      value={values.ServicosAulas[j].AulaId}\r\n                    >\r\n                      {aulasResponse.data.map((aula, i) => (\r\n                        <MenuItem\r\n                          key={i}\r\n                          value={aula.id}\r\n                        >\r\n                          {aula.dia +\r\n                            \" (\" +\r\n                            aula.horaInicio +\r\n                            \"-\" +\r\n                            aula.horaFim +\r\n                            \")\"}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </div>\r\n                </FormControl>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n\r\n          <div className={classes.buttons}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"inherit\"\r\n              className={classes.button}\r\n            >\r\n              Limpar\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n              className={classes.button}\r\n              disabled={loading}\r\n            >\r\n              Cadastrar\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Paper>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{mensagem.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {mensagem.text}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        {(mensagem.text == \"Serviço cadastrado\" || mensagem.text == \"Serviço atualizado\") ?\r\n          <Button onClick={() => { handleClose(); history.push(\"/servicos\"); }}>Ok</Button>\r\n          : <Button onClick={handleClose}>Ok</Button>}\r\n\r\n      </Dialog>\r\n    </main>\r\n    <Loader/>\r\n  </React.Fragment>\r\n);\r\n                          }\r\nexport default CadastroServico;\r\n","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Servico\\Servicos.jsx",["268","269"],"import React , { useContext } from \"react\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Servicos.css\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { url } from \"../../../src/variaveis\";\r\nimport { onlyLetters, currencyMask, currencyMaskList } from \"../../utils/mask\";\r\n\r\nconst Servicos = () => {\r\n  const history = useHistory();\r\n  const { token, userLogged } = useContext(StoreContext); \r\n  const response = useFetch(`${ url }/api/v1/servicos/empresa/${userLogged.empresaId}`,\"get\",token); \r\n  \r\n  function novoServico() {\r\n    history.push(\"/cadastroServico\");\r\n  }\r\n\r\n  function editarServico(id) {\r\n    history.push(`/cadastroServico/${id}`);\r\n  }\r\n\r\n  function showServicos(servicos) {\r\n    return servicos.map((servico) => (      \r\n      <tr onClick={() => editarServico(servico.id)}>\r\n        <td key={servico.id}>{servico.id}</td>\r\n        <td key={servico.descricao}>{servico.descricao}</td>\r\n        <td key={servico.valor}>{currencyMaskList(parseFloat(servico.valor).toFixed(2))}</td>\r\n        <td key={servico.qtdAulas}>{servico.qtdAulas}</td>\r\n        <td key={servico.fidelidade}>{servico.fidelidade ? \"SIM\" : \"NÃO\"}</td>\r\n      </tr>\r\n    ));\r\n  }\r\n  return (\r\n    <div className=\"lista-servicos\">\r\n      <h1>Serviços</h1>\r\n      <div className=\"btn-novo\">\r\n          <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                onClick={novoServico}\r\n                className=\"btn-novo\"                \r\n              >\r\n                Novo Serviço\r\n              </Button>\r\n          </div>\r\n      <table id=\"servicos\">\r\n        <tbody>\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>Descrição</th>\r\n            <th>Valor</th>\r\n            <th>Qtd. Aulas</th>\r\n            <th>Fidelidade</th>\r\n          </tr>\r\n          {response.data ? showServicos(response.data) : false}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Servicos;\r\n","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Materia\\CadastroMateria.jsx",["270","271","272","273","274","275","276"],"import { Button, Grid, Paper, TextField,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,  \r\n  Dialog,\r\n  } from \"@material-ui/core\";\r\nimport { url } from \"../../../src/variaveis\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Loader from \"../../utils/loader\";\r\n\r\n\r\nfunction CadastroMateria() {\r\n  const { token, userLogged } = useContext(StoreContext);  \r\n  const [open, setOpen] = useState(false);\r\n  const history = useHistory();\r\n      //montar URL para editar matéria\r\n      var editando = false;\r\n      var editarMateriaUrl = \"\";    \r\n      const editarMateriaId = window.location.pathname.split(\"/\");\r\n      if (editarMateriaId[2] != null){\r\n        editarMateriaUrl =  `${url}/api/v1/materias/${editarMateriaId[2]}`;  \r\n        editando = true;    \r\n      }\r\n  \r\n      const materiaResponse = useFetch(editarMateriaUrl,\"get\",token);\r\n      const [loading, setLoading] = useState(true);  \r\n\r\n  const initialValues = {\r\n    Id: 0,\r\n    Nome: \"\",\r\n    EmpresaId: userLogged.empresaId,\r\n  };\r\n\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  const alertas = {\r\n    text: \"\",\r\n    title: \"\"\r\n  }\r\n\r\n  const [mensagem, setMensagem] = useState(alertas);\r\n\r\n  const handleClickOpen = () => {      \r\n    if (validadorForm()) {\r\n      handleSubmit();      \r\n    } else {\r\n      console.log(\"form inválido\");\r\n    }\r\n  };\r\n\r\n  const validadorForm = () => {\r\n    if(values.Nome == \"\"){\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar nome da matéria\" });\r\n      setOpen(true);      \r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(\r\n    function(){\r\n      if (materiaResponse.data != null){\r\n        setValues((prevState) => ({\r\n          Id:  materiaResponse.data.id,\r\n          Nome: materiaResponse.data.nome,\r\n          EmpresaId: materiaResponse.data.empresaId,\r\n        }));\r\n      };\r\n    },\r\n    [materiaResponse]\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: e.target.value });\r\n  };\r\n\r\n  function handleSubmit(e) {      \r\n    document.getElementById(\"div-loading\").style.display = \"block\";\r\n\r\n    const response = fetch(`${url}/api/v1/materias/`, {          \r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: 'Bearer '+token,\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(values),\r\n    })\r\n      \r\n    .then( async (response) => {\r\n      if(response.ok){\r\n        let data = await response.json();\r\n        setMensagem({ ...values, title: \"Sucesso!\", text: data })\r\n        setOpen(true);\r\n      }else{\r\n        let data = await response.json();\r\n        setMensagem({ ...values, title: \"Erro!\", text: data })\r\n        setOpen(true);\r\n      }\r\n    })\r\n    .catch((err) => {\r\n        console.log(err);\r\n    })\r\n    document.getElementById(\"div-loading\").style.display = \"none\";   \r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <div className={classes.titulo}>\r\n            <h1>Cadastro de Matéria</h1>\r\n          </div>\r\n          <form >\r\n              <Grid container spacing={3}>\r\n                  <Grid item xs={12}>\r\n                      <TextField \r\n                         id=\"Nome\"\r\n                         name=\"Nome\"\r\n                         label=\"Nome\"\r\n                         fullWidth\r\n                         onChange={handleChange}\r\n                         value={values.Nome}\r\n                      />\r\n                  </Grid>\r\n              </Grid>\r\n              <div className={classes.buttons}>\r\n              {editando\r\n              ? false\r\n              : <Button\r\n              variant=\"contained\"\r\n              color=\"inherit\"\r\n              className={classes.button}\r\n            >\r\n              Limpar\r\n            </Button>}\r\n             \r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n                className={classes.button}\r\n              >\r\n                {editando ? \"Atualizar\" : \"Cadastrar\"}\r\n              </Button>\r\n            </div>\r\n          </form>        \r\n        </Paper>\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{mensagem.title}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {mensagem.text}\r\n            </DialogContentText>\r\n          </DialogContent>          \r\n\r\n          {(mensagem.text == \"Matéria cadastrada\" || mensagem.text == \"Matéria atualizada\") ?     \r\n            <Button onClick={() => { handleClose(); history.push(\"/materias\"); }}>Ok</Button>\r\n             : <Button onClick={handleClose}>Ok</Button>} \r\n          \r\n        </Dialog>\r\n      </main>\r\n      <Loader/>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CadastroMateria;\r\n","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Materia\\Materias.jsx",["277"],"import React, { useContext } from \"react\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport \"./Materias.css\"\r\nimport { Button } from \"@material-ui/core\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport { url } from \"../../../src/variaveis\";\r\n\r\nfunction Materias() {\r\n  const { token, userLogged } = useContext(StoreContext);\r\n\r\n  const response = useFetch(`${ url }/api/v1/materias/empresa/${userLogged.empresaId}`,\"get\",token);\r\n\r\n  const history = useHistory();\r\n\r\n  const classes = useStyles();\r\n\r\n  function novaMateria(){\r\n    history.push(\"/cadastroMateria\")\r\n  }\r\n\r\n  function editarMateria(id){\r\n    history.push(`/cadastroMateria/${id}`)\r\n  }\r\n\r\n  function showMaterias(materias){\r\n    return (\r\n      materias.map((materia) => (\r\n        <tr onClick={() => editarMateria(materia.id)}>\r\n          <td key={materia.id}>{materia.id}</td>      \r\n          <td key={materia.nome}>{materia.nome}</td>          \r\n        </tr>\r\n      ))   \r\n    )\r\n  }\r\n  return (         \r\n        <div className=\"lista-materias\">\r\n          <h1>Matérias</h1>\r\n          <div className=\"btn-novo\">\r\n          <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                onClick={novaMateria}\r\n                className=\"btn-novo\"                \r\n              >\r\n                Nova Matéria\r\n              </Button>\r\n          </div>\r\n         \r\n          <table id=\"materias\">\r\n            <tbody>\r\n              <tr>\r\n                <th>Id</th>                              \r\n                <th>Nome</th>   \r\n              </tr>\r\n              {response.data ? showMaterias(response.data) : false}             \r\n            </tbody>\r\n          </table>\r\n        </div>     \r\n    \r\n  );\r\n}\r\n\r\nexport default Materias;\r\n","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Aula\\Aulas.jsx",["278"],"import { Button } from \"@material-ui/core\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport \"./Aulas.css\"\r\nimport { url } from \"../../../src/variaveis\";\r\n\r\n\r\nfunction Aulas() {\r\n  const { token, userLogged } = useContext(StoreContext); \r\n  const response = useFetch(`${ url }/api/v1/aulas/empresa/${userLogged.empresaId}`, \"get\",token);\r\n\r\n  const history = useHistory();\r\n\r\n  function novaAula() {\r\n    history.push(\"/cadastroaula\");\r\n  }\r\n\r\n  function editarAula(id) {\r\n    history.push(`/cadastroAula/${id}`);\r\n  }\r\n\r\n  \r\n  function showAulas(aulas) {\r\n    return aulas.map((aula) => (\r\n      <tr onClick={() => editarAula(aula.id)}>\r\n        <td>{aula.id}</td>  \r\n        <td>{aula.dia}</td>\r\n        <td>{aula.horaInicio}</td>\r\n        <td>{aula.horaFim}</td>\r\n        <td>{aula.vagas}</td>       \r\n      </tr>\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <div className=\"lista-aulas\">\r\n      <h1>Aulas</h1>\r\n      <div className=\"btn-novo\">\r\n          <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                onClick={novaAula}\r\n                className=\"btn-novo\"                \r\n              >\r\n                Nova Aula\r\n              </Button>\r\n          </div>\r\n      <table id=\"aulas\">\r\n        <tbody>\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>Dia</th>\r\n            <th>Hora Inicio</th>\r\n            <th>Hora Fim</th>\r\n            <th>Vagas</th>           \r\n          </tr>\r\n          {response.data ? showAulas(response.data) : false}          \r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Aulas;\r\n","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Aula\\CadastroAula.jsx",["279","280","281","282","283","284","285","286","287","288","289","290"],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Empresa\\Empresa.jsx",[],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Financeiro\\Financeiros.jsx",["291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312"],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Empresa\\CadastroEmpresa.jsx",["313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { url } from \"../../../src/variaveis\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Select,\r\n  Divider,\r\n  Switch,\r\n  FormLabel,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Dialog,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { MenuItem } from \"@material-ui/core\";\r\nimport { format } from \"date-fns\";\r\nimport { useHistory } from \"react-router\";\r\nimport { cepMask, cpfMask, currencyMask, onlyLetters, onlyNumbersMax5, phoneMask, onlyNumbers, cnpjMask } from \"../../utils/mask\";\r\nimport Loader from \"../../utils/loader\";\r\n\r\n\r\n\r\nfunction CadastroEmpresa() {\r\n  const { token } = useContext(StoreContext);\r\n  const { userLogged, setUserLogged } = useContext(StoreContext);\r\n  var editando = false;\r\n  var editarEmpresaUrl = \"\";\r\n  const editarEmpresaId = window.location.pathname.split(\"/\");\r\n  if (editarEmpresaId[2] != null) {\r\n    editarEmpresaUrl = `${url}/api/v1/empresas/${editarEmpresaId[2]}`;\r\n    editando = true;\r\n  }\r\n\r\n  const empresaResponse = useFetch(editarEmpresaUrl, \"get\", token);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const history = useHistory();\r\n\r\n  const person = { Nome: \"\", Telefone: \"\" };\r\n  const [disableFields, setDisable] = useState(false);\r\n\r\n  const initialValues = {\r\n    Id: 0,\r\n    TipoEmpresa: \"\",\r\n    UsarDados: false,\r\n    CNPJ_CPF: \"\",\r\n    RazaoSocial: \"\",\r\n    Telefone: \"\",\r\n    Ativo: true,\r\n    Endereco: {\r\n      Logradouro: \"\",\r\n      Numero: \"\",\r\n      Complemento: \"\",\r\n      Bairro: \"\",\r\n      Cidade: \"\",\r\n      Estado: \"\",\r\n      CEP: \"\",\r\n    },\r\n    Pessoa: {\r\n      Nome: \"\",\r\n      CPF: \"\",\r\n      DataNascimento: \"\",\r\n      Email: \"\",\r\n      Telefone: \"\",\r\n    },\r\n  };\r\n\r\n  const [values, setValues] = useState(initialValues);\r\n  const alertas = {\r\n    text: \"\",\r\n    title: \"\"\r\n  }\r\n\r\n  const [mensagem, setMensagem] = useState(alertas);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    if (validadorForm()) {\r\n      handleSubmit();\r\n    } else {\r\n      console.log(\"form inválido\");\r\n    }\r\n  };\r\n\r\n  const validadorForm = () => {\r\n    if (values.TipoEmpresa == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o tipo da empresa\" });\r\n      setOpen(true);\r\n    } else if (values.RazaoSocial == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar nome da empresa\" });\r\n      setOpen(true);\r\n    } else if (values.CNPJ_CPF == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar CNPJ ou CPF da empresa\" });\r\n      setOpen(true);\r\n    } else if (values.Telefone == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o nº de telefone da empresa\" });\r\n      setOpen(true);\r\n    } else if (values.Endereco.Logradouro == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o logradouro do endereço\" });\r\n      setOpen(true);\r\n    } else if (values.Endereco.Numero == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o número do endereço\" });\r\n      setOpen(true);\r\n    } else if (values.Endereco.Cidade == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar a cidade do endereço\" });\r\n      setOpen(true);\r\n    } else if (values.Endereco.Bairro == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o bairro do endereço\" });\r\n      setOpen(true);\r\n    } else if (values.Endereco.Estado == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o estado do endereço\" });\r\n      setOpen(true);\r\n    } else if (values.Endereco.CEP == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o CEP do endereço\" });\r\n      setOpen(true);\r\n    } else if (values.Pessoa.Nome == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o nome da pessoa\" });\r\n      setOpen(true);\r\n    } else if (values.Pessoa.CPF == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o CPF da pessoa\" });\r\n      setOpen(true);\r\n    } else if (values.Pessoa.DataNascimento == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar a data de nascimento da pessoa\" });\r\n      setOpen(true);\r\n    } else if (values.Pessoa.Email == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o e-mail da pessoa\" });\r\n      setOpen(true);\r\n    } else if (values.Pessoa.Telefone == \"\") {\r\n      setMensagem({ ...values, title: \"Alerta!\", text: \"Necessário informar o telefone da pessoa\" });\r\n      setOpen(true);\r\n    }\r\n    else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(\r\n    function () {\r\n      if (empresaResponse.data != null) {\r\n        setValues((prevState) => ({\r\n          Id: empresaResponse.data.id,\r\n          TipoEmpresa: empresaResponse.data.cnpJ_CPF.length < 12 ? \"1\" : \"2\",\r\n          CNPJ_CPF: empresaResponse.data.cnpJ_CPF,\r\n          RazaoSocial: empresaResponse.data.razaoSocial,\r\n          Telefone: empresaResponse.data.telefone,\r\n          Ativo: empresaResponse.data.ativo,\r\n          Endereco: {\r\n            Id: empresaResponse.data.endereco.id,\r\n            Logradouro: empresaResponse.data.endereco.logradouro,\r\n            Numero: empresaResponse.data.endereco.numero,\r\n            Complemento: empresaResponse.data.endereco.complemento,\r\n            Bairro: empresaResponse.data.endereco.bairro,\r\n            Cidade: empresaResponse.data.endereco.cidade,\r\n            Estado: empresaResponse.data.endereco.estado,\r\n            CEP: empresaResponse.data.endereco.cep,\r\n          },\r\n          Pessoa: {\r\n            Nome: empresaResponse.data.pessoas[0].nome,\r\n            CPF: empresaResponse.data.pessoas[0].cpf,\r\n            Email: empresaResponse.data.pessoas[0].email,\r\n            DataNascimento: format(\r\n              new Date(empresaResponse.data.pessoas[0].dataNascimento),\r\n              \"yyyy-MM-dd\"\r\n            ),\r\n            Telefone: empresaResponse.data.pessoas[0].telefone,\r\n          },\r\n        }));\r\n        setDisable(true);\r\n      }\r\n    },\r\n    [empresaResponse]\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: e.target.value });\r\n  };\r\n\r\n  const handlePessoa = (e) => {\r\n    const { name, value } = e.target;\r\n    const Endereco = { ...values.Endereco };\r\n    const Pessoa = { ...values.Pessoa };\r\n\r\n    if (name == \"Logradouro\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Logradouro\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"Numero\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Numero\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"Complemento\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Complemento\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"Bairro\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Bairro\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"Cidade\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Cidade\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"Estado\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"Estado\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"CEP\") {\r\n      Object.keys(Endereco).forEach((key) => {\r\n        if (key === \"CEP\") Endereco[key] = value;\r\n      });\r\n    } else if (name == \"CPF\") {\r\n      Object.keys(Pessoa).forEach((key) => {\r\n        if (key === \"CPF\") Pessoa[key] = value;\r\n      });\r\n    } else if (name == \"Nome\") {\r\n      Object.keys(Pessoa).forEach((key) => {\r\n        if (key === \"Nome\") Pessoa[key] = value;\r\n      });\r\n    } else if (name == \"Email\") {\r\n      Object.keys(Pessoa).forEach((key) => {\r\n        if (key === \"Email\") Pessoa[key] = value;\r\n      });\r\n    } else if (name == \"Telefone\") {\r\n      Object.keys(Pessoa).forEach((key) => {\r\n        if (key === \"Telefone\") Pessoa[key] = value;\r\n      });\r\n    } else if (name == \"DataNascimento\") {\r\n      Object.keys(Pessoa).forEach((key) => {\r\n        if (key === \"DataNascimento\") Pessoa[key] = value;\r\n      });\r\n    }\r\n    setValues({ ...values, Endereco, Pessoa });\r\n  };\r\n\r\n  const funcUsarDadosEmpresa = (e) => {\r\n    const { name, checked } = e.target;\r\n    const newPessoa = values;\r\n\r\n    newPessoa.Pessoa = {\r\n      Nome: values.RazaoSocial,\r\n      CPF: values.CNPJ_CPF,\r\n      Telefone: values.Telefone,\r\n      DataNascimento: \"\",\r\n      Email: \"\",\r\n    };\r\n    setValues({ ...values, Pessoa: newPessoa });\r\n    setValues({ ...values, [name]: e.target.checked });\r\n  };\r\n\r\n  const handleCheckChange = (e) => {\r\n    const { name, checked } = e.target;\r\n    setValues({ ...values, [name]: e.target.checked });\r\n  };\r\n\r\n  function handleSubmit(e) {\r\n    if (values.Id != 0) {\r\n      const valuesToSubmit = values;\r\n      setValues({ ...values, valuesToSubmit });\r\n    }\r\n    document.getElementById(\"div-loading\").style.display = \"block\";\r\n\r\n    const response = fetch(`${url}/api/v1/empresas/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: 'Bearer ' + token,\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(values),\r\n    })\r\n\r\n      .then(async (response) => {\r\n\r\n        if (response.ok) {\r\n          let data = await response.json();\r\n          setMensagem({ ...values, title: \"Sucesso!\", text: editando ? \"Empresa atualizada\" : \"Empresa cadastrada\" })\r\n          setOpen(true);\r\n          setUserLogged({ ...userLogged, empresa: data });\r\n        } else {\r\n          let data = await response.json();\r\n          setMensagem({ ...values, title: \"Erro!\", text: data })\r\n          setOpen(true);\r\n        }\r\n\r\n        \r\n\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      \r\n      document.getElementById(\"div-loading\").style.display = \"none\";\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <div className={classes.titulo}>\r\n            <h1>Cadastro de Empresa</h1>\r\n          </div>\r\n          <form>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"TipoEmpresa\"\r\n                  name=\"TipoEmpresa\"\r\n                  label=\"Tipo\"\r\n                  select\r\n                  fullWidth\r\n                  value={values.TipoEmpresa}\r\n                  onChange={handleChange}\r\n                >\r\n                  <MenuItem value=\"1\">Física</MenuItem>\r\n                  <MenuItem value=\"2\">Jurídica</MenuItem>\r\n                </TextField>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={2}>\r\n                <FormLabel>Ativa?</FormLabel>\r\n\r\n                <Switch\r\n                  color=\"primary\"\r\n                  name=\"Ativo\"\r\n                  value={values.Ativo}\r\n                  checked={values.Ativo}\r\n                  onChange={handleCheckChange}\r\n                  inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n\r\n\r\n            </Grid>\r\n\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"RazaoSocial\"\r\n                  name=\"RazaoSocial\"\r\n                  label=\"Nome\"\r\n                  fullWidth\r\n                  onChange={handleChange}\r\n                  value={values.RazaoSocial}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"CNPJ_CPF\"\r\n                  name=\"CNPJ_CPF\"\r\n                  label={\r\n                    values.TipoEmpresa == \"1\"\r\n                      ? \"CPF\"\r\n                      : values.TipoEmpresa == \"2\"\r\n                        ? \"CNPJ\"\r\n                        : \"CNPJ OU CPF\"\r\n                  }\r\n                  fullWidth\r\n\r\n                  onChange={(e) => { values.TipoEmpresa == \"1\" ? handleChange(cpfMask(e)) : handleChange(cnpjMask(e)) }}\r\n                  value={values.CNPJ_CPF}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"Telefone\"\r\n                  name=\"Telefone\"\r\n                  label=\"Telefone\"\r\n                  fullWidth\r\n                  onChange={(e) => { handleChange(phoneMask(e)) }}\r\n                  value={values.Telefone}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"Endereco.Logradouro\"\r\n                  name=\"Logradouro\"\r\n                  onChange={handlePessoa}\r\n                  value={values.Endereco.Logradouro}\r\n                  label=\"Logradouro\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={1}>\r\n                <TextField\r\n                  id=\"Endereco.Numero\"\r\n                  name=\"Numero\"\r\n                  label=\"Nº\"\r\n                  onChange={(e) => { handlePessoa(onlyNumbersMax5(e)) }}\r\n                  value={values.Endereco.Numero}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={3}>\r\n                <TextField\r\n                  id=\"Endereco.Complemento\"\r\n                  name=\"Complemento\"\r\n                  label=\"Complemento\"\r\n                  onChange={handlePessoa}\r\n                  value={values.Endereco.Complemento}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Endereco.Cidade\"\r\n                  name=\"Cidade\"\r\n                  label=\"Cidade\"\r\n                  onChange={handlePessoa}\r\n                  value={values.Endereco.Cidade}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Endereco.Bairro\"\r\n                  name=\"Bairro\"\r\n                  onChange={handlePessoa}\r\n                  value={values.Endereco.Bairro}\r\n                  label=\"Bairro\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Endereco.Estado\"\r\n                  name=\"Estado\"\r\n                  label=\"Estado\"\r\n                  onChange={handlePessoa}\r\n                  value={values.Endereco.Estado}\r\n                  fullWidth\r\n                  select\r\n                >\r\n                  <MenuItem value=\"AC\">Acre</MenuItem>\r\n                  <MenuItem value=\"AL\">Alagoas</MenuItem>\r\n                  <MenuItem value=\"AP\">Amapá</MenuItem>\r\n                  <MenuItem value=\"AM\">Amazonas</MenuItem>\r\n                  <MenuItem value=\"BA\">Bahia</MenuItem>\r\n                  <MenuItem value=\"CE\">Ceará</MenuItem>\r\n                  <MenuItem value=\"DF\">Distrito Federal</MenuItem>\r\n                  <MenuItem value=\"ES\">Espírito Santo</MenuItem>\r\n                  <MenuItem value=\"GO\">Goiás</MenuItem>\r\n                  <MenuItem value=\"MA\">Maranhão</MenuItem>\r\n                  <MenuItem value=\"MT\">Mato Grosso</MenuItem>\r\n                  <MenuItem value=\"MS\">Mato Grosso do Sul</MenuItem>\r\n                  <MenuItem value=\"MG\">Minas Gerais</MenuItem>\r\n                  <MenuItem value=\"PA\">Pará</MenuItem>\r\n                  <MenuItem value=\"PB\">Paraíba</MenuItem>\r\n                  <MenuItem value=\"PR\">Paraná</MenuItem>\r\n                  <MenuItem value=\"PE\">Pernambuco</MenuItem>\r\n                  <MenuItem value=\"PI\">Piauí</MenuItem>\r\n                  <MenuItem value=\"RJ\">Rio de Janeiro</MenuItem>\r\n                  <MenuItem value=\"RN\">Rio Grande do Norte</MenuItem>\r\n                  <MenuItem value=\"RS\">Rio Grande do Sul</MenuItem>\r\n                  <MenuItem value=\"RO\">Rondônia</MenuItem>\r\n                  <MenuItem value=\"RR\">Roraima</MenuItem>\r\n                  <MenuItem value=\"SC\">Santa Catarina</MenuItem>\r\n                  <MenuItem value=\"SP\">São Paulo</MenuItem>\r\n                  <MenuItem value=\"SE\">Sergipe</MenuItem>\r\n                  <MenuItem value=\"TO\">Tocantins</MenuItem>\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Endereco.CEP\"\r\n                  name=\"CEP\"\r\n                  label=\"CEP\"\r\n                  onChange={(e) => { handlePessoa(cepMask(e)) }}\r\n                  value={values.Endereco.CEP}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <br></br>\r\n                <div className={classes.subtitulo}>\r\n                  <h4>Dados Usuário</h4>\r\n                  <Divider />\r\n                </div>\r\n                <Grid item xs={12} sm={4}>\r\n                  <FormLabel>Usar dados da empresa?</FormLabel>\r\n\r\n                  <Switch\r\n                    color=\"primary\"\r\n                    name=\"UsarDados\"\r\n                    value={values.UsarDados}\r\n                    checked={values.UsarDados}\r\n                    disabled={disableFields}\r\n                    onChange={funcUsarDadosEmpresa}\r\n                    inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"Pessoa.Nome\"\r\n                  name=\"Nome\"\r\n                  label=\"Nome\"\r\n                  fullWidth\r\n                  disabled={disableFields}\r\n                  onChange={(e) => { handlePessoa(onlyLetters(e)) }}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={\r\n                    values.UsarDados ? values.RazaoSocial : values.Pessoa.Nome\r\n                  }\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"Pessoa.CPF\"\r\n                  name=\"CPF\"\r\n                  label=\"CPF\"\r\n                  fullWidth\r\n                  disabled={disableFields}\r\n                  onChange={(e) => { handlePessoa(cpfMask(e)) }}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  value={\r\n                    values.UsarDados ? values.CNPJ_CPF : values.Pessoa.CPF\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={3}>\r\n                <TextField\r\n                  id=\"Pessoa.DataNascimento\"\r\n                  name=\"DataNascimento\"\r\n                  label=\"Data Nascimento\"\r\n                  type=\"date\"\r\n                  onChange={handlePessoa}\r\n                  disabled={disableFields}\r\n                  value={values.Pessoa.DataNascimento}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  id=\"Pessoa.Email\"\r\n                  name=\"Email\"\r\n                  label=\"E-mail\"\r\n                  disabled={disableFields}\r\n                  fullWidth\r\n                  onChange={handlePessoa}\r\n                  value={values.Pessoa.Email}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={2}>\r\n                <TextField\r\n                  id=\"Pessoa.Telefone\"\r\n                  name=\"Telefone\"\r\n                  label=\"Telefone\"\r\n                  disabled={disableFields}\r\n                  fullWidth\r\n                  onChange={(e) => { handlePessoa(phoneMask(e)) }}\r\n                  value={\r\n                    values.UsarDados ? values.Telefone : values.Pessoa.Telefone\r\n                  }\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <div className={classes.buttons}>\r\n              {editando\r\n                ? false\r\n                : <Button\r\n                  variant=\"contained\"\r\n                  color=\"inherit\"\r\n                  className={classes.button}\r\n                >\r\n                  Limpar\r\n                </Button>}\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n                className={classes.button}\r\n              >\r\n                {editando ? \"Atualizar\" : \"Cadastrar\"}\r\n              </Button>\r\n\r\n            </div>\r\n          </form>\r\n          <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogTitle id=\"alert-dialog-title\">{mensagem.title}</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-description\">\r\n                {mensagem.text}\r\n              </DialogContentText>\r\n            </DialogContent>\r\n\r\n            {(mensagem.title == \"Sucesso!\") ?\r\n              <Button onClick={() => { handleClose(); history.push(\"/empresas\"); }}>Ok</Button>\r\n              : <Button onClick={handleClose}>Ok</Button>}\r\n\r\n          </Dialog>\r\n        </Paper>\r\n      </main>\r\n      <Loader />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CadastroEmpresa;\r\n","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Financeiro\\CadastroFinanceiro.jsx",["357","358","359","360","361","362","363","364","365","366","367","368","369","370"],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Home\\Home.jsx",[],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Contratos\\Contratos.jsx",["371","372","373","374","375","376","377","378"],"import React, { useContext } from \"react\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Button } from \"@material-ui/core\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport { url } from \"../../../src/variaveis\";\r\nimport CadastroContrato from \"../Contratos/CadastroContrato\";\r\n\r\nfunction Contratos() {\r\n  const { token, userLogged } = useContext(StoreContext);\r\n\r\n  const history = useHistory();\r\n\r\n  const classes = useStyles();\r\n\r\n  function novaMateria(){\r\n    history.push(\"/cadastroMateria\")\r\n  }\r\n\r\n  function editarMateria(id){\r\n    history.push(`/cadastroMateria/${id}`)\r\n  }\r\n\r\n  return (         \r\n        <div className=\"lista-materias\">\r\n          <h1>Contrato Modelo</h1>         \r\n          <CadastroContrato />\r\n          \r\n        </div>     \r\n    \r\n  );\r\n}\r\n\r\nexport default Contratos;\r\n","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Contratos\\CadastroContrato.jsx",["379","380","381","382","383","384","385","386","387"],"import { Grid, Paper, TextareaAutosize, FormControlLabel, Checkbox, Button,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogContentText,\r\n    Dialog } from \"@material-ui/core\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport StoreContext from \"../../contexts/StoreContext\";\r\nimport useStyles from \"../Styles/useStyles\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { url } from \"../../variaveis\";\r\n\r\n\r\nfunction CadastroContrato() {\r\n\r\n    const classes = useStyles();\r\n    const { token, userLogged } = useContext(StoreContext);\r\n    const retornoContrato = useFetch(`${url}/api/v1/contratos/empresa/${userLogged.empresaId}`, \"get\", token)\r\n    const [clausulas, setClausulas] = useState([])\r\n    const [contrato, setContrato] = useState();\r\n    const alertas = {\r\n        text: \"\",\r\n        title: \"\"\r\n      }\r\n    \r\n    const [mensagem, setMensagem] = useState(alertas);\r\n    const [open, setOpen] = useState(false);\r\n    const history = useHistory();\r\n    \r\n    const checkAdmin = () => {\r\n        if(userLogged.tipoUsuario == 1){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    };\r\n\r\n    useEffect(\r\n        function () {\r\n            if (retornoContrato.data != null) {\r\n                const contratoValues = {\r\n                    ContratoId: retornoContrato.data.contratoId,\r\n                    EmpresaId: userLogged.empresaId\r\n                }\r\n                setContrato(contratoValues);\r\n                var clausulasExistentes = []                \r\n                retornoContrato.data.clausulas.map((clausula => (\r\n                    clausulasExistentes.push({ \r\n                        Id: clausula.id,\r\n                        Nome: clausula.nome,\r\n                        Descricao: clausula.descricao,\r\n                        ContratoId: clausula.ContratoId,\r\n                        Ativa: clausula.ativa\r\n                    })\r\n                )))\r\n                setClausulas(clausulasExistentes);\r\n            }\r\n        }, [retornoContrato]\r\n    );\r\n\r\n    useEffect(\r\n        function() {\r\nconsole.log(\"clausula\", clausulas);\r\n        },[clausulas]\r\n    )\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n\r\n      const handleClausula = (e) => {\r\n        const { name, value, checked } = e.target;\r\n        var clausulasExistentes = [...clausulas];  \r\n        var clausulaIndex = clausulas.findIndex(i => i.Id == name);\r\n        if (checked === false) {\r\n            clausulasExistentes[clausulaIndex].Ativa = false;\r\n            setClausulas(clausulasExistentes);\r\n        }\r\n        else if (checked === true) {\r\n            clausulasExistentes[clausulaIndex].Ativa = true;\r\n            setClausulas(clausulasExistentes);\r\n        }\r\n    };  \r\n\r\n    function checkChange(id) {\r\n        var checkClausulas = clausulas;\r\n        var clausulasId = []\r\n        checkClausulas.map((clausula, i) => (\r\n            clausula.Ativa == true ? clausulasId.push(clausula.Id) : false                        \r\n        ))\r\n        if (clausulasId.find(e => e == id)) {\r\n            return true\r\n        } else\r\n            return false\r\n    }\r\n   \r\n\r\n    function addClausula(){        \r\n        var clausulasExistentes = [...clausulas];                \r\n        clausulasExistentes.push({ \r\n                        Id: 1,\r\n                        Nome: \"Nova cláusula\",\r\n                        Descricao: \"descrição\",\r\n                        ContratoId: 0,\r\n                        Ativa: false\r\n                    });                                   \r\n        setClausulas(clausulasExistentes);   \r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        var clausulasExistentes = clausulas;\r\n        var clausulaIndex = clausulas.findIndex(i => i.Id == name);\r\n        clausulasExistentes[clausulaIndex].descricao = value;\r\n        setClausulas(clausulasExistentes);\r\n      };\r\n\r\n    function handleSubmit(e) {  \r\n        var ContratoId = contrato.ContratoId;\r\n        var EmpresaId = contrato.EmpresaId;\r\n        var request = {            \r\n            clausulas,\r\n            ContratoId,\r\n            EmpresaId\r\n        }\r\n\r\n        const response = fetch(`${url}/api/v1/contratos/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                Authorization: 'Bearer ' + token,\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(request),\r\n        })\r\n        .then((response) => {     \r\n              setMensagem({ title: \"Sucesso!\", text: \"Contrato atualizado.\" })\r\n              setOpen(true);         \r\n          })\r\n         .catch((response) => {\r\n             setMensagem({ title: \"Erro!\", text: \"Erro ao atualizar cadastro.\" })\r\n             setOpen(true);\r\n          });\r\n\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <main className={classes.layout}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={8}>\r\n                        <div className={classes.stepper}>\r\n                            <h2>Selecione quais cláusulas deseja adicionar no contrato:</h2>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n                \r\n                <form>\r\n                    <Grid container spacing={3}>                       \r\n                   {clausulas.map((clausula,i) => (\r\n                       \r\n                       <>\r\n                      <Grid item xs={12} sm={2}>\r\n                      <FormControlLabel\r\n                          control={\r\n                              <Checkbox\r\n                                  key={clausula.Id}\r\n                                  name={clausula.Id}\r\n                                  value={clausula.Id}\r\n                                  onChange={handleClausula}\r\n                                  checked={checkChange(clausula.Id)}\r\n                              />\r\n                          }\r\n                      />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={10}>\r\n                                            <TextareaAutosize\r\n                                                key={clausula.Id}\r\n                                                minRows={4}\r\n                                                aria-label=\"maximum height\"\r\n                                                placeholder=\"Maximum 4 rows\"\r\n                                                defaultValue={clausula.Nome + \" \" + clausula.Descricao}\r\n                                                disabled={checkAdmin() === true ? false : true}\r\n                                                name={clausula.Id}\r\n                                                style={{ width: 700 }}\r\n                                                onChange={handleChange}\r\n                                            />\r\n                                        </Grid>\r\n                      </>\r\n                  \r\n                   ))}\r\n\r\n                    </Grid>\r\n                    <div className={classes.button}>\r\n\r\n                    {checkAdmin() === true ? \r\n                        <Button\r\n                        variant=\"contained\"\r\n                        color=\"warning\"                            \r\n                        onClick={addClausula}\r\n                        className={classes.button}\r\n                    >\r\n                        Adicionar\r\n                    </Button>\r\n\r\n                        : false}\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"                            \r\n                            onClick={handleSubmit}\r\n                            className={classes.button}\r\n                        >\r\n                            Salvar\r\n                        </Button>\r\n                        \r\n                        \r\n                    </div>\r\n                </form>\r\n\r\n                <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{mensagem.title}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {mensagem.text}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          {<Button onClick={() => { handleClose(); history.push(\"/contratos\"); }}>Ok</Button>}\r\n        </Dialog>\r\n            </main>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CadastroContrato;","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\utils\\storage.js",[],"C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Usuario\\CriarSenha.jsx",["388","389","390","391"],"import React, {useState} from \"react\";\r\nimport Loader from \"../../utils/loader\";\r\nimport { url } from \"../../../src/variaveis\";\r\nimport { TextField, Button, DialogTitle, DialogContent, DialogContentText, Dialog } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport \"./CriarSenha.css\";\r\n\r\nconst CriarSenha = () => {\r\n\r\n    const initialValues = {\r\n        senha: \"\",\r\n        senhaConfere: \"\"        \r\n    }\r\n    const [values,setValues] = useState(initialValues);\r\n    const [open, setOpen] = useState(false);\r\n    const alertas = {\r\n        text: \"\",\r\n        title: \"\"\r\n      }\r\n    const [mensagem, setMensagem] = useState(alertas);\r\n    const history = useHistory();\r\n\r\n    function handleClose() {\r\n        setOpen(false);\r\n      };\r\n   \r\n    function handleChange(e) {\r\n        const { value, name } = e.target;\r\n        setValues({\r\n          ...values,\r\n          [name]: value,\r\n        });\r\n      };        \r\n    \r\n    function onSubmit(event) {\r\n        debugger;\r\n        event.preventDefault();\r\n        if (values.senha != values.senhaConfere) {\r\n            setMensagem({ ...values, title: \"Alerta!\", text: \"As senhas informadas devem ser iguais\" });\r\n            setOpen(true);            \r\n        } else {\r\n            document.getElementById(\"div-loading\").style.display = \"block\";\r\n            var userData = window.location.search;\r\n            var urlParams = new URLSearchParams(userData);\r\n            const body = {\r\n                UsuarioEmail: urlParams.get('email'),\r\n                ResetToken : urlParams.get('token'),       \r\n                NewPassword: values.senha,   \r\n            }\r\n            body.ResetToken = body.ResetToken.replace(' ','+');\r\n            \r\n            const response = fetch(`${url}/api/v1/login/resetPassword`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body),\r\n            })\r\n            .then( async (response) => {\r\n                if(response.ok){\r\n                  let data = await response.json();\r\n                  setMensagem({ ...values, title: \"Sucesso!\", text: data })\r\n                  setOpen(true);\r\n                }else{\r\n                  let data = await response.json();\r\n                  setMensagem({ ...values, title: \"Erro!\", text: data })\r\n                  setOpen(true);\r\n                }\r\n              })\r\n              .catch((err) => {\r\n                  console.log(err);\r\n              })\r\n              document.getElementById(\"div-loading\").style.display = \"none\";  \r\n        }\r\n     };\r\n\r\n    return (\r\n        \r\n            <>\r\n            <img className=\"logotipo\" src=\"https://i.imgur.com/LbUVpGb.png\" />\r\n            <div className=\"wrapper\">\r\n            <div className=\"user-login\">\r\n                <h1 className=\"user-login__title\">Criar nova senha</h1>\r\n                <form>   \r\n                <div className=\"user-login__form-control\">                 \r\n                    <TextField\r\n                        id=\"password\"\r\n                        name=\"senha\"\r\n                        label=\"Senha\"\r\n                        type=\"password\"\r\n                        required={true}\r\n                        onChange={handleChange}\r\n                        value={values.senha}\r\n                        variant=\"outlined\"\r\n                        className=\"user-login__form-control\" />\r\n                </div>\r\n                <div className=\"user-login__form-control\">\r\n                    <TextField\r\n                        id=\"password\"\r\n                        name=\"senhaConfere\"\r\n                        label=\"Confirme a Senha\"\r\n                        type=\"password\"\r\n                        required={true}\r\n                        onChange={handleChange}\r\n                        value={values.senhaConfere}\r\n                        variant=\"outlined\"\r\n                        className=\"user-login__form-control\" />\r\n                </div>                   \r\n                <button className=\"user-login__submit-button\" onClick={onSubmit}>Confirmar</button>\r\n                </form>\r\n            </div>\r\n            <Loader />\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{mensagem.title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {mensagem.text}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                {(mensagem.title == \"Sucesso!\") ?     \r\n            <Button onClick={() => { handleClose(); history.push(\"/login\"); }}>Ok</Button>\r\n             : <Button onClick={handleClose}>Ok</Button>} \r\n\r\n            </Dialog>\r\n        </div>\r\n        </> \r\n\r\n             \r\n    )\r\n}\r\n\r\nexport default CriarSenha;","C:\\Users\\spw\\source\\repos\\raphaelfogaca\\MeuAlunoReact\\MeuAlunoReact\\src\\views\\Usuario\\RecuperarSenha.jsx",["392","393","394"],"import React, {useState} from \"react\";\r\nimport Loader from \"../../utils/loader\";\r\nimport { url } from \"../../../src/variaveis\";\r\nimport { Button, DialogTitle, DialogContent, DialogContentText, Dialog } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router\";\r\n\r\n\r\nconst RecuperarSenha = () => {\r\n\r\n    const initialValues = {\r\n        email: \"\"\r\n    }\r\n    const [values,setValues] = useState(initialValues);\r\n    const [open, setOpen] = useState(false);\r\n    const alertas = {\r\n        text: \"\",\r\n        title: \"\"\r\n      }\r\n    const [mensagem, setMensagem] = useState(alertas);\r\n    const history = useHistory();\r\n\r\n    function handleClose() {\r\n        setOpen(false);\r\n      };\r\n   \r\n    function handleChange(e) {\r\n        const { value, name } = e.target;\r\n        setValues({\r\n          ...values,\r\n          [name]: value,\r\n        });\r\n      };        \r\n    \r\n    function onSubmit(event) {\r\n        event.preventDefault();\r\n        if (values.email == \"\") {\r\n            setMensagem({ ...values, title: \"Alerta!\", text: \"Informe seu e-mail\" });\r\n            setOpen(true);            \r\n        } else {\r\n            document.getElementById(\"div-loading\").style.display = \"block\";\r\n            const body = {\r\n                UsuarioEmail: values.email,\r\n                \r\n            }\r\n            const response = fetch(`${url}/api/v1/login/forgotpassword`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body),\r\n            })\r\n            .then( async (response) => {\r\n                if(response.ok){\r\n                  let data = await response.json();\r\n                  setMensagem({ ...values, title: \"Sucesso!\", text: data })\r\n                  setOpen(true);\r\n                }else{\r\n                  let data = await response.json();\r\n                  setMensagem({ ...values, title: \"Erro!\", text: data })\r\n                  setOpen(true);\r\n                }\r\n              })\r\n              .catch((err) => {\r\n                  console.log(err);\r\n              })\r\n              document.getElementById(\"div-loading\").style.display = \"none\";  \r\n        }\r\n     };\r\n\r\n    return (\r\n        \r\n            <>\r\n            <div className=\"wrapper\">\r\n            <div className=\"user-login\">\r\n                <h1 className=\"user-login__title\">Recuperar Senha</h1>\r\n                <form>\r\n                    <div className=\"user-login__form-control\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            id=\"email\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            onChange={handleChange}\r\n                            value={values.email}\r\n                            required />\r\n                    </div>                    \r\n                    <button onClick={onSubmit}>Confirmar</button>\r\n                </form>\r\n            </div>\r\n            <Loader />\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{mensagem.title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {mensagem.text}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                {(mensagem.title == \"Sucesso!\") ?     \r\n            <Button onClick={() => { handleClose(); history.push(\"/login\"); }}>Ok</Button>\r\n             : <Button onClick={handleClose}>Ok</Button>} \r\n\r\n            </Dialog>\r\n        </div>\r\n        </> \r\n\r\n             \r\n    )\r\n}\r\n\r\nexport default RecuperarSenha;",{"ruleId":"395","replacedBy":"396"},{"ruleId":"397","replacedBy":"398"},{"ruleId":"399","severity":1,"message":"400","line":2,"column":8,"nodeType":"401","messageId":"402","endLine":2,"endColumn":12},{"ruleId":"399","severity":1,"message":"403","line":5,"column":8,"nodeType":"401","messageId":"402","endLine":5,"endColumn":16},{"ruleId":"399","severity":1,"message":"404","line":10,"column":5,"nodeType":"401","messageId":"402","endLine":10,"endColumn":9},{"ruleId":"405","severity":1,"message":"406","line":69,"column":27,"nodeType":"407","messageId":"408","endLine":69,"endColumn":29},{"ruleId":"399","severity":1,"message":"409","line":84,"column":11,"nodeType":"401","messageId":"402","endLine":84,"endColumn":19},{"ruleId":"410","severity":1,"message":"411","line":110,"column":7,"nodeType":"412","endLine":110,"endColumn":73},{"ruleId":"413","severity":1,"message":"414","line":142,"column":13,"nodeType":"412","endLine":142,"endColumn":82},{"ruleId":"405","severity":1,"message":"406","line":158,"column":26,"nodeType":"407","messageId":"408","endLine":158,"endColumn":28},{"ruleId":"405","severity":1,"message":"406","line":171,"column":26,"nodeType":"407","messageId":"408","endLine":171,"endColumn":28},{"ruleId":"399","severity":1,"message":"415","line":22,"column":3,"nodeType":"401","messageId":"402","endLine":22,"endColumn":19},{"ruleId":"399","severity":1,"message":"416","line":201,"column":19,"nodeType":"401","messageId":"402","endLine":201,"endColumn":24},{"ruleId":"399","severity":1,"message":"417","line":243,"column":13,"nodeType":"401","messageId":"402","endLine":243,"endColumn":17},{"ruleId":"399","severity":1,"message":"418","line":247,"column":11,"nodeType":"401","messageId":"402","endLine":247,"endColumn":16},{"ruleId":"399","severity":1,"message":"419","line":249,"column":9,"nodeType":"401","messageId":"402","endLine":249,"endColumn":18},{"ruleId":"405","severity":1,"message":"420","line":254,"column":63,"nodeType":"407","messageId":"408","endLine":254,"endColumn":65},{"ruleId":"405","severity":1,"message":"406","line":272,"column":28,"nodeType":"407","messageId":"408","endLine":272,"endColumn":30},{"ruleId":"399","severity":1,"message":"409","line":281,"column":11,"nodeType":"401","messageId":"402","endLine":281,"endColumn":19},{"ruleId":"405","severity":1,"message":"406","line":650,"column":27,"nodeType":"407","messageId":"408","endLine":650,"endColumn":29},{"ruleId":"399","severity":1,"message":"421","line":9,"column":7,"nodeType":"401","messageId":"402","endLine":9,"endColumn":18},{"ruleId":"399","severity":1,"message":"422","line":10,"column":9,"nodeType":"401","messageId":"402","endLine":10,"endColumn":14},{"ruleId":"405","severity":1,"message":"406","line":11,"column":28,"nodeType":"407","messageId":"408","endLine":11,"endColumn":30},{"ruleId":"399","severity":1,"message":"423","line":2,"column":13,"nodeType":"401","messageId":"402","endLine":2,"endColumn":20},{"ruleId":"399","severity":1,"message":"424","line":4,"column":13,"nodeType":"401","messageId":"402","endLine":4,"endColumn":20},{"ruleId":"399","severity":1,"message":"425","line":1,"column":31,"nodeType":"401","messageId":"402","endLine":1,"endColumn":41},{"ruleId":"399","severity":1,"message":"426","line":11,"column":11,"nodeType":"401","messageId":"402","endLine":11,"endColumn":18},{"ruleId":"399","severity":1,"message":"427","line":13,"column":14,"nodeType":"401","messageId":"402","endLine":13,"endColumn":26},{"ruleId":"428","severity":1,"message":"429","line":20,"column":15,"nodeType":"430","endLine":35,"endColumn":6},{"ruleId":"428","severity":1,"message":"431","line":35,"column":7,"nodeType":"432","endLine":35,"endColumn":19,"suggestions":"433"},{"ruleId":"399","severity":1,"message":"434","line":1,"column":8,"nodeType":"401","messageId":"402","endLine":1,"endColumn":13},{"ruleId":"399","severity":1,"message":"435","line":3,"column":3,"nodeType":"401","messageId":"402","endLine":3,"endColumn":8},{"ruleId":"399","severity":1,"message":"436","line":4,"column":3,"nodeType":"401","messageId":"402","endLine":4,"endColumn":12},{"ruleId":"399","severity":1,"message":"437","line":5,"column":3,"nodeType":"401","messageId":"402","endLine":5,"endColumn":9},{"ruleId":"399","severity":1,"message":"438","line":6,"column":3,"nodeType":"401","messageId":"402","endLine":6,"endColumn":6},{"ruleId":"399","severity":1,"message":"439","line":7,"column":3,"nodeType":"401","messageId":"402","endLine":7,"endColumn":10},{"ruleId":"399","severity":1,"message":"440","line":8,"column":3,"nodeType":"401","messageId":"402","endLine":8,"endColumn":13},{"ruleId":"399","severity":1,"message":"441","line":11,"column":3,"nodeType":"401","messageId":"402","endLine":11,"endColumn":13},{"ruleId":"399","severity":1,"message":"442","line":17,"column":10,"nodeType":"401","messageId":"402","endLine":17,"endColumn":19},{"ruleId":"399","severity":1,"message":"443","line":23,"column":9,"nodeType":"401","messageId":"402","endLine":23,"endColumn":16},{"ruleId":"399","severity":1,"message":"417","line":38,"column":15,"nodeType":"401","messageId":"402","endLine":38,"endColumn":19},{"ruleId":"405","severity":1,"message":"406","line":40,"column":16,"nodeType":"407","messageId":"408","endLine":40,"endColumn":18},{"ruleId":"399","severity":1,"message":"438","line":2,"column":10,"nodeType":"401","messageId":"402","endLine":2,"endColumn":13},{"ruleId":"399","severity":1,"message":"442","line":1,"column":27,"nodeType":"401","messageId":"402","endLine":1,"endColumn":36},{"ruleId":"399","severity":1,"message":"444","line":2,"column":18,"nodeType":"401","messageId":"402","endLine":2,"endColumn":22},{"ruleId":"399","severity":1,"message":"403","line":2,"column":24,"nodeType":"401","messageId":"402","endLine":2,"endColumn":32},{"ruleId":"399","severity":1,"message":"435","line":2,"column":34,"nodeType":"401","messageId":"402","endLine":2,"endColumn":39},{"ruleId":"399","severity":1,"message":"436","line":2,"column":41,"nodeType":"401","messageId":"402","endLine":2,"endColumn":50},{"ruleId":"399","severity":1,"message":"445","line":7,"column":10,"nodeType":"401","messageId":"402","endLine":7,"endColumn":16},{"ruleId":"399","severity":1,"message":"443","line":14,"column":9,"nodeType":"401","messageId":"402","endLine":14,"endColumn":16},{"ruleId":"399","severity":1,"message":"446","line":28,"column":10,"nodeType":"401","messageId":"402","endLine":28,"endColumn":16},{"ruleId":"399","severity":1,"message":"447","line":28,"column":18,"nodeType":"401","messageId":"402","endLine":28,"endColumn":27},{"ruleId":"399","severity":1,"message":"416","line":77,"column":22,"nodeType":"401","messageId":"402","endLine":77,"endColumn":27},{"ruleId":"405","severity":1,"message":"406","line":96,"column":27,"nodeType":"407","messageId":"408","endLine":96,"endColumn":29},{"ruleId":"405","severity":1,"message":"406","line":99,"column":33,"nodeType":"407","messageId":"408","endLine":99,"endColumn":35},{"ruleId":"405","severity":1,"message":"406","line":102,"column":32,"nodeType":"407","messageId":"408","endLine":102,"endColumn":34},{"ruleId":"405","severity":1,"message":"406","line":105,"column":29,"nodeType":"407","messageId":"408","endLine":105,"endColumn":31},{"ruleId":"399","severity":1,"message":"409","line":121,"column":11,"nodeType":"401","messageId":"402","endLine":121,"endColumn":19},{"ruleId":"399","severity":1,"message":"448","line":134,"column":13,"nodeType":"401","messageId":"402","endLine":134,"endColumn":17},{"ruleId":"405","severity":1,"message":"406","line":269,"column":27,"nodeType":"407","messageId":"408","endLine":269,"endColumn":29},{"ruleId":"405","severity":1,"message":"406","line":269,"column":80,"nodeType":"407","messageId":"408","endLine":269,"endColumn":82},{"ruleId":"399","severity":1,"message":"449","line":1,"column":50,"nodeType":"401","messageId":"402","endLine":1,"endColumn":59},{"ruleId":"399","severity":1,"message":"450","line":2,"column":10,"nodeType":"401","messageId":"402","endLine":2,"endColumn":16},{"ruleId":"399","severity":1,"message":"451","line":2,"column":18,"nodeType":"401","messageId":"402","endLine":2,"endColumn":23},{"ruleId":"399","severity":1,"message":"452","line":2,"column":25,"nodeType":"401","messageId":"402","endLine":2,"endColumn":29},{"ruleId":"399","severity":1,"message":"453","line":2,"column":31,"nodeType":"401","messageId":"402","endLine":2,"endColumn":40},{"ruleId":"399","severity":1,"message":"454","line":2,"column":42,"nodeType":"401","messageId":"402","endLine":2,"endColumn":52},{"ruleId":"399","severity":1,"message":"455","line":6,"column":8,"nodeType":"401","messageId":"402","endLine":6,"endColumn":16},{"ruleId":"399","severity":1,"message":"456","line":7,"column":8,"nodeType":"401","messageId":"402","endLine":7,"endColumn":17},{"ruleId":"399","severity":1,"message":"457","line":8,"column":8,"nodeType":"401","messageId":"402","endLine":8,"endColumn":24},{"ruleId":"399","severity":1,"message":"458","line":9,"column":8,"nodeType":"401","messageId":"402","endLine":9,"endColumn":25},{"ruleId":"399","severity":1,"message":"459","line":10,"column":8,"nodeType":"401","messageId":"402","endLine":10,"endColumn":17},{"ruleId":"399","severity":1,"message":"460","line":10,"column":21,"nodeType":"401","messageId":"402","endLine":10,"endColumn":38},{"ruleId":"399","severity":1,"message":"461","line":10,"column":40,"nodeType":"401","messageId":"402","endLine":10,"endColumn":58},{"ruleId":"399","severity":1,"message":"441","line":19,"column":3,"nodeType":"401","messageId":"402","endLine":19,"endColumn":13},{"ruleId":"399","severity":1,"message":"462","line":20,"column":3,"nodeType":"401","messageId":"402","endLine":20,"endColumn":15},{"ruleId":"399","severity":1,"message":"440","line":26,"column":3,"nodeType":"401","messageId":"402","endLine":26,"endColumn":13},{"ruleId":"399","severity":1,"message":"463","line":27,"column":3,"nodeType":"401","messageId":"402","endLine":27,"endColumn":13},{"ruleId":"399","severity":1,"message":"464","line":31,"column":3,"nodeType":"401","messageId":"402","endLine":31,"endColumn":16},{"ruleId":"399","severity":1,"message":"465","line":33,"column":3,"nodeType":"401","messageId":"402","endLine":33,"endColumn":10},{"ruleId":"399","severity":1,"message":"466","line":36,"column":10,"nodeType":"401","messageId":"402","endLine":36,"endColumn":16},{"ruleId":"399","severity":1,"message":"467","line":37,"column":24,"nodeType":"401","messageId":"402","endLine":37,"endColumn":35},{"ruleId":"405","severity":1,"message":"406","line":77,"column":77,"nodeType":"407","messageId":"408","endLine":77,"endColumn":79},{"ruleId":"405","severity":1,"message":"406","line":87,"column":26,"nodeType":"407","messageId":"408","endLine":87,"endColumn":28},{"ruleId":"405","severity":1,"message":"406","line":90,"column":29,"nodeType":"407","messageId":"408","endLine":90,"endColumn":31},{"ruleId":"405","severity":1,"message":"406","line":93,"column":32,"nodeType":"407","messageId":"408","endLine":93,"endColumn":34},{"ruleId":"405","severity":1,"message":"406","line":96,"column":47,"nodeType":"407","messageId":"408","endLine":96,"endColumn":49},{"ruleId":"405","severity":1,"message":"406","line":101,"column":79,"nodeType":"407","messageId":"408","endLine":101,"endColumn":81},{"ruleId":"405","severity":1,"message":"406","line":106,"column":34,"nodeType":"407","messageId":"408","endLine":106,"endColumn":36},{"ruleId":"405","severity":1,"message":"406","line":106,"column":63,"nodeType":"407","messageId":"408","endLine":106,"endColumn":65},{"ruleId":"405","severity":1,"message":"406","line":106,"column":90,"nodeType":"407","messageId":"408","endLine":106,"endColumn":92},{"ruleId":"405","severity":1,"message":"406","line":107,"column":29,"nodeType":"407","messageId":"408","endLine":107,"endColumn":31},{"ruleId":"405","severity":1,"message":"406","line":111,"column":30,"nodeType":"407","messageId":"408","endLine":111,"endColumn":32},{"ruleId":"399","severity":1,"message":"468","line":130,"column":9,"nodeType":"401","messageId":"402","endLine":130,"endColumn":16},{"ruleId":"428","severity":1,"message":"469","line":182,"column":3,"nodeType":"432","endLine":182,"endColumn":20,"suggestions":"470"},{"ruleId":"399","severity":1,"message":"471","line":191,"column":17,"nodeType":"401","messageId":"402","endLine":191,"endColumn":24},{"ruleId":"399","severity":1,"message":"418","line":196,"column":24,"nodeType":"401","messageId":"402","endLine":196,"endColumn":29},{"ruleId":"399","severity":1,"message":"472","line":196,"column":31,"nodeType":"401","messageId":"402","endLine":196,"endColumn":37},{"ruleId":"405","severity":1,"message":"406","line":205,"column":8,"nodeType":"407","messageId":"408","endLine":205,"endColumn":10},{"ruleId":"399","severity":1,"message":"409","line":218,"column":9,"nodeType":"401","messageId":"402","endLine":218,"endColumn":17},{"ruleId":"405","severity":1,"message":"406","line":417,"column":25,"nodeType":"407","messageId":"408","endLine":417,"endColumn":27},{"ruleId":"405","severity":1,"message":"406","line":417,"column":66,"nodeType":"407","messageId":"408","endLine":417,"endColumn":68},{"ruleId":"399","severity":1,"message":"467","line":8,"column":10,"nodeType":"401","messageId":"402","endLine":8,"endColumn":21},{"ruleId":"399","severity":1,"message":"473","line":8,"column":23,"nodeType":"401","messageId":"402","endLine":8,"endColumn":35},{"ruleId":"399","severity":1,"message":"474","line":30,"column":14,"nodeType":"401","messageId":"402","endLine":30,"endColumn":21},{"ruleId":"399","severity":1,"message":"475","line":30,"column":23,"nodeType":"401","messageId":"402","endLine":30,"endColumn":33},{"ruleId":"405","severity":1,"message":"406","line":56,"column":20,"nodeType":"407","messageId":"408","endLine":56,"endColumn":22},{"ruleId":"399","severity":1,"message":"416","line":82,"column":19,"nodeType":"401","messageId":"402","endLine":82,"endColumn":24},{"ruleId":"399","severity":1,"message":"409","line":89,"column":11,"nodeType":"401","messageId":"402","endLine":89,"endColumn":19},{"ruleId":"405","severity":1,"message":"406","line":172,"column":27,"nodeType":"407","messageId":"408","endLine":172,"endColumn":29},{"ruleId":"405","severity":1,"message":"406","line":172,"column":68,"nodeType":"407","messageId":"408","endLine":172,"endColumn":70},{"ruleId":"399","severity":1,"message":"443","line":17,"column":9,"nodeType":"401","messageId":"402","endLine":17,"endColumn":16},{"ruleId":"399","severity":1,"message":"476","line":2,"column":29,"nodeType":"401","messageId":"402","endLine":2,"endColumn":37},{"ruleId":"399","severity":1,"message":"464","line":10,"column":3,"nodeType":"401","messageId":"402","endLine":10,"endColumn":16},{"ruleId":"399","severity":1,"message":"465","line":12,"column":3,"nodeType":"401","messageId":"402","endLine":12,"endColumn":10},{"ruleId":"399","severity":1,"message":"474","line":34,"column":12,"nodeType":"401","messageId":"402","endLine":34,"endColumn":19},{"ruleId":"399","severity":1,"message":"475","line":34,"column":21,"nodeType":"401","messageId":"402","endLine":34,"endColumn":31},{"ruleId":"405","severity":1,"message":"406","line":61,"column":19,"nodeType":"407","messageId":"408","endLine":61,"endColumn":21},{"ruleId":"405","severity":1,"message":"406","line":64,"column":33,"nodeType":"407","messageId":"408","endLine":64,"endColumn":35},{"ruleId":"405","severity":1,"message":"406","line":67,"column":30,"nodeType":"407","messageId":"408","endLine":67,"endColumn":32},{"ruleId":"405","severity":1,"message":"406","line":70,"column":28,"nodeType":"407","messageId":"408","endLine":70,"endColumn":30},{"ruleId":"399","severity":1,"message":"416","line":101,"column":23,"nodeType":"401","messageId":"402","endLine":101,"endColumn":28},{"ruleId":"399","severity":1,"message":"409","line":108,"column":15,"nodeType":"401","messageId":"402","endLine":108,"endColumn":23},{"ruleId":"405","severity":1,"message":"406","line":217,"column":27,"nodeType":"407","messageId":"408","endLine":217,"endColumn":29},{"ruleId":"405","severity":1,"message":"406","line":217,"column":65,"nodeType":"407","messageId":"408","endLine":217,"endColumn":67},{"ruleId":"399","severity":1,"message":"477","line":2,"column":110,"nodeType":"401","messageId":"402","endLine":2,"endColumn":125},{"ruleId":"399","severity":1,"message":"478","line":2,"column":127,"nodeType":"401","messageId":"402","endLine":2,"endColumn":132},{"ruleId":"399","severity":1,"message":"479","line":2,"column":134,"nodeType":"401","messageId":"402","endLine":2,"endColumn":138},{"ruleId":"399","severity":1,"message":"480","line":2,"column":140,"nodeType":"401","messageId":"402","endLine":2,"endColumn":151},{"ruleId":"399","severity":1,"message":"440","line":2,"column":153,"nodeType":"401","messageId":"402","endLine":2,"endColumn":163},{"ruleId":"428","severity":1,"message":"429","line":54,"column":13,"nodeType":"481","endLine":69,"endColumn":4},{"ruleId":"405","severity":1,"message":"406","line":61,"column":25,"nodeType":"407","messageId":"408","endLine":61,"endColumn":27},{"ruleId":"399","severity":1,"message":"482","line":71,"column":7,"nodeType":"401","messageId":"402","endLine":71,"endColumn":21},{"ruleId":"399","severity":1,"message":"447","line":83,"column":18,"nodeType":"401","messageId":"402","endLine":83,"endColumn":27},{"ruleId":"405","severity":1,"message":"406","line":108,"column":39,"nodeType":"407","messageId":"408","endLine":108,"endColumn":41},{"ruleId":"405","severity":1,"message":"406","line":108,"column":75,"nodeType":"407","messageId":"408","endLine":108,"endColumn":77},{"ruleId":"405","severity":1,"message":"406","line":108,"column":104,"nodeType":"407","messageId":"408","endLine":108,"endColumn":106},{"ruleId":"405","severity":1,"message":"406","line":109,"column":28,"nodeType":"407","messageId":"408","endLine":109,"endColumn":30},{"ruleId":"405","severity":1,"message":"406","line":109,"column":59,"nodeType":"407","messageId":"408","endLine":109,"endColumn":61},{"ruleId":"405","severity":1,"message":"420","line":136,"column":37,"nodeType":"407","messageId":"408","endLine":136,"endColumn":39},{"ruleId":"399","severity":1,"message":"409","line":145,"column":11,"nodeType":"401","messageId":"402","endLine":145,"endColumn":19},{"ruleId":"399","severity":1,"message":"409","line":174,"column":13,"nodeType":"401","messageId":"402","endLine":174,"endColumn":21},{"ruleId":"399","severity":1,"message":"409","line":196,"column":11,"nodeType":"401","messageId":"402","endLine":196,"endColumn":19},{"ruleId":"405","severity":1,"message":"406","line":212,"column":29,"nodeType":"407","messageId":"408","endLine":212,"endColumn":31},{"ruleId":"405","severity":1,"message":"406","line":228,"column":26,"nodeType":"407","messageId":"408","endLine":228,"endColumn":28},{"ruleId":"405","severity":1,"message":"406","line":244,"column":34,"nodeType":"407","messageId":"408","endLine":244,"endColumn":36},{"ruleId":"405","severity":1,"message":"406","line":262,"column":87,"nodeType":"407","messageId":"408","endLine":262,"endColumn":89},{"ruleId":"399","severity":1,"message":"483","line":9,"column":3,"nodeType":"401","messageId":"402","endLine":9,"endColumn":9},{"ruleId":"399","severity":1,"message":"464","line":16,"column":3,"nodeType":"401","messageId":"402","endLine":16,"endColumn":16},{"ruleId":"399","severity":1,"message":"465","line":18,"column":3,"nodeType":"401","messageId":"402","endLine":18,"endColumn":10},{"ruleId":"399","severity":1,"message":"473","line":25,"column":28,"nodeType":"401","messageId":"402","endLine":25,"endColumn":40},{"ruleId":"399","severity":1,"message":"484","line":25,"column":83,"nodeType":"401","messageId":"402","endLine":25,"endColumn":94},{"ruleId":"399","severity":1,"message":"474","line":42,"column":10,"nodeType":"401","messageId":"402","endLine":42,"endColumn":17},{"ruleId":"399","severity":1,"message":"475","line":42,"column":19,"nodeType":"401","messageId":"402","endLine":42,"endColumn":29},{"ruleId":"399","severity":1,"message":"485","line":46,"column":9,"nodeType":"401","messageId":"402","endLine":46,"endColumn":15},{"ruleId":"405","severity":1,"message":"406","line":94,"column":28,"nodeType":"407","messageId":"408","endLine":94,"endColumn":30},{"ruleId":"405","severity":1,"message":"406","line":97,"column":35,"nodeType":"407","messageId":"408","endLine":97,"endColumn":37},{"ruleId":"405","severity":1,"message":"406","line":100,"column":32,"nodeType":"407","messageId":"408","endLine":100,"endColumn":34},{"ruleId":"405","severity":1,"message":"406","line":103,"column":32,"nodeType":"407","messageId":"408","endLine":103,"endColumn":34},{"ruleId":"405","severity":1,"message":"406","line":106,"column":43,"nodeType":"407","messageId":"408","endLine":106,"endColumn":45},{"ruleId":"405","severity":1,"message":"406","line":109,"column":39,"nodeType":"407","messageId":"408","endLine":109,"endColumn":41},{"ruleId":"405","severity":1,"message":"406","line":112,"column":39,"nodeType":"407","messageId":"408","endLine":112,"endColumn":41},{"ruleId":"405","severity":1,"message":"406","line":115,"column":39,"nodeType":"407","messageId":"408","endLine":115,"endColumn":41},{"ruleId":"405","severity":1,"message":"406","line":118,"column":39,"nodeType":"407","messageId":"408","endLine":118,"endColumn":41},{"ruleId":"405","severity":1,"message":"406","line":121,"column":36,"nodeType":"407","messageId":"408","endLine":121,"endColumn":38},{"ruleId":"405","severity":1,"message":"406","line":124,"column":35,"nodeType":"407","messageId":"408","endLine":124,"endColumn":37},{"ruleId":"405","severity":1,"message":"406","line":127,"column":34,"nodeType":"407","messageId":"408","endLine":127,"endColumn":36},{"ruleId":"405","severity":1,"message":"406","line":130,"column":45,"nodeType":"407","messageId":"408","endLine":130,"endColumn":47},{"ruleId":"405","severity":1,"message":"406","line":133,"column":36,"nodeType":"407","messageId":"408","endLine":133,"endColumn":38},{"ruleId":"405","severity":1,"message":"406","line":136,"column":39,"nodeType":"407","messageId":"408","endLine":136,"endColumn":41},{"ruleId":"399","severity":1,"message":"416","line":187,"column":19,"nodeType":"401","messageId":"402","endLine":187,"endColumn":24},{"ruleId":"405","severity":1,"message":"406","line":196,"column":14,"nodeType":"407","messageId":"408","endLine":196,"endColumn":16},{"ruleId":"405","severity":1,"message":"406","line":200,"column":21,"nodeType":"407","messageId":"408","endLine":200,"endColumn":23},{"ruleId":"405","severity":1,"message":"406","line":204,"column":21,"nodeType":"407","messageId":"408","endLine":204,"endColumn":23},{"ruleId":"405","severity":1,"message":"406","line":208,"column":21,"nodeType":"407","messageId":"408","endLine":208,"endColumn":23},{"ruleId":"405","severity":1,"message":"406","line":212,"column":21,"nodeType":"407","messageId":"408","endLine":212,"endColumn":23},{"ruleId":"405","severity":1,"message":"406","line":216,"column":21,"nodeType":"407","messageId":"408","endLine":216,"endColumn":23},{"ruleId":"405","severity":1,"message":"406","line":220,"column":21,"nodeType":"407","messageId":"408","endLine":220,"endColumn":23},{"ruleId":"405","severity":1,"message":"406","line":224,"column":21,"nodeType":"407","messageId":"408","endLine":224,"endColumn":23},{"ruleId":"405","severity":1,"message":"406","line":228,"column":21,"nodeType":"407","messageId":"408","endLine":228,"endColumn":23},{"ruleId":"405","severity":1,"message":"406","line":232,"column":21,"nodeType":"407","messageId":"408","endLine":232,"endColumn":23},{"ruleId":"405","severity":1,"message":"406","line":236,"column":21,"nodeType":"407","messageId":"408","endLine":236,"endColumn":23},{"ruleId":"405","severity":1,"message":"406","line":240,"column":21,"nodeType":"407","messageId":"408","endLine":240,"endColumn":23},{"ruleId":"399","severity":1,"message":"471","line":249,"column":19,"nodeType":"401","messageId":"402","endLine":249,"endColumn":26},{"ruleId":"399","severity":1,"message":"471","line":264,"column":19,"nodeType":"401","messageId":"402","endLine":264,"endColumn":26},{"ruleId":"405","severity":1,"message":"420","line":269,"column":19,"nodeType":"407","messageId":"408","endLine":269,"endColumn":21},{"ruleId":"399","severity":1,"message":"409","line":275,"column":11,"nodeType":"401","messageId":"402","endLine":275,"endColumn":19},{"ruleId":"405","severity":1,"message":"406","line":368,"column":40,"nodeType":"407","messageId":"408","endLine":368,"endColumn":42},{"ruleId":"405","severity":1,"message":"406","line":370,"column":44,"nodeType":"407","messageId":"408","endLine":370,"endColumn":46},{"ruleId":"405","severity":1,"message":"406","line":376,"column":57,"nodeType":"407","messageId":"408","endLine":376,"endColumn":59},{"ruleId":"405","severity":1,"message":"406","line":635,"column":30,"nodeType":"407","messageId":"408","endLine":635,"endColumn":32},{"ruleId":"405","severity":1,"message":"406","line":77,"column":26,"nodeType":"407","messageId":"408","endLine":77,"endColumn":28},{"ruleId":"405","severity":1,"message":"406","line":77,"column":53,"nodeType":"407","messageId":"408","endLine":77,"endColumn":55},{"ruleId":"405","severity":1,"message":"406","line":77,"column":68,"nodeType":"407","messageId":"408","endLine":77,"endColumn":70},{"ruleId":"405","severity":1,"message":"406","line":80,"column":29,"nodeType":"407","messageId":"408","endLine":80,"endColumn":31},{"ruleId":"405","severity":1,"message":"406","line":83,"column":38,"nodeType":"407","messageId":"408","endLine":83,"endColumn":40},{"ruleId":"405","severity":1,"message":"406","line":86,"column":38,"nodeType":"407","messageId":"408","endLine":86,"endColumn":40},{"ruleId":"428","severity":1,"message":"469","line":129,"column":5,"nodeType":"432","endLine":129,"endColumn":12,"suggestions":"486"},{"ruleId":"405","severity":1,"message":"406","line":158,"column":14,"nodeType":"407","messageId":"408","endLine":158,"endColumn":16},{"ruleId":"405","severity":1,"message":"406","line":160,"column":21,"nodeType":"407","messageId":"408","endLine":160,"endColumn":23},{"ruleId":"405","severity":1,"message":"420","line":160,"column":40,"nodeType":"407","messageId":"408","endLine":160,"endColumn":42},{"ruleId":"405","severity":1,"message":"406","line":163,"column":21,"nodeType":"407","messageId":"408","endLine":163,"endColumn":23},{"ruleId":"405","severity":1,"message":"420","line":163,"column":40,"nodeType":"407","messageId":"408","endLine":163,"endColumn":42},{"ruleId":"399","severity":1,"message":"409","line":210,"column":11,"nodeType":"401","messageId":"402","endLine":210,"endColumn":19},{"ruleId":"405","severity":1,"message":"406","line":311,"column":43,"nodeType":"407","messageId":"408","endLine":311,"endColumn":45},{"ruleId":"399","severity":1,"message":"487","line":3,"column":10,"nodeType":"401","messageId":"402","endLine":3,"endColumn":18},{"ruleId":"399","severity":1,"message":"488","line":5,"column":10,"nodeType":"401","messageId":"402","endLine":5,"endColumn":16},{"ruleId":"399","severity":1,"message":"489","line":7,"column":10,"nodeType":"401","messageId":"402","endLine":7,"endColumn":13},{"ruleId":"399","severity":1,"message":"422","line":11,"column":11,"nodeType":"401","messageId":"402","endLine":11,"endColumn":16},{"ruleId":"399","severity":1,"message":"490","line":11,"column":18,"nodeType":"401","messageId":"402","endLine":11,"endColumn":28},{"ruleId":"399","severity":1,"message":"443","line":15,"column":9,"nodeType":"401","messageId":"402","endLine":15,"endColumn":16},{"ruleId":"399","severity":1,"message":"491","line":17,"column":12,"nodeType":"401","messageId":"402","endLine":17,"endColumn":23},{"ruleId":"399","severity":1,"message":"492","line":21,"column":12,"nodeType":"401","messageId":"402","endLine":21,"endColumn":25},{"ruleId":"399","severity":1,"message":"435","line":1,"column":16,"nodeType":"401","messageId":"402","endLine":1,"endColumn":21},{"ruleId":"405","severity":1,"message":"406","line":31,"column":35,"nodeType":"407","messageId":"408","endLine":31,"endColumn":37},{"ruleId":"428","severity":1,"message":"493","line":58,"column":12,"nodeType":"432","endLine":58,"endColumn":29,"suggestions":"494"},{"ruleId":"399","severity":1,"message":"416","line":72,"column":23,"nodeType":"401","messageId":"402","endLine":72,"endColumn":28},{"ruleId":"405","severity":1,"message":"406","line":74,"column":59,"nodeType":"407","messageId":"408","endLine":74,"endColumn":61},{"ruleId":"405","severity":1,"message":"406","line":89,"column":28,"nodeType":"407","messageId":"408","endLine":89,"endColumn":30},{"ruleId":"405","severity":1,"message":"406","line":91,"column":37,"nodeType":"407","messageId":"408","endLine":91,"endColumn":39},{"ruleId":"405","severity":1,"message":"406","line":113,"column":59,"nodeType":"407","messageId":"408","endLine":113,"endColumn":61},{"ruleId":"399","severity":1,"message":"409","line":127,"column":15,"nodeType":"401","messageId":"402","endLine":127,"endColumn":23},{"ruleId":"405","severity":1,"message":"420","line":39,"column":26,"nodeType":"407","messageId":"408","endLine":39,"endColumn":28},{"ruleId":"399","severity":1,"message":"409","line":53,"column":19,"nodeType":"401","messageId":"402","endLine":53,"endColumn":27},{"ruleId":"410","severity":1,"message":"411","line":82,"column":13,"nodeType":"412","endLine":82,"endColumn":79},{"ruleId":"405","severity":1,"message":"406","line":127,"column":34,"nodeType":"407","messageId":"408","endLine":127,"endColumn":36},{"ruleId":"405","severity":1,"message":"406","line":36,"column":26,"nodeType":"407","messageId":"408","endLine":36,"endColumn":28},{"ruleId":"399","severity":1,"message":"409","line":45,"column":19,"nodeType":"401","messageId":"402","endLine":45,"endColumn":27},{"ruleId":"405","severity":1,"message":"406","line":104,"column":34,"nodeType":"407","messageId":"408","endLine":104,"endColumn":36},"no-native-reassign",["495"],"no-negated-in-lhs",["496"],"no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'MenuItem' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'response' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'CircularProgress' is defined but never used.","'value' is assigned a value but never used.","'name' is assigned a value but never used.","'index' is assigned a value but never used.","'newValues' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'showSidebar' is assigned a value but never used.","'token' is assigned a value but never used.","'FaIcons' is defined but never used.","'IoIcons' is defined but never used.","'useContext' is defined but never used.","'history' is assigned a value but never used.","'handleErrors' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","FunctionExpression","React Hook useEffect has missing dependencies: 'body' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["497"],"'React' is defined but never used.","'Paper' is defined but never used.","'TextField' is defined but never used.","'AppBar' is defined but never used.","'Box' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'InputLabel' is defined but never used.","'useEffect' is defined but never used.","'classes' is assigned a value but never used.","'Grid' is defined but never used.","'format' is defined but never used.","'values' is assigned a value but never used.","'setValues' is assigned a value but never used.","'data' is assigned a value but never used.","'Component' is defined but never used.","'Formik' is defined but never used.","'Field' is defined but never used.","'Form' is defined but never used.","'useFormik' is defined but never used.","'FieldArray' is defined but never used.","'Checkbox' is defined but never used.","'FormGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'ScopedCssBaseline' is defined but never used.","'lifecycle' is defined but never used.","'componentDidMount' is defined but never used.","'componentDidUpdate' is defined but never used.","'ListItemText' is defined but never used.","'withStyles' is defined but never used.","'DialogActions' is defined but never used.","'Tooltip' is defined but never used.","'purple' is defined but never used.","'onlyLetters' is defined but never used.","'methods' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["498"],"'checked' is assigned a value but never used.","'select' is assigned a value but never used.","'currencyMask' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'useState' is defined but never used.","'TablePagination' is defined but never used.","'Table' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","ArrowFunctionExpression","'CurrencyFormat' is assigned a value but never used.","'Select' is defined but never used.","'onlyNumbers' is defined but never used.","'person' is assigned a value but never used.",["499"],"'useFetch' is defined but never used.","'Button' is defined but never used.","'url' is defined but never used.","'userLogged' is assigned a value but never used.","'novaMateria' is defined but never used.","'editarMateria' is defined but never used.","React Hook useEffect has a missing dependency: 'userLogged.empresaId'. Either include it or remove the dependency array.",["500"],"no-global-assign","no-unsafe-negation",{"desc":"501","fix":"502"},{"desc":"503","fix":"504"},{"desc":"505","fix":"506"},{"desc":"507","fix":"508"},"Update the dependencies array to be: [url, method, token, body]",{"range":"509","text":"510"},"Update the dependencies array to be: [values, values.QtdAulas]",{"range":"511","text":"512"},"Update the dependencies array to be: [todos, values]",{"range":"513","text":"514"},"Update the dependencies array to be: [retornoContrato, userLogged.empresaId]",{"range":"515","text":"516"},[894,906],"[url, method, token, body]",[5838,5855],"[values, values.QtdAulas]",[3866,3873],"[todos, values]",[2076,2093],"[retornoContrato, userLogged.empresaId]"]